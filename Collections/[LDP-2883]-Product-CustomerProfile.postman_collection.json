{
	"info": {
		"_postman_id": "1f12c0dd-f78b-4903-850e-29351e82594b",
		"name": "Customer Profile",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "17168410"
	},
	"item": [
		{
			"name": "Customer Controller",
			"item": [
				{
					"name": "POST Customer Profile",
					"item": [
						{
							"name": "Customer Domain - [TC-1]- [P] - Verify An API behavior to create customer profile with valid data set.",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successful POST request\", () => {",
											"  pm.expect(pm.response.code).to.be.oneOf([201,409]);",
											"});",
											"",
											"var responseData = pm.response.json();",
											"console.log(responseData)",
											"",
											"pm.test('Validate detail as profile already exists', function(){",
											"    pm.expect(responseData.details[0]).to.eql(\"Profile is already present\")",
											"})",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Loblaw-Tenant-ID",
										"value": "JOE_FRESH",
										"type": "default"
									},
									{
										"key": "X-Loblaw-authId",
										"value": "{{customerid}}",
										"type": "default"
									},
									{
										"key": "X-Loblaw-auth-provider",
										"value": "PCID",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"profile\": {\r\n            \"first_name\": \"test1\",\r\n            \"last_name\": \"Doe1\",\r\n            \"phone_number\": \"1222333445\",\r\n            \"phone_ext\": \"\",\r\n            \"terms_of_service\": true,\r\n            \"preferred_language\": \"ENGLISH\",\r\n            \"newsletter_signup\": true\r\n            \r\n        }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/customers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"customers"
									]
								}
							},
							"response": []
						},
						{
							"name": "Customer Domain - [TC-2]- [P] - Verify An API behavior to create customer profile which already exists",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successful POST request\", () => {",
											"  pm.expect(pm.response.code).to.be.oneOf([201,409]);",
											"});",
											"",
											"var responseData = pm.response.json();",
											"console.log(responseData)",
											"",
											"pm.test('Validate detail as profile already exists', function(){",
											"    pm.expect(responseData.details[0]).to.eql(\"Profile is already present\")",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Loblaw-Tenant-ID",
										"value": "JOE_FRESH",
										"type": "default"
									},
									{
										"key": "X-Loblaw-authId",
										"value": "{{customerid}}",
										"type": "default"
									},
									{
										"key": "X-Loblaw-auth-provider",
										"value": "PCID",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"profile\": {\r\n            \"first_name\": \"test1\",\r\n            \"last_name\": \"Doe1\",\r\n            \"phone_number\": \"1222333445\",\r\n            \"phone_ext\": \"\",\r\n            \"terms_of_service\": \"true\",\r\n            \"preferred_language\": \"ENGLISH\",\r\n            \"newsletter_signup\": true\r\n            \r\n        }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/customers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"customers"
									]
								}
							},
							"response": []
						},
						{
							"name": "Customer Domain - [TC-3]- [N] - Verify An API behavior to create customer profile with null firstname",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successful POST request\", () => {",
											"  pm.expect(pm.response.code).to.be.oneOf([201,409]);",
											"});",
											"",
											"var responseData = pm.response.json();",
											"console.log(responseData)",
											"",
											"pm.test('Validate detail as profile already exists', function(){",
											"    pm.expect(responseData.details[0]).to.eql(\"Profile is already present\")",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Loblaw-Tenant-ID",
										"value": "JOE_FRESH",
										"type": "default"
									},
									{
										"key": "X-Loblaw-authId",
										"value": "{{customerid}}",
										"type": "default"
									},
									{
										"key": "X-Loblaw-auth-provider",
										"value": "PCID",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"profile\": {\r\n            \"first_name\": \"\",\r\n            \"last_name\": \"Doe1\",\r\n            \"phone_number\": \"1222333445\",\r\n            \"phone_ext\": \"\",\r\n            \"terms_of_service\": true,\r\n            \"preferred_language\": \"ENGLISH\",\r\n            \"newsletter_signup\": true\r\n            \r\n        }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/customers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"customers"
									]
								}
							},
							"response": []
						},
						{
							"name": "Customer Domain - [TC-4]- [N] - Verify An API behavior to create customer profile with null lastname",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successful POST request\", () => {",
											"  pm.expect(pm.response.code).to.be.oneOf([201,409]);",
											"});",
											"",
											"var responseData = pm.response.json();",
											"console.log(responseData)",
											"",
											"pm.test('Validate detail as profile already exists', function(){",
											"    pm.expect(responseData.details[0]).to.eql(\"Profile is already present\")",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Loblaw-Tenant-ID",
										"value": "JOE_FRESH",
										"type": "default"
									},
									{
										"key": "X-Loblaw-authId",
										"value": "{{customerid}}",
										"type": "default"
									},
									{
										"key": "X-Loblaw-auth-provider",
										"value": "PCID",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"profile\": {\r\n            \"first_name\": \"test1\",\r\n            \"last_name\": \"\",\r\n            \"phone_number\": \"1222333445\",\r\n            \"phone_ext\": \"\",\r\n            \"terms_of_service\": true,\r\n            \"preferred_language\": \"ENGLISH\",\r\n            \"newsletter_signup\": true\r\n            \r\n        }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/customers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"customers"
									]
								}
							},
							"response": []
						},
						{
							"name": "Customer Domain - [TC-5]- [N] - Verify An API behavior to create customer profile with 4 digit phonenumber",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status Code | 400 Bad Request', function(){",
											"    pm.response.to.have.status(400)",
											"})",
											"",
											"var responseData = pm.response.json();",
											"console.log(responseData)",
											"",
											"pm.test('Phone number validation', function(){",
											"    pm.expect(responseData.details[0]).to.eql(\"Phone number is invalid\")",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Loblaw-Tenant-ID",
										"value": "JOE_FRESH",
										"type": "default"
									},
									{
										"key": "X-Loblaw-authId",
										"value": "{{customerid}}",
										"type": "default"
									},
									{
										"key": "X-Loblaw-auth-provider",
										"value": "PCID",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"profile\": {\r\n            \"first_name\": \"test1\",\r\n            \"last_name\": \"Doe1\",\r\n            \"phone_number\": \"1234\",\r\n            \"phone_ext\": \"\",\r\n            \"terms_of_service\": true,\r\n            \"preferred_language\": \"ENGLISH\",\r\n            \"newsletter_signup\": true\r\n            \r\n        }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/customers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"customers"
									]
								}
							},
							"response": []
						},
						{
							"name": "Customer Domain - [TC-7]- [N] - Verify An API behavior to create customer profile with termsofservice as string",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status Code | 400 Bad Request', function(){",
											"pm.response.to.have.status(400)",
											"})",
											"",
											"var responseData = pm.response.json();",
											"",
											"pm.test('Validate terms of service', function(){",
											"pm.expect(responseData.details[0]).to.eql(\"Invalid Headers\")",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Loblaw-Tenant-ID",
										"value": "JOE_FRESH",
										"type": "default"
									},
									{
										"key": "X-Loblaw-authd",
										"value": "{{customerid}}",
										"type": "default"
									},
									{
										"key": "X-Loblaw-auth-provider",
										"value": "PCID",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"profile\": {\r\n            \"first_name\": \"test1\",\r\n            \"last_name\": \"Doe1\",\r\n            \"phone_number\": \"1222333445\",\r\n            \"phone_ext\": \"\",\r\n            \"terms_of_service\": \"true\",\r\n            \"preferred_language\": \"ENGLISH\",\r\n            \"newsletter_signup\": true\r\n            \r\n        }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/customers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"customers"
									]
								}
							},
							"response": []
						},
						{
							"name": "Customer Domain - [TC-8]- [N] - Verify An API behavior to create customer profile with preffered language as French",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successful POST request\", () => {",
											"  pm.expect(pm.response.code).to.be.oneOf([201,409]);",
											"});",
											"",
											"var responseData = pm.response.json();",
											"console.log(responseData)",
											"",
											"pm.test('Validate detail as profile already exists', function(){",
											"    pm.expect(responseData.details[0]).to.eql(\"Profile is already present\")",
											"})",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Loblaw-Tenant-ID",
										"value": "JOE_FRESH",
										"type": "default"
									},
									{
										"key": "X-Loblaw-authId",
										"value": "{{customerid}}",
										"type": "default"
									},
									{
										"key": "X-Loblaw-auth-provider",
										"value": "PCID",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"profile\": {\r\n            \"first_name\": \"test1\",\r\n            \"last_name\": \"Doe1\",\r\n            \"phone_number\": \"1222333445\",\r\n            \"phone_ext\": \"\",\r\n            \"terms_of_service\": true,\r\n            \"preferred_language\": \"FRENCH\",\r\n            \"newsletter_signup\": true\r\n            \r\n        }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/customers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"customers"
									]
								}
							},
							"response": []
						},
						{
							"name": "Customer Domain - [TC-14]- [N] - Verify An API behavior to create customer profile with first name as special character",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successful POST request\", () => {",
											"  pm.expect(pm.response.code).to.be.oneOf([201,409]);",
											"});",
											"",
											"var responseData = pm.response.json();",
											"console.log(responseData)",
											"",
											"pm.test('Validate detail as profile already exists', function(){",
											"    pm.expect(responseData.details[0]).to.eql(\"Profile is already present\")",
											"})",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Loblaw-Tenant-ID",
										"value": "JOE_FRESH",
										"type": "default"
									},
									{
										"key": "X-Loblaw-authId",
										"value": "bf9c9da7-25bc-4975-8cd8-73461c2ef286",
										"type": "default"
									},
									{
										"key": "X-Loblaw-auth-provider",
										"value": "PCID",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"profile\": {\r\n            \"first_name\": \"@@asb122\",\r\n            \"last_name\": \"Doe1\",\r\n            \"phone_number\": \"1222333445\",\r\n            \"phone_ext\": \"\",\r\n            \"terms_of_service\": true,\r\n            \"preferred_language\": \"ENGLISH\",\r\n            \"newsletter_signup\": true\r\n            \r\n        }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/customers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"customers"
									]
								}
							},
							"response": []
						},
						{
							"name": "Customer Domain - [TC-15]- [N] - Verify An API behavior to create customer profile with first name as script",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status Code | 400 Bad Request', function(){",
											"    pm.response.to.have.status(400)",
											"})",
											"",
											"var responseData = pm.response.json();",
											"console.log(responseData)",
											"",
											"pm.test('Validate name', function(){",
											"    pm.expect(responseData.details[0]).to.eql(\"Payload is invalid.\")",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Loblaw-Tenant-ID",
										"value": "JOE_FRESH",
										"type": "default"
									},
									{
										"key": "X-Loblaw-authId",
										"value": "PCID",
										"type": "default"
									},
									{
										"key": "X-Loblaw-auth-provider",
										"value": "PCID",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"profile\": {\r\n            \"first_name\": \"<script>alert <script> \",\r\n            \"last_name\": \"Doe1\",\r\n            \"phone_number\": \"1222333445\",\r\n            \"phone_ext\": \"\",\r\n            \"terms_of_service\": true,\r\n            \"preferred_language\": \"ENGLISH\",\r\n            \"newsletter_signup\": true\r\n            \r\n        }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/customers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"customers"
									]
								}
							},
							"response": []
						},
						{
							"name": "Customer Domain - [TC-16]- [N] - Verify An API behavior to create customer profile with first name as integer",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successful POST request\", () => {",
											"  pm.expect(pm.response.code).to.be.oneOf([201,409]);",
											"});",
											"var responseData = pm.response.json();",
											"console.log(responseData)",
											"",
											"pm.test('Validate detail as profile already exists', function(){",
											"    pm.expect(responseData.details[0]).to.eql(\"Profile is already present\")",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Loblaw-Tenant-ID",
										"value": "JOE_FRESH",
										"type": "default"
									},
									{
										"key": "X-Loblaw-authId",
										"value": "{{customerid}}",
										"type": "default"
									},
									{
										"key": "X-Loblaw-auth-provider",
										"value": "PCID",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"profile\": {\r\n            \"first_name\": 1234,\r\n            \"last_name\": \"Doe1\",\r\n            \"phone_number\": \"1222333445\",\r\n            \"phone_ext\": \"\",\r\n            \"terms_of_service\": true,\r\n            \"preferred_language\": \"ENGLISH\",\r\n            \"newsletter_signup\": true\r\n            \r\n        }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/customers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"customers"
									]
								}
							},
							"response": []
						},
						{
							"name": "Customer Domain - [TC-17]- [N] - Verify An API behavior to create customer profile with first name as special character",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successful POST request\", () => {",
											"  pm.expect(pm.response.code).to.be.oneOf([201,409]);",
											"});",
											"",
											"var responseData = pm.response.json();",
											"console.log(responseData)",
											"",
											"pm.test('Validate detail as profile already exists', function(){",
											"    pm.expect(responseData.details[0]).to.eql(\"Profile is already present\")",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Loblaw-Tenant-ID",
										"value": "JOE_FRESH",
										"type": "default"
									},
									{
										"key": "X-Loblaw-authId",
										"value": "{{customerid}}",
										"type": "default"
									},
									{
										"key": "X-Loblaw-auth-provider",
										"value": "PCID",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"profile\": {\r\n            \"first_name\": \"@@aa\",\r\n            \"last_name\": \"Doe1\",\r\n            \"phone_number\": \"1222333445\",\r\n            \"phone_ext\": \"\",\r\n            \"terms_of_service\": true,\r\n            \"preferred_language\": \"ENGLISH\",\r\n            \"newsletter_signup\": true\r\n            \r\n        }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/customers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"customers"
									]
								}
							},
							"response": []
						},
						{
							"name": "Customer Domain - [TC-19]- [N] - Verify An API behavior to create customer profile with last name as script",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status Code | 400 Bad Request', function(){",
											"    pm.response.to.have.status(400)",
											"})",
											"",
											"var responseData = pm.response.json();",
											"console.log(responseData)",
											"",
											"pm.test('Validate detail as profile already exists', function(){",
											"    pm.expect(responseData.details[0]).to.eql(\"Payload is invalid.\")",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Loblaw-Tenant-ID",
										"value": "JOE_FRESH",
										"type": "default"
									},
									{
										"key": "X-Loblaw-authId",
										"value": "{{customerid}}",
										"type": "default"
									},
									{
										"key": "X-Loblaw-auth-provider",
										"value": "PCID",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"profile\": {\r\n            \"first_name\": \"test1\",\r\n            \"last_name\": \"<script>alert <script>\",\r\n            \"phone_number\": \"1222333445\",\r\n            \"phone_ext\": \"\",\r\n            \"terms_of_service\": true,\r\n            \"preferred_language\": \"ENGLISH\",\r\n            \"newsletter_signup\": true\r\n            \r\n        }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/customers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"customers"
									]
								}
							},
							"response": []
						},
						{
							"name": "Customer Domain - [TC-20]- [N] - Verify An API behavior to create customer profile with last name as integer",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successful POST request\", () => {",
											"  pm.expect(pm.response.code).to.be.oneOf([201,409]);",
											"});",
											"var responseData = pm.response.json();",
											"console.log(responseData)",
											"",
											"pm.test('Validate detail as profile already exists', function(){",
											"    pm.expect(responseData.details[0]).to.eql(\"Profile is already present\")",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Loblaw-Tenant-ID",
										"value": "JOE_FRESH",
										"type": "default"
									},
									{
										"key": "X-Loblaw-authId",
										"value": "{{customerid}}",
										"type": "default"
									},
									{
										"key": "X-Loblaw-auth-provider",
										"value": "PCID",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"profile\": {\r\n            \"first_name\": \"test1\",\r\n            \"last_name\": \"11111\",\r\n            \"phone_number\": \"1222333445\",\r\n            \"phone_ext\": \"\",\r\n            \"terms_of_service\": true,\r\n            \"preferred_language\": \"ENGLISH\",\r\n            \"newsletter_signup\": true\r\n            \r\n        }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/customers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"customers"
									]
								}
							},
							"response": []
						},
						{
							"name": "Customer Domain - [TC-21]- [N] - Verify An API behavior to create customer profile with phone number as string",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status Code | 409 Conflict', function(){",
											"    pm.response.to.have.status(409)",
											"})",
											"",
											"var responseData = pm.response.json();",
											"console.log(responseData)",
											"",
											"pm.test('Validate detail as profile already exists', function(){",
											"    pm.expect(responseData.details[0]).to.eql(\"Profile is already present\")",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Loblaw-Tenant-ID",
										"value": "JOE_FRESH",
										"type": "default"
									},
									{
										"key": "X-Loblaw-authId",
										"value": "{{customerid}}",
										"type": "default"
									},
									{
										"key": "X-Loblaw-auth-provider",
										"value": "PCID",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"profile\": {\r\n            \"first_name\": \"test1\",\r\n            \"last_name\": \"11111\",\r\n            \"phone_number\": \"1222333445\",\r\n            \"phone_ext\": \"\",\r\n            \"terms_of_service\": true,\r\n            \"preferred_language\": \"ENGLISH\",\r\n            \"newsletter_signup\": true\r\n            \r\n        }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/customers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"customers"
									]
								}
							},
							"response": []
						},
						{
							"name": "Customer Domain - [TC-22]- [N] - Verify An API behavior to create customer profile with phone number as A1A2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status Code | 400 Bad Request', function(){",
											"    pm.response.to.have.status(400)",
											"})",
											"",
											"var responseData = pm.response.json();",
											"console.log(responseData)",
											"",
											"pm.test('Validate phone number', function(){",
											"    pm.expect(responseData.details[0]).to.eql(\"Phone number is invalid\")",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Loblaw-Tenant-ID",
										"value": "JOE_FRESH",
										"type": "default"
									},
									{
										"key": "X-Loblaw-authId",
										"value": "{{customerid}}",
										"type": "default"
									},
									{
										"key": "X-Loblaw-auth-provider",
										"value": "PCID",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"profile\": {\r\n            \"first_name\": \"test1\",\r\n            \"last_name\": \"Doe1\",\r\n            \"phone_number\": \"A1A2\",\r\n            \"phone_ext\": \"\",\r\n            \"terms_of_service\": true,\r\n            \"preferred_language\": \"ENGLISH\",\r\n            \"newsletter_signup\": true\r\n            \r\n        }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/customers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"customers"
									]
								}
							},
							"response": []
						},
						{
							"name": "Customer Domain - [TC-23]- [N] - Verify An API behavior to create customer profile with phone number as script",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status Code | 400 Bad Request', function(){",
											"    pm.response.to.have.status(400)",
											"})",
											"",
											"var responseData = pm.response.json();",
											"console.log(responseData)",
											"",
											"pm.test('Validate name', function(){",
											"    pm.expect(responseData.details[0]).to.eql(\"Phone number is invalid\")",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Loblaw-Tenant-ID",
										"value": "JOE_FRESH",
										"type": "default"
									},
									{
										"key": "X-Loblaw-authId",
										"value": "{{customerid}}",
										"type": "default"
									},
									{
										"key": "X-Loblaw-auth-provider",
										"value": "PCID",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"profile\": {\r\n            \"first_name\": \"test1\",\r\n            \"last_name\": \"Doe1\",\r\n            \"phone_number\": \"<script>alert <script> \",\r\n            \"phone_ext\": \"\",\r\n            \"terms_of_service\": true,\r\n            \"preferred_language\": \"ENGLISH\",\r\n            \"newsletter_signup\": true\r\n            \r\n        }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/customers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"customers"
									]
								}
							},
							"response": []
						},
						{
							"name": "Customer Domain - [TC-24]- [N] - Verify An API behavior to create customer profile with phone number as null",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successful POST request\", () => {",
											"  pm.expect(pm.response.code).to.be.oneOf([201,409]);",
											"});",
											"var responseData = pm.response.json();",
											"console.log(responseData)",
											"",
											"pm.test('Validate detail as profile already exists', function(){",
											"    pm.expect(responseData.details[0]).to.eql(\"Profile is already present\")",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Loblaw-Tenant-ID",
										"value": "JOE_FRESH",
										"type": "default"
									},
									{
										"key": "X-Loblaw-authId",
										"value": "{{customerid}}",
										"type": "default"
									},
									{
										"key": "X-Loblaw-auth-provider",
										"value": "PCID",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"profile\": {\r\n            \"first_name\": \"test1\",\r\n            \"last_name\": \"Doe1\",\r\n            \"phone_number\": \"\",\r\n            \"phone_ext\": \"\",\r\n            \"terms_of_service\": true,\r\n            \"preferred_language\": \"ENGLISH\",\r\n            \"newsletter_signup\": true\r\n            \r\n        }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/customers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"customers"
									]
								}
							},
							"response": []
						},
						{
							"name": "Customer Domain - [TC-27]- [N] - Verify An API behavior to create customer profile with termsofservice as 0",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status Code | 409 Conflict', function(){",
											"    pm.response.to.have.status(409)",
											"})",
											"",
											"var responseData = pm.response.json();",
											"console.log(responseData)",
											"",
											"pm.test('Validate detail as profile already exists', function(){",
											"    pm.expect(responseData.details[0]).to.eql(\"Profile is already present\")",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Loblaw-Tenant-ID",
										"value": "JOE_FRESH",
										"type": "default"
									},
									{
										"key": "X-Loblaw-authId",
										"value": "{{customerid}}",
										"type": "default"
									},
									{
										"key": "X-Loblaw-auth-provider",
										"value": "PCID",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"profile\": {\r\n            \"first_name\": \"test1\",\r\n            \"last_name\": \"Doe1\",\r\n            \"phone_number\": \"1222333445\",\r\n            \"phone_ext\": \"\",\r\n            \"terms_of_service\": 0,\r\n            \"preferred_language\": \"ENGLISH\",\r\n            \"newsletter_signup\": true\r\n            \r\n        }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/customers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"customers"
									]
								}
							},
							"response": []
						},
						{
							"name": "Customer Domain - [TC-28]- [N] - Verify An API behavior to create customer profile with termsofservice as 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successful POST request\", () => {",
											"  pm.expect(pm.response.code).to.be.oneOf([201,409]);",
											"});",
											"var responseData = pm.response.json();",
											"console.log(responseData)",
											"",
											"pm.test('Validate detail as profile already exists', function(){",
											"    pm.expect(responseData.details[0]).to.eql(\"Profile is already present\")",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Loblaw-Tenant-ID",
										"value": "JOE_FRESH",
										"type": "default"
									},
									{
										"key": "X-Loblaw-authId",
										"value": "{{customerid}}",
										"type": "default"
									},
									{
										"key": "X-Loblaw-auth-provider",
										"value": "PCID",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"profile\": {\r\n            \"first_name\": \"test1\",\r\n            \"last_name\": \"Doe1\",\r\n            \"phone_number\": \"1222333445\",\r\n            \"phone_ext\": \"\",\r\n            \"terms_of_service\": 1,\r\n            \"preferred_language\": \"ENGLISH\",\r\n            \"newsletter_signup\": true\r\n            \r\n        }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/customers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"customers"
									]
								}
							},
							"response": []
						},
						{
							"name": "Customer Domain - [TC-29]- [N] - Verify An API behavior to create customer profile with termsofservice as null",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successful POST request\", () => {",
											"  pm.expect(pm.response.code).to.be.oneOf([201,409]);",
											"});",
											"var responseData = pm.response.json();",
											"console.log(responseData)",
											"",
											"pm.test('Validate detail as profile already exists', function(){",
											"    pm.expect(responseData.details[0]).to.eql(\"Profile is already present\")",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Loblaw-Tenant-ID",
										"value": "JOE_FRESH",
										"type": "default"
									},
									{
										"key": "X-Loblaw-authId",
										"value": "{{customerid}}",
										"type": "default"
									},
									{
										"key": "X-Loblaw-auth-provider",
										"value": "PCID",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"profile\": {\r\n            \"first_name\": \"test1\",\r\n            \"last_name\": \"Doe1\",\r\n            \"phone_number\": \"1222333445\",\r\n            \"phone_ext\": \"\",\r\n            \"terms_of_service\": null,\r\n            \"preferred_language\": \"ENGLISH\",\r\n            \"newsletter_signup\": true\r\n            \r\n        }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/customers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"customers"
									]
								}
							},
							"response": []
						},
						{
							"name": "Customer Domain - [TC-30]- [N] - Verify An API behavior to create customer profile with preffered language as integer",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status Code | 400 Bad Request', function(){",
											"    pm.response.to.have.status(400)",
											"})",
											"",
											"var responseData = pm.response.json();",
											"console.log(responseData)",
											"",
											"pm.test('Validate prefered language', function(){",
											"    pm.expect(responseData.details[0]).to.eql(\"Language is invalid\")",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Loblaw-Tenant-ID",
										"value": "JOE_FRESH",
										"type": "default"
									},
									{
										"key": "X-Loblaw-authId",
										"value": "{{customerid}}",
										"type": "default"
									},
									{
										"key": "X-Loblaw-auth-provider",
										"value": "PCID",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"profile\": {\r\n            \"first_name\": \"test1\",\r\n            \"last_name\": \"Doe1\",\r\n            \"phone_number\": \"1222333445\",\r\n            \"phone_ext\": \"\",\r\n            \"terms_of_service\": true,\r\n            \"preferred_language\": 12345,\r\n            \"newsletter_signup\": true\r\n            \r\n        }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/customers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"customers"
									]
								}
							},
							"response": []
						},
						{
							"name": "Customer Domain - [TC-31]- [N] - Verify An API behavior to create customer profile with preffered language as null",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successful POST request\", () => {",
											"  pm.expect(pm.response.code).to.be.oneOf([201,409]);",
											"});",
											"var responseData = pm.response.json();",
											"console.log(responseData)",
											"",
											"pm.test('Validate detail as profile already exists', function(){",
											"    pm.expect(responseData.details[0]).to.eql(\"Profile is already present\")",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Loblaw-Tenant-ID",
										"value": "JOE_FRESH",
										"type": "default"
									},
									{
										"key": "X-Loblaw-authId",
										"value": "{{customerid}}",
										"type": "default"
									},
									{
										"key": "X-Loblaw-auth-provider",
										"value": "PCID",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"profile\": {\r\n            \"first_name\": \"test1\",\r\n            \"last_name\": \"Doe1\",\r\n            \"phone_number\": \"1222333445\",\r\n            \"phone_ext\": \"\",\r\n            \"terms_of_service\": true,\r\n            \"preferred_language\": null,\r\n            \"newsletter_signup\": true\r\n            \r\n        }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/customers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"customers"
									]
								}
							},
							"response": []
						},
						{
							"name": "Customer Domain - [TC-32]- [N] - Verify An API behavior to create customer profile with preffered language as abc#$ ###",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status Code | 400 Bad Request', function(){",
											"    pm.response.to.have.status(400)",
											"})",
											"",
											"var responseData = pm.response.json();",
											"console.log(responseData)",
											"",
											"pm.test('Validate language', function(){",
											"    pm.expect(responseData.details[0]).to.eql(\"Language is invalid\")",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Loblaw-Tenant-ID",
										"value": "JOE_FRESH",
										"type": "default"
									},
									{
										"key": "X-Loblaw-authId",
										"value": "{{customerid}}",
										"type": "default"
									},
									{
										"key": "X-Loblaw-auth-provider",
										"value": "PCID",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"profile\": {\r\n            \"first_name\": \"test1\",\r\n            \"last_name\": \"Doe1\",\r\n            \"phone_number\": \"1222333445\",\r\n            \"phone_ext\": \"\",\r\n            \"terms_of_service\": true,\r\n            \"preferred_language\": \"abcd@#\",\r\n            \"newsletter_signup\": true\r\n            \r\n        }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/customers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"customers"
									]
								}
							},
							"response": []
						},
						{
							"name": "Customer Domain - [TC-46]- [N] - Verify An API behavior to create customer profile with tanent id  as null",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status Code | 400 Bad Request', function(){",
											"    pm.response.to.have.status(400)",
											"})",
											"",
											"var responseData = pm.response.json();",
											"",
											"pm.test('Validate Profile Data', function(){",
											"pm.expect(responseData.details[0]).to.eql(\"Invalid Headers\")",
											"})",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Loblaw-Tenant-ID",
										"value": "",
										"type": "default"
									},
									{
										"key": "X-Loblaw-authId",
										"value": "{{customerid}}",
										"type": "default"
									},
									{
										"key": "X-Loblaw-auth-provider",
										"value": "PCID",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"profile\": {\r\n            \"first_name\": \"test1\",\r\n            \"last_name\": \"Doe1\",\r\n            \"phone_number\": \"1222333445\",\r\n            \"phone_ext\": \"\",\r\n            \"terms_of_service\": true,\r\n            \"preferred_language\": \"ENGLISH\",\r\n            \"newsletter_signup\": true\r\n            \r\n        }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/customers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"customers"
									]
								}
							},
							"response": []
						},
						{
							"name": "Customer Domain - [TC-47]- [N] - Verify An API behavior to create customer profile with tanent id  as invalid",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status Code | 400 Bad Request', function(){",
											"    pm.response.to.have.status(400)",
											"})",
											"",
											"var responseData = pm.response.json();",
											"",
											"pm.test('Validate Profile Data', function(){",
											"pm.expect(responseData.details[0]).to.eql(\"Invalid Headers\")",
											"})",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Loblaw-Tenant-ID",
										"value": "JOE_FRESHHH",
										"type": "default"
									},
									{
										"key": "X-Loblaw-authId",
										"value": "{{customerid}}",
										"type": "default"
									},
									{
										"key": "X-Loblaw-auth-provider",
										"value": "PCID",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"profile\": {\r\n            \"first_name\": \"test1\",\r\n            \"last_name\": \"Doe1\",\r\n            \"phone_number\": \"1222333445\",\r\n            \"phone_ext\": \"\",\r\n            \"terms_of_service\": true,\r\n            \"preferred_language\": \"ENGLISH\",\r\n            \"newsletter_signup\": true\r\n            \r\n        }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/customers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"customers"
									]
								}
							},
							"response": []
						},
						{
							"name": "Customer Domain - [TC-48]- [N] - Verify An API behavior to create customer profile with customer id as null",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status Code | 400 Bad Request', function(){",
											"    pm.response.to.have.status(400)",
											"})",
											"",
											"var responseData = pm.response.json();",
											"",
											"pm.test('Validate Profile Data', function(){",
											"pm.expect(responseData.details[0]).to.eql(\"Invalid Headers\")",
											"})",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Loblaw-Tenant-ID",
										"value": "JOE_FRESH",
										"type": "default"
									},
									{
										"key": "X-Loblaw-authId",
										"value": "",
										"type": "default"
									},
									{
										"key": "X-Loblaw-auth-provider",
										"value": "PCID",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"profile\": {\r\n            \"first_name\": \"test1\",\r\n            \"last_name\": \"Doe1\",\r\n            \"phone_number\": \"1222333445\",\r\n            \"phone_ext\": \"\",\r\n            \"terms_of_service\": true,\r\n            \"preferred_language\": \"ENGLISH\",\r\n            \"newsletter_signup\": true\r\n            \r\n        }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/customers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"customers"
									]
								}
							},
							"response": []
						},
						{
							"name": "Customer Domain - [TC-49]- [N] - Verify An API behavior to create customer profile with customer id as invalid",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status Code | 500 Internal Server Error', function(){",
											"pm.response.to.have.status(500)",
											"})",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Loblaw-Tenant-ID",
										"value": "JOE_FRESH",
										"type": "default"
									},
									{
										"key": "X-Loblaw-authId",
										"value": "1234555",
										"type": "default"
									},
									{
										"key": "X-Loblaw-auth-provider",
										"value": "PCID",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"profile\": {\r\n            \"first_name\": \"test1\",\r\n            \"last_name\": \"Doe1\",\r\n            \"phone_number\": \"1222333445\",\r\n            \"phone_ext\": \"\",\r\n            \"terms_of_service\": true,\r\n            \"preferred_language\": \"ENGLISH\",\r\n            \"newsletter_signup\": true\r\n            \r\n        }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/customers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"customers"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "GET Customer by customerId",
					"item": [
						{
							"name": "Customer Domain - [TC-1]- [P] - Verify an API behaviour to get customer with valid customer id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status Code | 200 OK', function(){",
											"    pm.response.to.have.status(200)",
											"})",
											"",
											"var responseData = pm.response.json();",
											"console.log(responseData)",
											"",
											"pm.test('Validate detail as profile already exists', function(){",
											"    pm.expect(responseData.customer_id).to.eql(\"6a2d5016-47c3-4bf5-a6d8-b0baa5a35d25\")",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Loblaw-Tenant-ID",
										"value": "JOE_FRESH",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOMemberInfo",
										"value": "true",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOHouseholdPoints",
										"value": "true",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOIdentities",
										"value": "true",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOOffers",
										"value": "true",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/customers/{{customerid}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"customers",
										"{{customerid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Customer Domain - [TC-2]- [P] - Verify an API behaviour to get customer with invalid customer id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status Code | 404 Not Found', function(){",
											"    pm.response.to.have.status(404)",
											"})",
											"",
											"var responseData = pm.response.json();",
											"console.log(responseData)",
											"",
											"pm.test('Validate detail as profile already exists', function(){",
											"    pm.expect(responseData.details[0]).to.eql(\"Profile does not exist\")",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Loblaw-Tenant-ID",
										"value": "JOE_FRESH",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOMemberInfo",
										"value": "true",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOHouseholdPoints",
										"value": "true",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOIdentities",
										"value": "true",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOOffers",
										"value": "true",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/customers/a84-1b56cba98763",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"customers",
										"a84-1b56cba98763"
									]
								}
							},
							"response": []
						},
						{
							"name": "Customer Domain - [TC-3]- [P] - Verify an API behaviour to get customer with another customer id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status Code | 200 OK', function(){",
											"    pm.response.to.have.status(200)",
											"})",
											"",
											"var responseData = pm.response.json();",
											"console.log(responseData)",
											"",
											"pm.test('Validate detail as profile already exists', function(){",
											"    pm.expect(responseData.customer_id).to.eql(\"6a2d5016-47c3-4bf5-a6d8-b0baa5a35d25\")",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Loblaw-Tenant-ID",
										"value": "JOE_FRESH",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOMemberInfo",
										"value": "true",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOHouseholdPoints",
										"value": "true",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOIdentities",
										"value": "true",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOOffers",
										"value": "true",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/customers/{{customerid}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"customers",
										"{{customerid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Customer Domain - [TC-4]- [P] - Verify an API behaviour to get customer with false getPCOHouseholdPoints",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status Code | 200 OK', function(){",
											"    pm.response.to.have.status(200)",
											"})",
											"",
											"var responseData = pm.response.json();",
											"console.log(responseData)",
											"",
											"pm.test('Validate detail as profile already exists', function(){",
											"    pm.expect(responseData.customer_id).to.eql(\"6a2d5016-47c3-4bf5-a6d8-b0baa5a35d25\")",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Loblaw-Tenant-ID",
										"value": "JOE_FRESH",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOMemberInfo",
										"value": "true",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOHouseholdPoints",
										"value": "false",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOIdentities",
										"value": "true",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOOffers",
										"value": "true",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/customers/{{customerid}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"customers",
										"{{customerid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Customer Domain - [TC-5]- [N] - Verify an API behaviour to get customer with getPCOHouseholdPoints as null",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status Code | 200 OK', function(){",
											"    pm.response.to.have.status(200)",
											"})",
											"",
											"var responseData = pm.response.json();",
											"console.log(responseData)",
											"",
											"pm.test('Validate detail as profile already exists', function(){",
											"    pm.expect(responseData.customer_id).to.eql(\"6a2d5016-47c3-4bf5-a6d8-b0baa5a35d25\")",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Loblaw-Tenant-ID",
										"value": "JOE_FRESH",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOMemberInfo",
										"value": "true",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOHouseholdPoints",
										"value": "true",
										"type": "default",
										"disabled": true
									},
									{
										"key": "X-Loblaw-getPCOIdentities",
										"value": "true",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOOffers",
										"value": "true",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/customers/{{customerid}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"customers",
										"{{customerid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Customer Domain - [TC-6] [N] - Verify an API behaviour to get customer with getPCOHouseholdPoints as string value",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status Code | 200 OK', function(){",
											"    pm.response.to.have.status(200)",
											"})",
											"",
											"var responseData = pm.response.json();",
											"console.log(responseData)",
											"",
											"pm.test('Validate detail as profile already exists', function(){",
											"    pm.expect(responseData.customer_id).to.eql(\"6a2d5016-47c3-4bf5-a6d8-b0baa5a35d25\")",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Loblaw-Tenant-ID",
										"value": "JOE_FRESH",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOMemberInfo",
										"value": "true",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOHouseholdPoints",
										"value": "abcd",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOIdentities",
										"value": "true",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOOffers",
										"value": "true",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/customers/{{customerid}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"customers",
										"{{customerid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Customer Domain - [TC-7]- [P] - Verify an API behaviour to get customer with false getPCOIdentities",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status Code | 200 OK', function(){",
											"    pm.response.to.have.status(200)",
											"})",
											"",
											"var responseData = pm.response.json();",
											"console.log(responseData)",
											"",
											"pm.test('Validate detail as profile already exists', function(){",
											"    pm.expect(responseData.customer_id).to.eql(\"6a2d5016-47c3-4bf5-a6d8-b0baa5a35d25\")",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Loblaw-Tenant-ID",
										"value": "JOE_FRESH",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOMemberInfo",
										"value": "true",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOHouseholdPoints",
										"value": "true",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOIdentities",
										"value": "false",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOOffers",
										"value": "true",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/customers/{{customerid}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"customers",
										"{{customerid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Customer Domain - [TC-8]- [N] - Verify an API behaviour to get customer with  getPCOIdentities as null",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status Code | 200 OK', function(){",
											"    pm.response.to.have.status(200)",
											"})",
											"",
											"var responseData = pm.response.json();",
											"console.log(responseData)",
											"",
											"pm.test('Validate detail as profile already exists', function(){",
											"    pm.expect(responseData.customer_id).to.eql(\"6a2d5016-47c3-4bf5-a6d8-b0baa5a35d25\")",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Loblaw-Tenant-ID",
										"value": "JOE_FRESH",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOMemberInfo",
										"value": "true",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOHouseholdPoints",
										"value": "false",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOIdentities",
										"value": "true",
										"type": "default",
										"disabled": true
									},
									{
										"key": "X-Loblaw-getPCOOffers",
										"value": "true",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/customers/{{customerid}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"customers",
										"{{customerid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Customer Domain - [TC-9]- [N] - Verify an API behaviour to get customer with  getPCOIdentities as a string value",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status Code | 200 OK', function(){",
											"    pm.response.to.have.status(200)",
											"})",
											"",
											"var responseData = pm.response.json();",
											"console.log(responseData)",
											"",
											"pm.test('Validate detail as profile already exists', function(){",
											"    pm.expect(responseData.customer_id).to.eql(\"6a2d5016-47c3-4bf5-a6d8-b0baa5a35d25\")",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Loblaw-Tenant-ID",
										"value": "JOE_FRESH",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOMemberInfo",
										"value": "true",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOHouseholdPoints",
										"value": "false",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOIdentities",
										"value": "abcd",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOOffers",
										"value": "true",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/customers/{{customerid}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"customers",
										"{{customerid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Customer Domain - [TC-10]- [P] - Verify an API behaviour to get customer with false getPCOOffers",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status Code | 200 OK', function(){",
											"    pm.response.to.have.status(200)",
											"})",
											"",
											"var responseData = pm.response.json();",
											"console.log(responseData)",
											"",
											"pm.test('Validate detail as profile already exists', function(){",
											"    pm.expect(responseData.customer_id).to.eql(\"6a2d5016-47c3-4bf5-a6d8-b0baa5a35d25\")",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Loblaw-Tenant-ID",
										"value": "JOE_FRESH",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOMemberInfo",
										"value": "true",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOHouseholdPoints",
										"value": "true",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOIdentities",
										"value": "true",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOOffers",
										"value": "false",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/customers/{{customerid}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"customers",
										"{{customerid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Customer Domain - [TC-11]- [N] - Verify an API behaviour to get customer with getPCOOffers as null",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status Code | 200 OK', function(){",
											"    pm.response.to.have.status(200)",
											"})",
											"",
											"var responseData = pm.response.json();",
											"console.log(responseData)",
											"",
											"pm.test('Validate detail as profile already exists', function(){",
											"    pm.expect(responseData.customer_id).to.eql(\"6a2d5016-47c3-4bf5-a6d8-b0baa5a35d25\")",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Loblaw-Tenant-ID",
										"value": "JOE_FRESH",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOMemberInfo",
										"value": "true",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOHouseholdPoints",
										"value": "false",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOIdentities",
										"value": "true",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOOffers",
										"value": "true",
										"type": "default",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/customers/{{customerid}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"customers",
										"{{customerid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Customer Domain - [TC-12]- [N] - Verify an API behaviour to get customer with getPCOOffers as a string value",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status Code | 200 OK', function(){",
											"    pm.response.to.have.status(200)",
											"})",
											"",
											"var responseData = pm.response.json();",
											"console.log(responseData)",
											"",
											"pm.test('Validate detail as profile already exists', function(){",
											"    pm.expect(responseData.customer_id).to.eql(\"6a2d5016-47c3-4bf5-a6d8-b0baa5a35d25\")",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Loblaw-Tenant-ID",
										"value": "JOE_FRESH",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOMemberInfo",
										"value": "true",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOHouseholdPoints",
										"value": "false",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOIdentities",
										"value": "true",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOOffers",
										"value": "abcd",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/customers/{{customerid}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"customers",
										"{{customerid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Customer Domain - [TC-13]- [N] - Verify an API behaviour to get customer with getPCOMemberInfo as false",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status Code | 200 OK', function(){",
											"    pm.response.to.have.status(200)",
											"})",
											"",
											"var responseData = pm.response.json();",
											"console.log(responseData)",
											"",
											"pm.test('Validate detail as profile already exists', function(){",
											"    pm.expect(responseData.customer_id).to.eql(\"6a2d5016-47c3-4bf5-a6d8-b0baa5a35d25\")",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Loblaw-Tenant-ID",
										"value": "JOE_FRESH",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOMemberInfo",
										"value": "true",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOHouseholdPoints",
										"value": "true",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOIdentities",
										"value": "true",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOOffers",
										"value": "false",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/customers/{{customerid}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"customers",
										"{{customerid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Customer Domain - [TC-14]- [N] - Verify an API behaviour to get customer with getPCOMemberInfo as null",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status Code | 200 OK', function(){",
											"    pm.response.to.have.status(200)",
											"})",
											"",
											"var responseData = pm.response.json();",
											"console.log(responseData)",
											"",
											"pm.test('Validate detail as profile already exists', function(){",
											"    pm.expect(responseData.customer_id).to.eql(\"6a2d5016-47c3-4bf5-a6d8-b0baa5a35d25\")",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Loblaw-Tenant-ID",
										"value": "JOE_FRESH",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOMemberInfo",
										"value": "true",
										"type": "default",
										"disabled": true
									},
									{
										"key": "X-Loblaw-getPCOHouseholdPoints",
										"value": "true",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOIdentities",
										"value": "true",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOOffers",
										"value": "true",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/customers/{{customerid}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"customers",
										"{{customerid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Customer Domain - [TC-15]- [N] - Verify an API behaviour to get customer with getPCOMemberInfo as a string value",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status Code | 200 OK', function(){",
											"    pm.response.to.have.status(200)",
											"})",
											"",
											"var responseData = pm.response.json();",
											"console.log(responseData)",
											"",
											"pm.test('Validate detail as profile already exists', function(){",
											"    pm.expect(responseData.customer_id).to.eql(\"6a2d5016-47c3-4bf5-a6d8-b0baa5a35d25\")",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Loblaw-Tenant-ID",
										"value": "JOE_FRESH",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOMemberInfo",
										"value": "abcd",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOHouseholdPoints",
										"value": "false",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOIdentities",
										"value": "true",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOOffers",
										"value": "true",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/customers/{{customerid}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"customers",
										"{{customerid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Customer Domain - [TC-16]- [N] - Verify an API behaviour to get customer with invalid Tanent Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status Code | 400 Bad Request', function(){",
											"    pm.response.to.have.status(400)",
											"})",
											"var responseData = pm.response.json();",
											"pm.test('Validate Profile Data', function(){",
											"    pm.expect(responseData.details[0]).to.eql(\"Invalid Headers\")",
											"    ",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Loblaw-Tenant-ID",
										"value": "JOE",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOMemberInfo",
										"value": "true",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOHouseholdPoints",
										"value": "true",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOIdentities",
										"value": "true",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOOffers",
										"value": "true",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/customers/{{customerid}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"customers",
										"{{customerid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Customer Domain - [TC-17]- [N] - Verify an API behaviour to get customer with null Tanent Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status Code | 400 Bad Request', function(){",
											"    pm.response.to.have.status(400)",
											"})",
											"var responseData = pm.response.json();",
											"pm.test('Validate Profile Data', function(){",
											"    pm.expect(responseData.details[0]).to.eql(\"Invalid Headers\")",
											"    ",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Loblaw-Tenant-ID",
										"value": "",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOMemberInfo",
										"value": "true",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOHouseholdPoints",
										"value": "true",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOIdentities",
										"value": "true",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOOffers",
										"value": "true",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/customers/{{customerid}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"customers",
										"{{customerid}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "GET Customer Profile by Auth Id",
					"item": [
						{
							"name": "Customer Domain - [TC-1]- [P] - Verify an API behaviour to get customer with valid Tenant Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status Code | 200 OK', function(){",
											"    pm.response.to.have.status(200)",
											"})",
											"",
											"var responseData = pm.response.json();",
											"console.log(responseData)",
											"",
											"pm.test('Validate detail as profile already exists', function(){",
											"    pm.expect(responseData.customer_id).to.eql(\"6a2d5016-47c3-4bf5-a6d8-b0baa5a35d25\")",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Loblaw-Tenant-ID",
										"value": "JOE_FRESH",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOMemberInfo",
										"value": "true",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOHouseholdPoints",
										"value": "true",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOIdentities",
										"value": "true",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOOffers",
										"value": "true",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/customers/PCID/{{customerid}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"customers",
										"PCID",
										"{{customerid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Customer Domain - [TC-2]- [P] - Verify an API behaviour to get customer with  Invalid Tenant Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status Code | 400 Bad Request', function(){",
											"    pm.response.to.have.status(400)",
											"})",
											"var responseData = pm.response.json();",
											"pm.test('Validate Profile Data', function(){",
											"    pm.expect(responseData.details[0]).to.eql(\"Invalid Headers\")",
											"    ",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Loblaw-Tenant-ID",
										"value": "HYBRIS",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOMemberInfo",
										"value": "true",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOHouseholdPoints",
										"value": "true",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOIdentities",
										"value": "true",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOOffers",
										"value": "true",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/customers/PCID/{{customerid}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"customers",
										"PCID",
										"{{customerid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Customer Domain - [TC-3]- [N] - Verify an API behaviour to get customer with   Tenant Id as null",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status Code | 400 Bad Request', function(){",
											"    pm.response.to.have.status(400)",
											"})",
											"var responseData = pm.response.json();",
											"pm.test('Validate Profile Data', function(){",
											"    pm.expect(responseData.details[0]).to.eql(\"Invalid Headers\")",
											"    ",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Loblaw-Tenant-ID",
										"value": "JOE_FRESH",
										"type": "default",
										"disabled": true
									},
									{
										"key": "X-Loblaw-getPCOMemberInfo",
										"value": "true",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOHouseholdPoints",
										"value": "true",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOIdentities",
										"value": "true",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOOffers",
										"value": "true",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/customers/PCID/{{customerid}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"customers",
										"PCID",
										"{{customerid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Customer Domain - [TC-4]- [P] - Verify an API behaviour to get customer with getPCOMemberInfo as false",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status Code | 200 OK', function(){",
											"    pm.response.to.have.status(200)",
											"})",
											"",
											"var responseData = pm.response.json();",
											"console.log(responseData)",
											"",
											"pm.test('Validate detail as profile already exists', function(){",
											"    pm.expect(responseData.customer_id).to.eql(\"6a2d5016-47c3-4bf5-a6d8-b0baa5a35d25\")",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Loblaw-Tenant-ID",
										"value": "JOE_FRESH",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOMemberInfo",
										"value": "false",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOHouseholdPoints",
										"value": "true",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOIdentities",
										"value": "true",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOOffers",
										"value": "true",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/customers/PCID/{{customerid}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"customers",
										"PCID",
										"{{customerid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Customer Domain - [TC-5]- [N] - Verify an API behaviour to get customer with getPCOMemberInfo as string",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status Code | 200 OK', function(){",
											"    pm.response.to.have.status(200)",
											"})",
											"",
											"var responseData = pm.response.json();",
											"console.log(responseData)",
											"",
											"pm.test('Validate detail as profile already exists', function(){",
											"    pm.expect(responseData.customer_id).to.eql(\"6a2d5016-47c3-4bf5-a6d8-b0baa5a35d25\")",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Loblaw-Tenant-ID",
										"value": "JOE_FRESH",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOMemberInfo",
										"value": "abcd",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOHouseholdPoints",
										"value": "true",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOIdentities",
										"value": "true",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOOffers",
										"value": "true",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/customers/PCID/{{customerid}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"customers",
										"PCID",
										"{{customerid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Customer Domain - [TC-6]- [N] - Verify an API behaviour to get customer with getPCOMemberInfo as null",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status Code | 200 OK', function(){",
											"    pm.response.to.have.status(200)",
											"})",
											"",
											"var responseData = pm.response.json();",
											"console.log(responseData)",
											"",
											"pm.test('Validate detail as profile already exists', function(){",
											"    pm.expect(responseData.customer_id).to.eql(\"6a2d5016-47c3-4bf5-a6d8-b0baa5a35d25\")",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Loblaw-Tenant-ID",
										"value": "JOE_FRESH",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOMemberInfo",
										"value": "",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOHouseholdPoints",
										"value": "true",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOIdentities",
										"value": "true",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOOffers",
										"value": "true",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/customers/PCID/{{customerid}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"customers",
										"PCID",
										"{{customerid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Customer Domain - [TC-7]- [N] - Verify an API behaviour to get customer with getPCOMemberInfo as not required",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status Code | 200 OK', function(){",
											"    pm.response.to.have.status(200)",
											"})",
											"",
											"var responseData = pm.response.json();",
											"console.log(responseData)",
											"",
											"pm.test('Validate detail as profile already exists', function(){",
											"    pm.expect(responseData.customer_id).to.eql(\"6a2d5016-47c3-4bf5-a6d8-b0baa5a35d25\")",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Loblaw-Tenant-ID",
										"value": "JOE_FRESH",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOMemberInfo",
										"value": "true",
										"type": "default",
										"disabled": true
									},
									{
										"key": "X-Loblaw-getPCOHouseholdPoints",
										"value": "true",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOIdentities",
										"value": "true",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOOffers",
										"value": "true",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/customers/PCID/{{customerid}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"customers",
										"PCID",
										"{{customerid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Customer Domain - [TC-8]- [P] - Verify an API behaviour to get customer with getPCOHouseholdPoints as false",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status Code | 200 OK', function(){",
											"    pm.response.to.have.status(200)",
											"})",
											"",
											"var responseData = pm.response.json();",
											"console.log(responseData)",
											"",
											"pm.test('Validate detail as profile already exists', function(){",
											"    pm.expect(responseData.customer_id).to.eql(\"6a2d5016-47c3-4bf5-a6d8-b0baa5a35d25\")",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Loblaw-Tenant-ID",
										"value": "JOE_FRESH",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOMemberInfo",
										"value": "true",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOHouseholdPoints",
										"value": "false",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOIdentities",
										"value": "true",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOOffers",
										"value": "true",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/customers/PCID/{{customerid}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"customers",
										"PCID",
										"{{customerid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Customer Domain - [TC-9]- [N] - Verify an API behaviour to get customer with getPCOHouseholdPoints as null",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status Code | 200 OK', function(){",
											"    pm.response.to.have.status(200)",
											"})",
											"",
											"var responseData = pm.response.json();",
											"console.log(responseData)",
											"",
											"pm.test('Validate detail as profile already exists', function(){",
											"    pm.expect(responseData.customer_id).to.eql(\"6a2d5016-47c3-4bf5-a6d8-b0baa5a35d25\")",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Loblaw-Tenant-ID",
										"value": "JOE_FRESH",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOMemberInfo",
										"value": "true",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOHouseholdPoints",
										"value": "",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOIdentities",
										"value": "false",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOOffers",
										"value": "true",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/customers/PCID/{{customerid}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"customers",
										"PCID",
										"{{customerid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Customer Domain - [TC-10]- [N] - Verify an API behaviour to get customer with getPCOHouseholdPoints as string",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status Code | 200 OK', function(){",
											"    pm.response.to.have.status(200)",
											"})",
											"",
											"var responseData = pm.response.json();",
											"console.log(responseData)",
											"",
											"pm.test('Validate detail as profile already exists', function(){",
											"    pm.expect(responseData.customer_id).to.eql(\"6a2d5016-47c3-4bf5-a6d8-b0baa5a35d25\")",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Loblaw-Tenant-ID",
										"value": "JOE_FRESH",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOMemberInfo",
										"value": "true",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOHouseholdPoints",
										"value": "abcd",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOIdentities",
										"value": "",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOOffers",
										"value": "true",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/customers/PCID/{{customerid}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"customers",
										"PCID",
										"{{customerid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Customer Domain - [TC-11]- [N] - Verify an API behaviour to get customer with getPCOHouseholdPoints as not required",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status Code | 200 OK', function(){",
											"    pm.response.to.have.status(200)",
											"})",
											"",
											"var responseData = pm.response.json();",
											"console.log(responseData)",
											"",
											"pm.test('Validate detail as profile already exists', function(){",
											"    pm.expect(responseData.customer_id).to.eql(\"6a2d5016-47c3-4bf5-a6d8-b0baa5a35d25\")",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Loblaw-Tenant-ID",
										"value": "JOE_FRESH",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOMemberInfo",
										"value": "true",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOHouseholdPoints",
										"value": "true",
										"type": "default",
										"disabled": true
									},
									{
										"key": "X-Loblaw-getPCOIdentities",
										"value": "abcd",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOOffers",
										"value": "true",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/customers/PCID/{{customerid}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"customers",
										"PCID",
										"{{customerid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Customer Domain - [TC-12]- [P] - Verify an API behaviour to get customer with getPCOHouseholdPoints as 0",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status Code | 200 OK', function(){",
											"    pm.response.to.have.status(200)",
											"})",
											"",
											"var responseData = pm.response.json();",
											"console.log(responseData)",
											"",
											"pm.test('Validate detail as profile already exists', function(){",
											"    pm.expect(responseData.customer_id).to.eql(\"6a2d5016-47c3-4bf5-a6d8-b0baa5a35d25\")",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Loblaw-Tenant-ID",
										"value": "JOE_FRESH",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOMemberInfo",
										"value": "true",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOHouseholdPoints",
										"value": "true",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOIdentities",
										"value": "true",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOOffers",
										"value": "false",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/customers/PCID/{{customerid}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"customers",
										"PCID",
										"{{customerid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Customer Domain - [TC-13]- [P] - Verify an API behaviour to get customer with getPCOHouseholdPoints as tRU",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status Code | 200 OK', function(){",
											"    pm.response.to.have.status(200)",
											"})",
											"",
											"var responseData = pm.response.json();",
											"console.log(responseData)",
											"",
											"pm.test('Validate detail as profile already exists', function(){",
											"    pm.expect(responseData.customer_id).to.eql(\"6a2d5016-47c3-4bf5-a6d8-b0baa5a35d25\")",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Loblaw-Tenant-ID",
										"value": "JOE_FRESH",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOMemberInfo",
										"value": "true",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOHouseholdPoints",
										"value": "tTUE",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOIdentities",
										"value": "abcd",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOOffers",
										"value": "",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/customers/PCID/{{customerid}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"customers",
										"PCID",
										"{{customerid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Customer Domain - [TC-14]- [P] - Verify an API behaviour to get customer with getPCOIdentities as false",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status Code | 200 OK', function(){",
											"    pm.response.to.have.status(200)",
											"})",
											"",
											"var responseData = pm.response.json();",
											"console.log(responseData)",
											"",
											"pm.test('Validate detail as profile already exists', function(){",
											"    pm.expect(responseData.customer_id).to.eql(\"6a2d5016-47c3-4bf5-a6d8-b0baa5a35d25\")",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Loblaw-Tenant-ID",
										"value": "JOE_FRESH",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOMemberInfo",
										"value": "true",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOHouseholdPoints",
										"value": "true",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOIdentities",
										"value": "false",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOOffers",
										"value": "abcd",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/customers/PCID/{{customerid}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"customers",
										"PCID",
										"{{customerid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Customer Domain - [TC-15]- [N] - Verify an API behaviour to get customer with getPCOIdentities as null",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status Code | 200 OK', function(){",
											"    pm.response.to.have.status(200)",
											"})",
											"",
											"var responseData = pm.response.json();",
											"console.log(responseData)",
											"",
											"pm.test('Validate detail as profile already exists', function(){",
											"    pm.expect(responseData.customer_id).to.eql(\"6a2d5016-47c3-4bf5-a6d8-b0baa5a35d25\")",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Loblaw-Tenant-ID",
										"value": "JOE_FRESH",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOMemberInfo",
										"value": "true",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOHouseholdPoints",
										"value": "true",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOIdentities",
										"value": "",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOOffers",
										"value": "true",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/customers/PCID/{{customerid}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"customers",
										"PCID",
										"{{customerid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Customer Domain - [TC-16]- [N] - Verify an API behaviour to get customer with getPCOIdentities as string",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status Code | 200 OK', function(){",
											"    pm.response.to.have.status(200)",
											"})",
											"",
											"var responseData = pm.response.json();",
											"console.log(responseData)",
											"",
											"pm.test('Validate detail as profile already exists', function(){",
											"    pm.expect(responseData.customer_id).to.eql(\"6a2d5016-47c3-4bf5-a6d8-b0baa5a35d25\")",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Loblaw-Tenant-ID",
										"value": "JOE_FRESH",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOMemberInfo",
										"value": "true",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOHouseholdPoints",
										"value": "false",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOIdentities",
										"value": "abcd",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOOffers",
										"value": "true",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/customers/PCID/{{customerid}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"customers",
										"PCID",
										"{{customerid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Customer Domain - [TC-17]- [N] - Verify an API behaviour to get customer with getPCOIdentities as not required",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status Code | 200 OK', function(){",
											"    pm.response.to.have.status(200)",
											"})",
											"",
											"var responseData = pm.response.json();",
											"console.log(responseData)",
											"",
											"pm.test('Validate detail as profile already exists', function(){",
											"    pm.expect(responseData.customer_id).to.eql(\"6a2d5016-47c3-4bf5-a6d8-b0baa5a35d25\")",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Loblaw-Tenant-ID",
										"value": "JOE_FRESH",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOMemberInfo",
										"value": "true",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOHouseholdPoints",
										"value": "false",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOIdentities",
										"value": "abcd",
										"type": "default",
										"disabled": true
									},
									{
										"key": "X-Loblaw-getPCOOffers",
										"value": "true",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/customers/PCID/{{customerid}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"customers",
										"PCID",
										"{{customerid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Customer Domain - [TC-18]- [P] - Verify an API behaviour to get customer with getPCOOffers as false",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status Code | 200 OK', function(){",
											"    pm.response.to.have.status(200)",
											"})",
											"",
											"var responseData = pm.response.json();",
											"console.log(responseData)",
											"",
											"pm.test('Validate detail as profile already exists', function(){",
											"    pm.expect(responseData.customer_id).to.eql(\"6a2d5016-47c3-4bf5-a6d8-b0baa5a35d25\")",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Loblaw-Tenant-ID",
										"value": "JOE_FRESH",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOMemberInfo",
										"value": "true",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOHouseholdPoints",
										"value": "true",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOIdentities",
										"value": "true",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOOffers",
										"value": "false",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/customers/PCID/{{customerid}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"customers",
										"PCID",
										"{{customerid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Customer Domain - [TC-19]- [N] - Verify an API behaviour to get customer with getPCOOffers as null",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status Code | 200 OK', function(){",
											"    pm.response.to.have.status(200)",
											"})",
											"",
											"var responseData = pm.response.json();",
											"console.log(responseData)",
											"",
											"pm.test('Validate detail as profile already exists', function(){",
											"    pm.expect(responseData.customer_id).to.eql(\"6a2d5016-47c3-4bf5-a6d8-b0baa5a35d25\")",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Loblaw-Tenant-ID",
										"value": "JOE_FRESH",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOMemberInfo",
										"value": "true",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOHouseholdPoints",
										"value": "true",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOIdentities",
										"value": "true",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOOffers",
										"value": "",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/customers/PCID/{{customerid}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"customers",
										"PCID",
										"{{customerid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Customer Domain - [TC-20]- [N] - Verify an API behaviour to get customer with getPCOOffers as string",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status Code | 200 OK', function(){",
											"    pm.response.to.have.status(200)",
											"})",
											"",
											"var responseData = pm.response.json();",
											"console.log(responseData)",
											"",
											"pm.test('Validate detail as profile already exists', function(){",
											"    pm.expect(responseData.customer_id).to.eql(\"6a2d5016-47c3-4bf5-a6d8-b0baa5a35d25\")",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Loblaw-Tenant-ID",
										"value": "JOE_FRESH",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOMemberInfo",
										"value": "true",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOHouseholdPoints",
										"value": "true",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOIdentities",
										"value": "true",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOOffers",
										"value": "aaaa",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/customers/PCID/{{customerid}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"customers",
										"PCID",
										"{{customerid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Customer Domain - [TC-21]- [N] - Verify an API behaviour to get customer with getPCOOffers as 0",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status Code | 200 OK', function(){",
											"    pm.response.to.have.status(200)",
											"})",
											"",
											"var responseData = pm.response.json();",
											"console.log(responseData)",
											"",
											"pm.test('Validate detail as profile already exists', function(){",
											"    pm.expect(responseData.customer_id).to.eql(\"6a2d5016-47c3-4bf5-a6d8-b0baa5a35d25\")",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Loblaw-Tenant-ID",
										"value": "JOE_FRESH",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOMemberInfo",
										"value": "true",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOHouseholdPoints",
										"value": "true",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOIdentities",
										"value": "true",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOOffers",
										"value": "0",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/customers/PCID/{{customerid}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"customers",
										"PCID",
										"{{customerid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Customer Domain - [TC-22]- [N] - Verify an API behaviour to get customer with getPCOOffers as not required",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status Code | 200 OK', function(){",
											"    pm.response.to.have.status(200)",
											"})",
											"",
											"var responseData = pm.response.json();",
											"console.log(responseData)",
											"",
											"pm.test('Validate detail as profile already exists', function(){",
											"    pm.expect(responseData.customer_id).to.eql(\"6a2d5016-47c3-4bf5-a6d8-b0baa5a35d25\")",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Loblaw-Tenant-ID",
										"value": "JOE_FRESH",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOMemberInfo",
										"value": "true",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOHouseholdPoints",
										"value": "true",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOIdentities",
										"value": "true",
										"type": "default"
									},
									{
										"key": "X-Loblaw-getPCOOffers",
										"value": "0",
										"type": "default",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/customers/PCID/{{customerid}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"customers",
										"PCID",
										"{{customerid}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Patch Customer",
					"item": [
						{
							"name": "Customer Domain - [TC-1]- [P] - Verify an API behaviour to patch customer with valid data",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status Code | 200 OK', function(){",
											"    pm.response.to.have.status(200)",
											"})",
											"",
											"var responseData = pm.response.json();",
											"",
											"pm.test('Validate Profile Data', function(){",
											"    pm.expect(responseData.profile.first_name).to.eql(\"John5\")",
											"    pm.expect(responseData.profile.last_name).to.eql(\"Dae\")",
											"    pm.expect(responseData.profile.phone_number).to.eql(\"+12223334455\")",
											"    ",
											"})",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "X-Loblaw-Tenant-ID",
										"value": "JOE_FRESH",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"first_name\": \"John5\",\r\n    \"last_name\": \"Dae\",\r\n    \"phone_number\": \"+12223334455\",\r\n    \"phone_ext\": \"\",\r\n    \"terms_of_service\": true,\r\n    \"preferred_language\": \"ENGLISH\",\r\n    \"newsletter_signup\": true\r\n    \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/customers/{{customerid}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"customers",
										"{{customerid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Customer Domain - [TC-2]- [N] - Verify an API behaviour to patch customer with invalid  tanent id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status Code | 400 Bad Request', function(){",
											"    pm.response.to.have.status(400)",
											"})",
											"",
											"var responseData = pm.response.json();",
											"",
											"pm.test('Validate Profile Data', function(){",
											"    pm.expect(responseData.details[0]).to.eql(\"Invalid Headers\")",
											"    ",
											"})",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "X-Loblaw-Tenant-ID",
										"value": "HYBRIS",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"first_name\": \"John5\",\r\n    \"last_name\": \"Dae\",\r\n    \"phone_number\": \"+12223334455\",\r\n    \"phone_ext\": \"\",\r\n    \"terms_of_service\": true,\r\n    \"preferred_language\": \"ENGLISH\",\r\n    \"newsletter_signup\": true\r\n    \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/customers/{{customerid}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"customers",
										"{{customerid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Customer Domain - [TC-3]- [N] - Verify an API behaviour to patch customer with   tanent id as not required",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status Code | 400 Bad Request', function(){",
											"    pm.response.to.have.status(400)",
											"})",
											"",
											"var responseData = pm.response.json();",
											"",
											"pm.test('Validate Profile Data', function(){",
											"    pm.expect(responseData.details[0]).to.eql(\"Invalid Headers\")",
											"    ",
											"})",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "X-Loblaw-Tenant-ID",
										"value": "HYBRIS",
										"type": "default",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"first_name\": \"John5\",\r\n    \"last_name\": \"Dae\",\r\n    \"phone_number\": \"+12223334455\",\r\n    \"phone_ext\": \"\",\r\n    \"terms_of_service\": true,\r\n    \"preferred_language\": \"ENGLISH\",\r\n    \"newsletter_signup\": true\r\n    \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/customers/{{customerid}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"customers",
										"{{customerid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Customer Domain - [TC-4]- [P] - Verify an API behaviour to patch customer with first name, last name",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status Code | 200 OK', function(){",
											"    pm.response.to.have.status(200)",
											"})",
											"",
											"var responseData = pm.response.json();",
											"",
											"pm.test('Validate Profile Data', function(){",
											"    pm.expect(responseData.profile.first_name).to.eql(\"John5\")",
											"    pm.expect(responseData.profile.last_name).to.eql(\"Dae\")",
											"    pm.expect(responseData.profile.phone_number).to.eql(\"+12223334455\")",
											"    ",
											"})",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "X-Loblaw-Tenant-ID",
										"value": "JOE_FRESH",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"first_name\": \"John5\",\r\n    \"last_name\": \"Dae\",\r\n    \"phone_number\": \"+12223334455\",\r\n    \"phone_ext\": \"\",\r\n    \"terms_of_service\": true,\r\n    \"preferred_language\": \"ENGLISH\",\r\n    \"newsletter_signup\": true\r\n    \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/customers/{{customerid}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"customers",
										"{{customerid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Customer Domain - [TC-5]- [N] - Verify an API behaviour to patch customer with first name and last name as integer",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status Code | 200 OK', function(){",
											"    pm.response.to.have.status(200)",
											"})",
											"",
											"var responseData = pm.response.json();",
											"",
											"pm.test('Validate Profile Data', function(){",
											"    pm.expect(responseData.profile.first_name).to.eql(\"1111\")",
											"    pm.expect(responseData.profile.last_name).to.eql(\"1111\")",
											"    pm.expect(responseData.profile.phone_number).to.eql(\"+12223334455\")",
											"   ",
											"})",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "X-Loblaw-Tenant-ID",
										"value": "JOE_FRESH",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"first_name\": \"1111\",\r\n    \"last_name\": \"1111\",\r\n    \"phone_number\": \"+12223334455\",\r\n    \"phone_ext\": \"\",\r\n    \"terms_of_service\": true,\r\n    \"preferred_language\": \"ENGLISH\",\r\n    \"newsletter_signup\": true\r\n    \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/customers/{{customerid}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"customers",
										"{{customerid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Customer Domain - [TC-6]- [N] - Verify an API behaviour to patch customer with  phone number as script",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status Code | 400 Bad Request', function(){",
											"    pm.response.to.have.status(400)",
											"})",
											"",
											"var responseData = pm.response.json();",
											"console.log(responseData)",
											"",
											"pm.test('Phone number validation', function(){",
											"    pm.expect(responseData.details[0]).to.eql(\"Payload is invalid.\")",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "X-Loblaw-Tenant-ID",
										"value": "JOE_FRESH",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"first_name\": \"1111\",\r\n    \"last_name\": \"1111\",\r\n    \"phone_number\": \"<script>alert <script> \",\r\n    \"phone_ext\": \"\",\r\n    \"terms_of_service\": true,\r\n    \"preferred_language\": \"ENGLISH\",\r\n    \"newsletter_signup\": true\r\n    \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/customers/{{customerid}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"customers",
										"{{customerid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Customer Domain - [TC-7]- [N] - Verify an API behaviour to patch customer with invalid phone number",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status Code | 200 OK', function(){",
											"    pm.response.to.have.status(200)",
											"})",
											"",
											"var responseData = pm.response.json();",
											"",
											"pm.test('Validate Profile Data', function(){",
											"    pm.expect(responseData.profile.first_name).to.eql(\"Sushma\")",
											"    pm.expect(responseData.profile.last_name).to.eql(\"Nayak\")",
											"    pm.expect(responseData.profile.phone_number).to.eql(\"1234\")",
											"    ",
											"})",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "X-Loblaw-Tenant-ID",
										"value": "JOE_FRESH",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"first_name\": \"Sushma\",\r\n    \"last_name\": \"Nayak\",\r\n    \"phone_number\": \"1234\",\r\n    \"phone_ext\": \"\",\r\n    \"terms_of_service\": true,\r\n    \"preferred_language\": \"ENGLISH\",\r\n    \"newsletter_signup\": true\r\n    \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/customers/{{customerid}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"customers",
										"{{customerid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Customer Domain - [TC-8]- [N] - Verify an API behaviour to patch customer with invalid phone number as string",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status Code | 200 OK', function(){",
											"    pm.response.to.have.status(200)",
											"})",
											"",
											"var responseData = pm.response.json();",
											"",
											"pm.test('Validate Profile Data', function(){",
											"    pm.expect(responseData.profile.first_name).to.eql(\"Sushma\")",
											"    pm.expect(responseData.profile.last_name).to.eql(\"Nayak\")",
											"    pm.expect(responseData.profile.phone_number).to.eql(\"abcd\")",
											"    ",
											"})",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "X-Loblaw-Tenant-ID",
										"value": "JOE_FRESH",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"first_name\": \"Sushma\",\r\n    \"last_name\": \"Nayak\",\r\n    \"phone_number\": \"abcd\",\r\n    \"phone_ext\": \"\",\r\n    \"terms_of_service\": true,\r\n    \"preferred_language\": \"ENGLISH\",\r\n    \"newsletter_signup\": true\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/customers/{{customerid}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"customers",
										"{{customerid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Customer Domain - [TC-9]- [N] - Verify an API behaviour to patch customer with terms of service as false",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status Code | 200 OK', function(){",
											"    pm.response.to.have.status(200)",
											"})",
											"",
											"var responseData = pm.response.json();",
											"",
											"pm.test('Validate Profile Data', function(){",
											"    pm.expect(responseData.profile.first_name).to.eql(\"Sushma\")",
											"    pm.expect(responseData.profile.last_name).to.eql(\"Nayak\")",
											"    pm.expect(responseData.profile.phone_number).to.eql(\"+12223334455\")",
											"    ",
											"})",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "X-Loblaw-Tenant-ID",
										"value": "JOE_FRESH",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"first_name\": \"Sushma\",\r\n    \"last_name\": \"Nayak\",\r\n    \"phone_number\": \"+12223334455\",\r\n    \"phone_ext\": \"\",\r\n    \"terms_of_service\": false,\r\n    \"preferred_language\": \"ENGLISH\",\r\n    \"newsletter_signup\": true\r\n    \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/customers/{{customerid}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"customers",
										"{{customerid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Customer Domain - [TC-10]- [N] - Verify an API behaviour to patch customer with terms of service as string",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status Code | 400 Bad Request', function(){",
											"    pm.response.to.have.status(400)",
											"})",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "X-Loblaw-Tenant-ID",
										"value": "JOE_FRESH",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"first_name\": \"Sushma\",\r\n    \"last_name\": \"Nayak\",\r\n    \"phone_number\": \"+12223334455\",\r\n    \"phone_ext\": \"\",\r\n    \"terms_of_service\": \"t1ru\",\r\n    \"preferred_language\": \"ENGLISH\",\r\n    \"newsletter_signup\": true\r\n    \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/customers/{{customerid}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"customers",
										"{{customerid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Customer Domain - [TC-11]- [P] - Verify an API behaviour to patch customer with terms of service as 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status Code | 200 OK', function(){",
											"    pm.response.to.have.status(200)",
											"})",
											"",
											"var responseData = pm.response.json();",
											"",
											"pm.test('Validate Profile Data', function(){",
											"    pm.expect(responseData.profile.first_name).to.eql(\"Sushma\")",
											"    pm.expect(responseData.profile.last_name).to.eql(\"Nayak\")",
											"    pm.expect(responseData.profile.phone_number).to.eql(\"+12223334455\")",
											"    ",
											"})",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "X-Loblaw-Tenant-ID",
										"value": "JOE_FRESH",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"first_name\": \"Sushma\",\r\n    \"last_name\": \"Nayak\",\r\n    \"phone_number\": \"+12223334455\",\r\n    \"phone_ext\": \"\",\r\n    \"terms_of_service\": 1,\r\n    \"preferred_language\": \"ENGLISH\",\r\n    \"newsletter_signup\": true\r\n    \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/customers/{{customerid}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"customers",
										"{{customerid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Customer Domain - [TC-12]- [P] - Verify an API behaviour to patch customer with preffered language as HINDI",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status Code | 200 OK', function(){",
											"    pm.response.to.have.status(200)",
											"})",
											"",
											"var responseData = pm.response.json();",
											"",
											"pm.test('Validate Profile Data', function(){",
											"    pm.expect(responseData.profile.first_name).to.eql(\"Sushma\")",
											"    pm.expect(responseData.profile.last_name).to.eql(\"Nayak\")",
											"    pm.expect(responseData.profile.phone_number).to.eql(\"+12223334455\")",
											"    ",
											"})",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "X-Loblaw-Tenant-ID",
										"value": "JOE_FRESH",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"first_name\": \"Sushma\",\r\n    \"last_name\": \"Nayak\",\r\n    \"phone_number\": \"+12223334455\",\r\n    \"phone_ext\": \"\",\r\n    \"terms_of_service\": true,\r\n    \"preferred_language\": \"HINDI\",\r\n    \"newsletter_signup\": true\r\n    \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/customers/{{customerid}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"customers",
										"{{customerid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Customer Domain - [TC-36]- [N] - Verify an API behaviour to patch customer with first name and last name as script",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status Code | 400 Bad Request', function(){",
											"    pm.response.to.have.status(400)",
											"})",
											"",
											"var responseData = pm.response.json();",
											"console.log(responseData)",
											"",
											"pm.test('Phone number validation', function(){",
											"    pm.expect(responseData.details[0]).to.eql(\"Payload is invalid.\")",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "X-Loblaw-Tenant-ID",
										"value": "JOE_FRESH",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"first_name\": \"<script>alert(‘xss’)</script>\",\r\n    \"last_name\": \"<script>alert(‘xss’)</script>\",\r\n    \"phone_number\": \"+1333455\",\r\n    \"phone_ext\": \"\",\r\n    \"terms_of_service\": true,\r\n    \"preferred_language\": \"ENGLISH\",\r\n    \"newsletter_signup\": true\r\n    \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/customers/{{customerid}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"customers",
										"{{customerid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Customer Domain - [TC-37]- [N] - Verify an API behaviour to patch customer with invalid phone number",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status Code | 400 Bad Request', function(){",
											"    pm.response.to.have.status(400)",
											"})",
											"",
											"var responseData = pm.response.json();",
											"console.log(responseData)",
											"",
											"pm.test('Phone number validation', function(){",
											"    pm.expect(responseData.details[0]).to.eql(\"Payload is invalid.\")",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "X-Loblaw-Tenant-ID",
										"value": "JOE_FRESH",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"first_name\": \"<script>alert(‘xss’)</script>\",\r\n    \"last_name\": \"<script>alert(‘xss’)</script>\",\r\n    \"phone_number\": \"+1333455\",\r\n    \"phone_ext\": \"\",\r\n    \"terms_of_service\": true,\r\n    \"preferred_language\": \"ENGLISH\",\r\n    \"newsletter_signup\": true\r\n    \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/customers/{{customerid}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"customers",
										"{{customerid}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "DELETE Customer profile",
					"item": [
						{
							"name": "Customer Domain - [TC-1]- [P] - Verify an API behaviour to delete customer with valid details",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successful DELETE request\", () => {",
											"  pm.expect(pm.response.code).to.be.oneOf([200,404]);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "X-Loblaw-Tenant-ID",
										"value": "JOE_FRESH",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/customers/a98bb5fc-4237-4070-a3d3-370aa6b6ac17",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"customers",
										"a98bb5fc-4237-4070-a3d3-370aa6b6ac17"
									]
								}
							},
							"response": []
						},
						{
							"name": "Customer Domain - [TC-2]- [P] - Verify an API behaviour to delete customer which is already deleted",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status Code | 404 NOT FOUND', function(){",
											"    pm.response.to.have.status(404)",
											"})",
											"",
											"var responseData = pm.response.json();",
											"console.log(responseData)",
											"",
											"pm.test('Validate detail as profile already exists', function(){",
											"    pm.expect(responseData.details[0]).to.eql(\"Profile does not exist\")",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "X-Loblaw-Tenant-ID",
										"value": "JOE_FRESH",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/customers/7a6ae350-46c2-4b1a-9495-fa1925e2189f",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"customers",
										"7a6ae350-46c2-4b1a-9495-fa1925e2189f"
									]
								}
							},
							"response": []
						},
						{
							"name": "Customer Domain - [TC-3]- [N] - Verify an API behaviour to delete customer with tanent id as null",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status Code | 400 Bad Request', function(){",
											"    pm.response.to.have.status(400)",
											"})",
											"",
											"var responseData = pm.response.json();",
											"",
											"pm.test('Validate Profile Data', function(){",
											"    pm.expect(responseData.details[0]).to.eql(\"Invalid Headers\")",
											"    ",
											"})",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "X-Loblaw-Tenant-ID",
										"value": "",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/customers/7a6ae350-46c2-4b1a-9495-fa1925e2189f",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"customers",
										"7a6ae350-46c2-4b1a-9495-fa1925e2189f"
									]
								}
							},
							"response": []
						},
						{
							"name": "Customer Domain - [TC-4]- [N] - Verify an API behaviour to delete customer with tanent id as invalid",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status Code | 400 Bad Request', function(){",
											"    pm.response.to.have.status(400)",
											"})",
											"",
											"var responseData = pm.response.json();",
											"",
											"pm.test('Validate Profile Data', function(){",
											"    pm.expect(responseData.details[0]).to.eql(\"Invalid Headers\")",
											"    ",
											"})",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "X-Loblaw-Tenant-ID",
										"value": "HYBRIS",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/customers/7a6ae350-46c2-4b1a-9495-fa1925e2189f",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"customers",
										"7a6ae350-46c2-4b1a-9495-fa1925e2189f"
									]
								}
							},
							"response": []
						},
						{
							"name": "Customer Domain - [TC-5]- [N] - Verify an API behaviour to delete customer with ivalid customer id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status Code | 404 Not Found', function(){",
											"    pm.response.to.have.status(404)",
											"})",
											"",
											"var responseData = pm.response.json();",
											"",
											"pm.test('Validate Profile Data', function(){",
											"    pm.expect(responseData.details[0]).to.eql(\"Profile does not exist\")",
											"    ",
											"})",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "X-Loblaw-Tenant-ID",
										"value": "JOE_FRESH",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/customers/7a6ae350-46c2-4b1a-9495-fa1925e211189f",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"customers",
										"7a6ae350-46c2-4b1a-9495-fa1925e211189f"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "DeleteAnonymiseCustomerProfile",
					"item": [
						{
							"name": "Customer Domain - [TC-1]- [P] - Verify an API behaviour to delete customer where customer is already deleted",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successful DELETE request\", () => {",
											"  pm.expect(pm.response.code).to.be.oneOf([200,404]);",
											"});",
											"",
											"",
											"var responseData = pm.response.json();",
											"console.log(responseData)",
											"",
											"pm.test('Validate prefered language', function(){",
											"    pm.expect(responseData.details[0]).to.eql(\"Profile does not exist\")",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "X-Loblaw-Tenant-ID",
										"value": "JOE_FRESH",
										"type": "default"
									},
									{
										"key": "X-Loblaw-Anonymize",
										"value": "TRUE",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://platform-customer-service-dev.loblaw.digital/v1/customers/a98bb5fc-4237-4070-a3d3-370aa6b6ac17",
									"protocol": "https",
									"host": [
										"platform-customer-service-dev",
										"loblaw",
										"digital"
									],
									"path": [
										"v1",
										"customers",
										"a98bb5fc-4237-4070-a3d3-370aa6b6ac17"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Address Controller",
			"item": [
				{
					"name": "GetAddressByUser",
					"item": [
						{
							"name": "Customer Domain - [TC-1]- [P] - Verify an API behaviour to get customer address with valid details",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status Code | 200 OK', function(){",
											"    pm.response.to.have.status(200)",
											"})",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Loblaw-Tenant-ID",
										"value": "JOE_FRESH",
										"type": "text"
									},
									{
										"key": "X-Loblaw-customerId",
										"value": "51cb6a21-da46-40aa-bb13-16b0bb9a3ad4",
										"type": "text"
									},
									{
										"key": "X-Loblaw-addressType",
										"value": "SHIPPING",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/addresses",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"addresses"
									]
								}
							},
							"response": []
						},
						{
							"name": "Customer Domain - [TC-2]- [P] - Verify an API behaviour to get customer address with address Type as BILLING",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status Code | 200 OK', function(){",
											"    pm.response.to.have.status(200)",
											"})",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Loblaw-Tenant-ID",
										"value": "JOE_FRESH",
										"type": "text"
									},
									{
										"key": "X-Loblaw-customerId",
										"value": "{{customerid}}",
										"type": "text"
									},
									{
										"key": "X-Loblaw-addressType",
										"value": "BILLING",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/addresses",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"addresses"
									]
								}
							},
							"response": []
						},
						{
							"name": "Customer Domain - [TC-3]- [P] - Verify an API behaviour to get customer address with adress type as SHIPPING",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status Code | 200 OK', function(){",
											"    pm.response.to.have.status(200)",
											"})",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Loblaw-Tenant-ID",
										"value": "JOE_FRESH",
										"type": "text"
									},
									{
										"key": "X-Loblaw-customerId",
										"value": "{{customerid}}",
										"type": "text"
									},
									{
										"key": "X-Loblaw-addressType",
										"value": "SHIPPING",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/addresses",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"addresses"
									]
								}
							},
							"response": []
						},
						{
							"name": "Customer Domain - [TC-4]- [N] - Verify an API behaviour to get customer address with address Type as invalid data",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status Code | 400 Bad Request', function(){",
											"    pm.response.to.have.status(400)",
											"})",
											"",
											"var responseData = pm.response.json();",
											"",
											"pm.test('Validate Profile Data', function(){",
											"    pm.expect(responseData.details[0]).to.eql(\"Invalid Headers\")",
											"    ",
											"})",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Loblaw-Tenant-ID",
										"value": "JOE_FRESH",
										"type": "text"
									},
									{
										"key": "X-Loblaw-customerId",
										"value": "{{customerid}}",
										"type": "text"
									},
									{
										"key": "X-Loblaw-addressType",
										"value": "newplace",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/addresses",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"addresses"
									]
								}
							},
							"response": []
						},
						{
							"name": "Customer Domain - [TC-5]- [N] - Verify an API behaviour to get customer address type as null",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status Code | 400 Bad Request', function(){",
											"    pm.response.to.have.status(400)",
											"})",
											"",
											"var responseData = pm.response.json();",
											"",
											"pm.test('Validate Profile Data', function(){",
											"    pm.expect(responseData.details[0]).to.eql(\"Invalid Headers\")",
											"    ",
											"})",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Loblaw-Tenant-ID",
										"value": "JOE_FRESH",
										"type": "text"
									},
									{
										"key": "X-Loblaw-customerId",
										"value": "{{customerid}}",
										"type": "text"
									},
									{
										"key": "X-Loblaw-addressType",
										"value": "",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/addresses",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"addresses"
									]
								}
							},
							"response": []
						},
						{
							"name": "Customer Domain - [TC-6]- [N] - Verify an API behaviour to get customer address with customerId as Invalid",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status Code | 404 Not Found', function(){",
											"pm.response.to.have.status(404)",
											"})",
											"",
											"var responseData = pm.response.json();",
											"",
											"pm.test('Validate Profile Data', function(){",
											"pm.expect(responseData.details[0]).to.eql(\"Customer is not present\")",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Loblaw-Tenant-ID",
										"value": "JOE_FRESH",
										"type": "text"
									},
									{
										"key": "X-Loblaw-customerId",
										"value": "6a2d5016-47c3-4bf5-a6d8-b0baa5a35d266",
										"type": "text"
									},
									{
										"key": "X-Loblaw-addressType",
										"value": "BILLING",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/addresses",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"addresses"
									]
								}
							},
							"response": []
						},
						{
							"name": "Customer Domain - [TC-7]- [N] - Verify an API behaviour to get customer id as  not required",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status Code | 400 Bad Request', function(){",
											"    pm.response.to.have.status(400)",
											"})",
											"",
											"var responseData = pm.response.json();",
											"",
											"pm.test('Validate Profile Data', function(){",
											"    pm.expect(responseData.details[0]).to.eql(\"Invalid Headers\")",
											"    ",
											"})",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Loblaw-Tenant-ID",
										"value": "JOE_FRESH",
										"type": "text"
									},
									{
										"key": "X-Loblaw-customerId",
										"value": "{{customerid}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "X-Loblaw-addressType",
										"value": "BILLING",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/addresses",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"addresses"
									]
								}
							},
							"response": []
						},
						{
							"name": "Customer Domain - [TC-8]- [N] - Verify an API behaviour to get customer id as null",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status Code | 400 Bad Request', function(){",
											"    pm.response.to.have.status(400)",
											"})",
											"",
											"var responseData = pm.response.json();",
											"",
											"pm.test('Validate Profile Data', function(){",
											"    pm.expect(responseData.details[0]).to.eql(\"Invalid Headers\")",
											"    ",
											"})",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Loblaw-Tenant-ID",
										"value": "JOE_FRESH",
										"type": "text"
									},
									{
										"key": "X-Loblaw-customerId",
										"value": "",
										"type": "text"
									},
									{
										"key": "X-Loblaw-addressType",
										"value": "BILLING",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/addresses",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"addresses"
									]
								}
							},
							"response": []
						},
						{
							"name": "Customer Domain - [TC-9]- [N] - Verify an API behaviour to get customer id as the customer which is already deleted",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status Code | 404 Not Found', function(){",
											"    pm.response.to.have.status(404)",
											"})",
											"",
											"var responseData = pm.response.json();",
											"",
											"pm.test('Validate Profile Data', function(){",
											"    pm.expect(responseData.details[0]).to.eql(\"Customer is not present\")",
											"    ",
											"})",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Loblaw-Tenant-ID",
										"value": "JOE_FRESH",
										"type": "text"
									},
									{
										"key": "X-Loblaw-customerId",
										"value": "7a6ae350-46c2-4b1a-9495-fa1925e2189f",
										"type": "text"
									},
									{
										"key": "X-Loblaw-addressType",
										"value": "BILLING",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/addresses",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"addresses"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "AddAddress",
					"item": [
						{
							"name": "Customer Domain - [TC-1]- [P] - Verify an API behaviour to post customer address after POST customer",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successful POST request\", () => {",
											"  pm.expect(pm.response.code).to.be.oneOf([201,409]);",
											"});",
											"",
											"var responseData = pm.response.json();",
											"",
											"pm.test('Validate Address', function(){",
											"    pm.expect(responseData.address_line_1).to.eql(\"123 Blossom St\")",
											"    pm.expect(responseData.postal_code).to.eql(\"L5B0G2\")",
											"})",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Loblaw-Tenant-ID",
										"value": "JOE_FRESH",
										"type": "text"
									},
									{
										"key": "X-Loblaw-customerId",
										"value": "51cb6a21-da46-40aa-bb13-16b0bb9a3ad4",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"first_name\": \"Test5\",\n    \"last_name\": \"smith\",\n    \"address_line_1\": \"123 Blossom St\",\n    \"city\": \"Toronto\",\n    \"is_contact_address\": true,\n    \"province\": \"ON\",\n    \"postal_code\": \"L5B0G2\",\n    \"address_type\": \"BILLING\",\n    \"country\": \"CA\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/address",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"address"
									]
								}
							},
							"response": []
						},
						{
							"name": "Customer Domain - [TC-2]- [P] - Verify an API behaviour to post customer address where customer id is invalid",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status Code | 404 Not Found', function(){",
											"pm.response.to.have.status(404)",
											"})",
											"",
											"var responseData = pm.response.json();",
											"",
											"pm.test('Validate Profile Data', function(){",
											"pm.expect(responseData.details[0]).to.eql(\"Customer is not present\")",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Loblaw-Tenant-ID",
										"value": "JOE_FRESH",
										"type": "text"
									},
									{
										"key": "X-Loblaw-customerId",
										"value": "6a2d5016-47c3-4bf5-a6d8-b0baa5a35d26",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"first_name\": \"Test5\",\n    \"last_name\": \"smith\",\n    \"address_line_1\": \"123 Blossom St\",\n    \"city\": \"Toronto\",\n    \"is_contact_address\": true,\n    \"province\": \"ON\",\n    \"postal_code\": \"L5B0G2\",\n    \"address_type\": \"SHIPPING\",\n    \"country\": \"CA\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/address",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"address"
									]
								}
							},
							"response": []
						},
						{
							"name": "Customer Domain - [TC-3]- [P] - Verify an API behaviour to post customer address where data is not changed",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successful POST request\", () => {",
											"  pm.expect(pm.response.code).to.be.oneOf([201,409]);",
											"});",
											"",
											"var responseData = pm.response.json();",
											"",
											"pm.test('Validate Address', function(){",
											"    pm.expect(responseData.address_line_1).to.eql(\"123 Blossom St\")",
											"    pm.expect(responseData.postal_code).to.eql(\"L5B0G2\")",
											"})",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Loblaw-Tenant-ID",
										"value": "JOE_FRESH",
										"type": "text"
									},
									{
										"key": "X-Loblaw-customerId",
										"value": "{{customerid}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"first_name\": \"Test5\",\n    \"last_name\": \"smith\",\n    \"address_line_1\": \"123 Blossom St\",\n    \"city\": \"Toronto\",\n    \"is_contact_address\": true,\n    \"province\": \"ON\",\n    \"postal_code\": \"L5B0G2\",\n    \"address_type\": \"SHIPPING\",\n    \"country\": \"CA\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/address",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"address"
									]
								}
							},
							"response": []
						},
						{
							"name": "Customer Domain - [TC-4]- [N] - Verify an API behaviour to post customer address where address line 1 is null",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status Code | 400 Bad Request', function(){",
											"pm.response.to.have.status(400)",
											"})",
											"",
											"var responseData = pm.response.json();",
											"",
											"pm.test('Validate Profile Data', function(){",
											"pm.expect(responseData.details[0]).to.eql(\"Address Line1 must not be empty\")",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Loblaw-Tenant-ID",
										"value": "JOE_FRESH",
										"type": "text"
									},
									{
										"key": "X-Loblaw-customerId",
										"value": "{{customerid}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"first_name\": \"Test5\",\n    \"last_name\": \"smith\",\n    \"address_line_1\": \"\",\n    \"city\": \"Toronto\",\n    \"is_contact_address\": true,\n    \"province\": \"ON\",\n    \"postal_code\": \"L5B0G2\",\n    \"address_type\": \"SHIPPING\",\n    \"country\": \"CA\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/address",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"address"
									]
								}
							},
							"response": []
						},
						{
							"name": "Customer Domain - [TC-5]- [N] - Verify an API behaviour to post customer address where address line 1 is a script",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status Code | 400 Bad Request', function(){",
											"pm.response.to.have.status(400)",
											"})",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Loblaw-Tenant-ID",
										"value": "JOE_FRESH",
										"type": "text"
									},
									{
										"key": "X-Loblaw-customerId",
										"value": "{{customerid}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"first_name\": \"Test5\",\n    \"last_name\": \"smith\",\n    \"address_line_1\": \"script <script>alert(‘xss’)</script>\",\n    \"city\": \"Toronto\",\n    \"is_contact_address\": true,\n    \"province\": \"ON\",\n    \"postal_code\": \"L5B0G2\",\n    \"address_type\": \"SHIPPING\",\n    \"country\": \"CA\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/address",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"address"
									]
								}
							},
							"response": []
						},
						{
							"name": "Customer Domain - [TC-6]- [N] - Verify an API behaviour to post customer address where address line 1 as integer",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successful POST request\", () => {",
											"  pm.expect(pm.response.code).to.be.oneOf([201,409]);",
											"});",
											"",
											"var responseData = pm.response.json();",
											"",
											"pm.test('Validate Address', function(){",
											"    pm.expect(responseData.address_line_1).to.eql(\"123 Blossom St\")",
											"    pm.expect(responseData.postal_code).to.eql(\"L5B0G2\")",
											"})",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Loblaw-Tenant-ID",
										"value": "JOE_FRESH",
										"type": "text"
									},
									{
										"key": "X-Loblaw-customerId",
										"value": "{{customerid}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"first_name\": \"Test5\",\n    \"last_name\": \"smith\",\n    \"address_line_1\": \"123 Blossom St\",\n    \"city\": \"Toronto\",\n    \"is_contact_address\": true,\n    \"province\": \"ON\",\n    \"postal_code\": \"L5B0G2\",\n    \"address_type\": \"SHIPPING\",\n    \"country\": \"CA\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/address",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"address"
									]
								}
							},
							"response": []
						},
						{
							"name": "Customer Domain - [TC-7]- [N] - Verify an API behaviour to get customer address where city is invalid",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successful POST request\", () => {",
											"  pm.expect(pm.response.code).to.be.oneOf([201,409]);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Loblaw-Tenant-ID",
										"value": "JOE_FRESH",
										"type": "text"
									},
									{
										"key": "X-Loblaw-customerId",
										"value": "{{customerid}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"first_name\": \"Test5\",\n    \"last_name\": \"smith\",\n    \"address_line_1\": 1234,\n    \"city\": \"new new\",\n    \"is_contact_address\": true,\n    \"province\": \"ON\",\n    \"postal_code\": \"L5B0G2\",\n    \"address_type\": \"SHIPPING\",\n    \"country\": \"CA\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/address",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"address"
									]
								}
							},
							"response": []
						},
						{
							"name": "Customer Domain - [TC-8]- [N] - Verify an API behaviour to get customer address where city is null",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status Code | 400 Bad Request', function(){",
											"pm.response.to.have.status(400)",
											"})",
											"",
											"var responseData = pm.response.json();",
											"",
											"pm.test('Validate Profile Data', function(){",
											"pm.expect(responseData.details[0]).to.eql(\"City must not be empty\")",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Loblaw-Tenant-ID",
										"value": "JOE_FRESH",
										"type": "text"
									},
									{
										"key": "X-Loblaw-customerId",
										"value": "{{customerid}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"first_name\": \"Test5\",\n    \"last_name\": \"smith\",\n    \"address_line_1\": 1234,\n    \"city\": \"\",\n    \"is_contact_address\": true,\n    \"province\": \"ON\",\n    \"postal_code\": \"L5B0G2\",\n    \"address_type\": \"SHIPPING\",\n    \"country\": \"CA\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/address",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"address"
									]
								}
							},
							"response": []
						},
						{
							"name": "Customer Domain - [TC-9]- [P] - Verify an API behaviour to Post customer is_contact_address is false",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successful POST request\", () => {",
											"  pm.expect(pm.response.code).to.be.oneOf([201,409]);",
											"});",
											"",
											"var responseData = pm.response.json();",
											"",
											"pm.test('Validate Address', function(){",
											"    pm.expect(responseData.address_line_1).to.eql(\"123 Blossom St\")",
											"    pm.expect(responseData.postal_code).to.eql(\"L5B0G2\")",
											"})",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Loblaw-Tenant-ID",
										"value": "JOE_FRESH",
										"type": "text"
									},
									{
										"key": "X-Loblaw-customerId",
										"value": "{{customerid}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"first_name\": \"Test5\",\n    \"last_name\": \"smith\",\n    \"address_line_1\": \"123 Blossom St\",\n    \"city\": \"Toronto\",\n    \"is_contact_address\": false,\n    \"province\": \"ON\",\n    \"postal_code\": \"L5B0G2\",\n    \"address_type\": \"SHIPPING\",\n    \"country\": \"CA\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/address",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"address"
									]
								}
							},
							"response": []
						},
						{
							"name": "Customer Domain - [TC-10]- [N] - Verify an API behaviour to Post customer is_contact_address is a string",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successful POST request\", () => {",
											"  pm.expect(pm.response.code).to.be.oneOf([201,409]);",
											"});",
											"",
											"var responseData = pm.response.json();",
											"",
											"pm.test('Validate Address', function(){",
											"    pm.expect(responseData.address_line_1).to.eql(\"123 Blossom St\")",
											"    pm.expect(responseData.postal_code).to.eql(\"L5B0G2\")",
											"})",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Loblaw-Tenant-ID",
										"value": "JOE_FRESH",
										"type": "text"
									},
									{
										"key": "X-Loblaw-customerId",
										"value": "{{customerid}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"first_name\": \"Test5\",\n    \"last_name\": \"smith\",\n    \"address_line_1\": \"123 Blossom St\",\n    \"city\": \"Toronto\",\n    \"is_contact_address\": \"false\",\n    \"province\": \"ON\",\n    \"postal_code\": \"L5B0G2\",\n    \"address_type\": \"SHIPPING\",\n    \"country\": \"CA\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/address",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"address"
									]
								}
							},
							"response": []
						},
						{
							"name": "Customer Domain - [TC-11]- [N] - Verify an API behaviour to Post customer is_contact_address as null",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successful POST request\", () => {",
											"  pm.expect(pm.response.code).to.be.oneOf([201,409]);",
											"});",
											"",
											"var responseData = pm.response.json();",
											"",
											"pm.test('Validate Address', function(){",
											"    pm.expect(responseData.address_line_1).to.eql(\"123 Blossom St\")",
											"    pm.expect(responseData.postal_code).to.eql(\"L5B0G2\")",
											"})",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Loblaw-Tenant-ID",
										"value": "JOE_FRESH",
										"type": "text"
									},
									{
										"key": "X-Loblaw-customerId",
										"value": "{{customerid}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"first_name\": \"Test5\",\n    \"last_name\": \"smith\",\n    \"address_line_1\": \"123 Blossom St\",\n    \"city\": \"Toronto\",\n    \"is_contact_address\": \"\",\n    \"province\": \"ON\",\n    \"postal_code\": \"L5B0G2\",\n    \"address_type\": \"SHIPPING\",\n    \"country\": \"CA\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/address",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"address"
									]
								}
							},
							"response": []
						},
						{
							"name": "Customer Domain - [TC-12]- [N] - Verify an API behaviour to Post customer is_contact_address as integer",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successful POST request\", () => {",
											"  pm.expect(pm.response.code).to.be.oneOf([201,409]);",
											"});",
											"",
											"var responseData = pm.response.json();",
											"",
											"pm.test('Validate Address', function(){",
											"    pm.expect(responseData.address_line_1).to.eql(\"123 Blossom St\")",
											"    pm.expect(responseData.postal_code).to.eql(\"L5B0G2\")",
											"})",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Loblaw-Tenant-ID",
										"value": "JOE_FRESH",
										"type": "text"
									},
									{
										"key": "X-Loblaw-customerId",
										"value": "{{customerid}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"first_name\": \"Test5\",\n    \"last_name\": \"smith\",\n    \"address_line_1\": \"123 Blossom St\",\n    \"city\": \"Toronto\",\n    \"is_contact_address\": 1234,\n    \"province\": \"ON\",\n    \"postal_code\": \"L5B0G2\",\n    \"address_type\": \"SHIPPING\",\n    \"country\": \"CA\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/address",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"address"
									]
								}
							},
							"response": []
						},
						{
							"name": "Customer Domain - [TC-13]- [N] - Verify an API behaviour to Post customer province is OFF",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status Code | 400 Bad Request', function(){",
											"pm.response.to.have.status(400)",
											"})",
											"",
											"var responseData = pm.response.json();",
											"",
											"pm.test('Validate Profile Data', function(){",
											"pm.expect(responseData.details[0]).to.eql(\"Province is invalid\")",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Loblaw-Tenant-ID",
										"value": "JOE_FRESH",
										"type": "text"
									},
									{
										"key": "X-Loblaw-customerId",
										"value": "{{customerid}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"first_name\": \"Test5\",\n    \"last_name\": \"smith\",\n    \"address_line_1\": \"123 Blossom St\",\n    \"city\": \"Toronto\",\n    \"is_contact_address\": 1234,\n    \"province\": \"OFF\",\n    \"postal_code\": \"L5B0G2\",\n    \"address_type\": \"SHIPPING\",\n    \"country\": \"CA\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/address",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"address"
									]
								}
							},
							"response": []
						},
						{
							"name": "Customer Domain - [TC-14]- [N] - Verify an API behaviour to Post postal_code as invalid data",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status Code | 400 Bad Request', function(){",
											"pm.response.to.have.status(400)",
											"})",
											"",
											"var responseData = pm.response.json();",
											"",
											"pm.test('Validate Profile Data', function(){",
											"pm.expect(responseData.details[0]).to.eql(\"Postal Code is invalid\")",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Loblaw-Tenant-ID",
										"value": "JOE_FRESH",
										"type": "text"
									},
									{
										"key": "X-Loblaw-customerId",
										"value": "{{customerid}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"first_name\": \"Test5\",\n    \"last_name\": \"smith\",\n    \"address_line_1\": \"123 Blossom St\",\n    \"city\": \"Toronto\",\n    \"is_contact_address\": 1234,\n    \"province\": \"ON\",\n    \"postal_code\": \"abcd\",\n    \"address_type\": \"SHIPPING\",\n    \"country\": \"CA\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/address",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"address"
									]
								}
							},
							"response": []
						},
						{
							"name": "Customer Domain - [TC-15]- [N] - Verify an API behaviour to Post postal_code as null",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status Code | 400 Bad Request', function(){",
											"pm.response.to.have.status(400)",
											"})",
											"",
											"var responseData = pm.response.json();",
											"",
											"pm.test('Validate Profile Data', function(){",
											"pm.expect(responseData.details[0]).to.eql(\"Postal Code must not be empty\")",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Loblaw-Tenant-ID",
										"value": "JOE_FRESH",
										"type": "text"
									},
									{
										"key": "X-Loblaw-customerId",
										"value": "{{customerid}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"first_name\": \"Test5\",\n    \"last_name\": \"smith\",\n    \"address_line_1\": \"123 Blossom St\",\n    \"city\": \"TORONTO\",\n    \"is_contact_address\": 1234,\n    \"province\": \"ON\",\n    \"postal_code\": \"\",\n    \"address_type\": \"SHIPPING\",\n    \"country\": \"CA\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/address",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"address"
									]
								}
							},
							"response": []
						},
						{
							"name": "Customer Domain - [TC-16]- [N] - Verify an API behaviour to Post postal_code is outside CANADA",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status Code | 400 Bad Request', function(){",
											"pm.response.to.have.status(400)",
											"})",
											"",
											"var responseData = pm.response.json();",
											"",
											"pm.test('Validate Profile Data', function(){",
											"pm.expect(responseData.details[0]).to.eql(\"Postal Code is invalid\")",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Loblaw-Tenant-ID",
										"value": "JOE_FRESH",
										"type": "text"
									},
									{
										"key": "X-Loblaw-customerId",
										"value": "{{customerid}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"first_name\": \"Test5\",\n    \"last_name\": \"smith\",\n    \"address_line_1\": \"123 Blossom St\",\n    \"city\": \"Toronto\",\n    \"is_contact_address\": 1234,\n    \"province\": \"ON\",\n    \"postal_code\": \"834004\",\n    \"address_type\": \"SHIPPING\",\n    \"country\": \"IN\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/address",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"address"
									]
								}
							},
							"response": []
						},
						{
							"name": "Customer Domain - [TC-17]- [N] - Verify an API behaviour to Post postal_code of Canada and country is India",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successful POST request\", () => {",
											"  pm.expect(pm.response.code).to.be.oneOf([201,409]);",
											"});",
											"",
											"var responseData = pm.response.json();",
											"",
											"pm.test('Validate Address', function(){",
											"    pm.expect(responseData.address_line_1).to.eql(\"123 Blossom St\")",
											"    pm.expect(responseData.postal_code).to.eql(\"L5B0G2\")",
											"})",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Loblaw-Tenant-ID",
										"value": "JOE_FRESH",
										"type": "text"
									},
									{
										"key": "X-Loblaw-customerId",
										"value": "{{customerid}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"first_name\": \"Test5\",\n    \"last_name\": \"smith\",\n    \"address_line_1\": \"123 Blossom St\",\n    \"city\": \"Toronto\",\n    \"is_contact_address\": 1234,\n    \"province\": \"ON\",\n    \"postal_code\": \"L5B0G2\",\n    \"address_type\": \"SHIPPING\",\n    \"country\": \"IN\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/address",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"address"
									]
								}
							},
							"response": []
						},
						{
							"name": "Customer Domain - [TC-18]- [N] - Verify an API behaviour to Post address where country is invalid",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successful POST request\", () => {",
											"  pm.expect(pm.response.code).to.be.eql(400);",
											"});",
											"",
											"var responseData = pm.response.json();",
											"",
											"pm.test('Validate error message', function(){",
											"    pm.expect(responseData.details[0]).to.eql(\"Country ISO code is invalid\")",
											"    ",
											"})",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Loblaw-Tenant-ID",
										"value": "JOE_FRESH",
										"type": "text"
									},
									{
										"key": "X-Loblaw-customerId",
										"value": "{{customerid}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"first_name\": \"Test5\",\n    \"last_name\": \"smith\",\n    \"address_line_1\": \"123 Blossom St\",\n    \"city\": \"Toronto\",\n    \"is_contact_address\": 1234,\n    \"province\": \"ON\",\n    \"postal_code\": \"L5B0G2\",\n    \"address_type\": \"SHIPPING\",\n    \"country\": \"abcd\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/address",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"address"
									]
								}
							},
							"response": []
						},
						{
							"name": "Customer Domain - [TC-19]- [N] - Verify an API behaviour to Post address where country is null",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successful POST request\", () => {",
											"  pm.expect(pm.response.code).to.be.oneOf([201,409]);",
											"});",
											"",
											"var responseData = pm.response.json();",
											"",
											"pm.test('Validate Address', function(){",
											"    pm.expect(responseData.address_line_1).to.eql(\"123 Blossom St\")",
											"    pm.expect(responseData.postal_code).to.eql(\"L5B0G2\")",
											"})",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Loblaw-Tenant-ID",
										"value": "JOE_FRESH",
										"type": "text"
									},
									{
										"key": "X-Loblaw-customerId",
										"value": "{{customerid}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"first_name\": \"Test5\",\n    \"last_name\": \"smith\",\n    \"address_line_1\": \"123 Blossom St\",\n    \"city\": \"Toronto\",\n    \"is_contact_address\": 1234,\n    \"province\": \"ON\",\n    \"postal_code\": \"L5B0G2\",\n    \"address_type\": \"SHIPPING\",\n    \"country\": \"\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/address",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"address"
									]
								}
							},
							"response": []
						},
						{
							"name": "Customer Domain - [TC-20]- [P] - Verify an API behaviour for the address which is already deleted",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successful POST request\", () => {",
											"  pm.expect(pm.response.code).to.be.oneOf([201,409]);",
											"});",
											"",
											"var responseData = pm.response.json();",
											"",
											"pm.test('Validate Address', function(){",
											"    pm.expect(responseData.address_line_1).to.eql(\"123 Blossom St\")",
											"    pm.expect(responseData.postal_code).to.eql(\"L5B0G2\")",
											"})",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Loblaw-Tenant-ID",
										"value": "JOE_FRESH",
										"type": "text"
									},
									{
										"key": "X-Loblaw-customerId",
										"value": "{{customerid}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"first_name\": \"Test5\",\n    \"last_name\": \"smith\",\n    \"address_line_1\": \"123 Blossom St\",\n    \"city\": \"Toronto\",\n    \"is_contact_address\": 1234,\n    \"province\": \"ON\",\n    \"postal_code\": \"L5B0G2\",\n    \"address_type\": \"SHIPPING\",\n    \"country\": \"\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/address",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"address"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Update Address",
					"item": [
						{
							"name": "Customer Domain - [TC-1]- [N] - Verify an API behaviour to PATCH address and check with invalid Tenant Id ab@$%cd",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status Code | 400 Bad Request', function(){",
											"pm.response.to.have.status(400)",
											"})",
											"",
											"var responseData = pm.response.json();",
											"",
											"pm.test('Validate Profile Data', function(){",
											"pm.expect(responseData.details[0]).to.eql(\"Invalid Headers\")",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "X-Loblaw-Tenant-ID",
										"value": "ab@$%cd",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"first_name\": \"Test5\",\r\n    \"last_name\": \"smith\",\r\n    \"address_line_1\": \"123 Blossom St\",\r\n    \"city\": \"Toronto\",\r\n    \"is_contact_address\": true,\r\n    \"province\": \"ON\",\r\n    \"postal_code\": \"L5B0G2\",\r\n    \"address_type\": \"SHIPPING\",\r\n    \"country\": \"Canada\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://platform-customer-service-dev.loblaw.digital/v1/addresses/{{addressid}}",
									"protocol": "https",
									"host": [
										"platform-customer-service-dev",
										"loblaw",
										"digital"
									],
									"path": [
										"v1",
										"addresses",
										"{{addressid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Customer Domain - [TC-2]- [N] - Verify an API behaviour to PATCH address and check with null Tenant Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status Code | 400 Bad Request', function(){",
											"pm.response.to.have.status(400)",
											"})",
											"",
											"var responseData = pm.response.json();",
											"",
											"pm.test('Validate Profile Data', function(){",
											"pm.expect(responseData.details[0]).to.eql(\"Invalid Headers\")",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "X-Loblaw-Tenant-ID",
										"value": "JOE_FRESH",
										"type": "default",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"first_name\": \"Test5\",\r\n    \"last_name\": \"smith\",\r\n    \"address_line_1\": \"123 Blossom St\",\r\n    \"city\": \"Toronto\",\r\n    \"is_contact_address\": true,\r\n    \"province\": \"ON\",\r\n    \"postal_code\": \"L5B0G2\",\r\n    \"address_type\": \"SHIPPING\",\r\n    \"country\": \"Canada\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://platform-customer-service-dev.loblaw.digital/v1/addresses/{{addressid}}",
									"protocol": "https",
									"host": [
										"platform-customer-service-dev",
										"loblaw",
										"digital"
									],
									"path": [
										"v1",
										"addresses",
										"{{addressid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Customer Domain - [TC-3]- [N] - Verify an API behaviour to PATCH address and check with  Tenant Id as HYBRIS",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status Code | 400 Bad Request', function(){",
											"pm.response.to.have.status(400)",
											"})",
											"",
											"var responseData = pm.response.json();",
											"",
											"pm.test('Validate Profile Data', function(){",
											"pm.expect(responseData.details[0]).to.eql(\"Invalid Headers\")",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "X-Loblaw-Tenant-ID",
										"value": "HYBRIS",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"first_name\": \"Test5\",\r\n    \"last_name\": \"smith\",\r\n    \"address_line_1\": \"123 Blossom St\",\r\n    \"city\": \"Toronto\",\r\n    \"is_contact_address\": true,\r\n    \"province\": \"ON\",\r\n    \"postal_code\": \"L5B0G2\",\r\n    \"address_type\": \"SHIPPING\",\r\n    \"country\": \"Canada\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://platform-customer-service-dev.loblaw.digital/v1/addresses/{{addressid}}",
									"protocol": "https",
									"host": [
										"platform-customer-service-dev",
										"loblaw",
										"digital"
									],
									"path": [
										"v1",
										"addresses",
										"{{addressid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Customer Domain - [TC-4]- [N] - Verify an API behaviour to PATCH address and check with Tenant Id as ONLINE_GROCERIES",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status Code | 400 Bad Request', function(){",
											"pm.response.to.have.status(400)",
											"})",
											"",
											"var responseData = pm.response.json();",
											"",
											"pm.test('Validate Profile Data', function(){",
											"pm.expect(responseData.details[0]).to.eql(\"Invalid Headers\")",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "X-Loblaw-Tenant-ID",
										"value": "ONLINE_GROCERIES",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"first_name\": \"Test5\",\r\n    \"last_name\": \"smith\",\r\n    \"address_line_1\": \"123 Blossom St\",\r\n    \"city\": \"Toronto\",\r\n    \"is_contact_address\": true,\r\n    \"province\": \"ON\",\r\n    \"postal_code\": \"L5B0G2\",\r\n    \"address_type\": \"SHIPPING\",\r\n    \"country\": \"Canada\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://platform-customer-service-dev.loblaw.digital/v1/addresses/{{addressid}}",
									"protocol": "https",
									"host": [
										"platform-customer-service-dev",
										"loblaw",
										"digital"
									],
									"path": [
										"v1",
										"addresses",
										"{{addressid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Customer Domain - [TC-5]- [N] - Verify an API behaviour to PATCH address and check with invalid address id in the url",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status Code | 404 Not Found', function(){",
											"pm.response.to.have.status(404)",
											"})",
											"",
											"var responseData = pm.response.json();",
											"",
											"pm.test('Validate Profile Data', function(){",
											"pm.expect(responseData.details[0]).to.eql(\"Address is not present\")",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "X-Loblaw-Tenant-ID",
										"value": "JOE_FRESH",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"first_name\": \"Test5\",\r\n    \"last_name\": \"smith\",\r\n    \"address_line_1\": \"123 Blossom St\",\r\n    \"city\": \"Toronto\",\r\n    \"is_contact_address\": true,\r\n    \"province\": \"ON\",\r\n    \"postal_code\": \"L5B0G2\",\r\n    \"address_type\": \"SHIPPING\",\r\n    \"country\": \"Canada\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://platform-customer-service-dev.loblaw.digital/v1/addresses/a78e29f8-5f92-422f-b660-0b89f4f6d40111",
									"protocol": "https",
									"host": [
										"platform-customer-service-dev",
										"loblaw",
										"digital"
									],
									"path": [
										"v1",
										"addresses",
										"a78e29f8-5f92-422f-b660-0b89f4f6d40111"
									]
								}
							},
							"response": []
						},
						{
							"name": "Customer Domain - [TC-6]- [N] - Verify an API behaviour to PATCH address and check with invalid address_line_1 as integer",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successful POST request\", () => {",
											"  pm.expect(pm.response.code).to.be.oneOf([201,200]);",
											"});",
											"",
											"var responseData = pm.response.json();",
											"",
											"pm.test('Validate Address', function(){",
											"    pm.expect(responseData.address_line_1).to.eql(\"123 Blossom St\")",
											"    pm.expect(responseData.postal_code).to.eql(\"L5B0G2\")",
											"})",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "X-Loblaw-Tenant-ID",
										"value": "JOE_FRESH",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"first_name\": \"Test5\",\r\n    \"last_name\": \"smith\",\r\n    \"address_line_1\": \"123 Blossom St\",\r\n    \"city\": \"Toronto\",\r\n    \"is_contact_address\": true,\r\n    \"province\": \"ON\",\r\n    \"postal_code\": \"L5B0G2\",\r\n    \"address_type\": \"SHIPPING\",\r\n    \"country\": \"Canada\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://platform-customer-service-dev.loblaw.digital/v1/addresses/{{addressid}}",
									"protocol": "https",
									"host": [
										"platform-customer-service-dev",
										"loblaw",
										"digital"
									],
									"path": [
										"v1",
										"addresses",
										"{{addressid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Customer Domain - [TC-7]- [N] - Verify an API behaviour to PATCH address and check with invalid address_line_1 as script",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status Code | 400 Bad Request', function(){",
											"pm.response.to.have.status(400)",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "X-Loblaw-Tenant-ID",
										"value": "JOE_FRESH",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"first_name\": \"Test5\",\r\n    \"last_name\": \"smith\",\r\n    \"address_line_1\": \"script <script>alert(‘xss’)</script>\",\r\n    \"city\": \"Toronto\",\r\n    \"is_contact_address\": true,\r\n    \"province\": \"ON\",\r\n    \"postal_code\": \"L5B0G2\",\r\n    \"address_type\": \"SHIPPING\",\r\n    \"country\": \"Canada\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://platform-customer-service-dev.loblaw.digital/v1/addresses/{{addressid}}",
									"protocol": "https",
									"host": [
										"platform-customer-service-dev",
										"loblaw",
										"digital"
									],
									"path": [
										"v1",
										"addresses",
										"{{addressid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Customer Domain - [TC-8]- [P] - Verify an API behaviour to PATCH address and patch address for address type BILLING",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status Code | 404 Not Found', function(){",
											"pm.response.to.have.status(404)",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "X-Loblaw-Tenant-ID",
										"value": "JOE_FRESH",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"first_name\": \"Test5\",\r\n    \"last_name\": \"smith\",\r\n    \"address_line_1\": \"123 Blossom St\",\r\n    \"city\": \"Toronto\",\r\n    \"is_contact_address\": true,\r\n    \"province\": \"ON\",\r\n    \"postal_code\": \"L5B0G2\",\r\n    \"address_type\": \"BILLING\",\r\n    \"country\": \"Canada\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://platform-customer-service-dev.loblaw.digital/v1/addresses/{{addressid}}",
									"protocol": "https",
									"host": [
										"platform-customer-service-dev",
										"loblaw",
										"digital"
									],
									"path": [
										"v1",
										"addresses",
										"{{addressid}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Delete Address",
					"item": [
						{
							"name": "Customer Domain - [TC-1]- [P] - Verify an API behaviour to delete address for a valid data",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status Code | 204 No Content', function(){",
											"pm.response.to.have.status(204)",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "X-Loblaw-Tenant-ID",
										"value": "JOE_FRESH",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/addresses/24bef78a-3980-419b-b1a8-4b91c83f9746",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"addresses",
										"24bef78a-3980-419b-b1a8-4b91c83f9746"
									]
								}
							},
							"response": []
						},
						{
							"name": "Customer Domain - [TC-2]- [P] - Verify an API behaviour to delete address and check address by hitting GET address API",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status Code | 204 No Content', function(){",
											"pm.response.to.have.status(204)",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "X-Loblaw-Tenant-ID",
										"value": "JOE_FRESH",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/addresses/58005b68-019b-4bef-aa8e-fb969120b196",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"addresses",
										"58005b68-019b-4bef-aa8e-fb969120b196"
									]
								}
							},
							"response": []
						},
						{
							"name": "Customer Domain - [TC-3]- [P] - Verify an API behaviour to PATCH address and check with valid data set",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status Code | 404 Not Found', function(){",
											"    pm.response.to.have.status(404)",
											"})",
											"",
											"var responseData = pm.response.json();",
											"",
											"pm.test('Validate Profile Data', function(){",
											"pm.expect(responseData.details[0]).to.eql(\"Customer is not present\")",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Loblaw-Tenant-ID",
										"value": "JOE_FRESH",
										"type": "text"
									},
									{
										"key": "X-Loblaw-customerId",
										"value": "58005b68-019b-4bef-aa8e-fb969120b196",
										"type": "text"
									},
									{
										"key": "X-Loblaw-addressType",
										"value": "BILLING",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/addresses",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"addresses"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "GetAddressByAddressIdVersion",
					"item": [
						{
							"name": "Customer Domain - [TC-1]- [P] - Verify an API behaviour to get adress from addressid where address type is SHIPPING",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Loblaw-Tenant-ID",
										"value": "JOE_FRESH",
										"type": "text"
									},
									{
										"key": "X-Loblaw-version",
										"value": "1",
										"type": "text"
									},
									{
										"key": "X-Loblaw-addressType",
										"value": "SHIPPING",
										"type": "default"
									}
								],
								"url": {
									"raw": "https://platform-customer-service-dev.loblaw.digital/v1/addresses/{{addressid}}?X-Loblaw-Tenant-ID=JOE_FRESH",
									"protocol": "https",
									"host": [
										"platform-customer-service-dev",
										"loblaw",
										"digital"
									],
									"path": [
										"v1",
										"addresses",
										"{{addressid}}"
									],
									"query": [
										{
											"key": "X-Loblaw-Tenant-ID",
											"value": "JOE_FRESH"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Customer Domain - [TC-2]- [P] - Verify an API behaviour to get adress from addressid where address type is BILLING",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Loblaw-Tenant-ID",
										"value": "JOE_FRESH",
										"type": "text"
									},
									{
										"key": "X-Loblaw-version",
										"value": "1",
										"type": "text"
									},
									{
										"key": "X-Loblaw-addressType",
										"value": "BILLING",
										"type": "default"
									}
								],
								"url": {
									"raw": "https://platform-customer-service-dev.loblaw.digital/v1/addresses/{{addressid}}?X-Loblaw-Tenant-ID=JOE_FRESH",
									"protocol": "https",
									"host": [
										"platform-customer-service-dev",
										"loblaw",
										"digital"
									],
									"path": [
										"v1",
										"addresses",
										"{{addressid}}"
									],
									"query": [
										{
											"key": "X-Loblaw-Tenant-ID",
											"value": "JOE_FRESH"
										}
									]
								}
							},
							"response": []
						}
					]
				}
			]
		}
	]
}