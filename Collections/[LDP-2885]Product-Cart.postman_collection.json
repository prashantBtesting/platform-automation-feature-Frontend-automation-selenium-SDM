{
	"info": {
		"_postman_id": "12d64510-b251-4c39-94de-8f8058f01ffc",
		"name": "Loblaw_Cart",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Create Cart",
			"item": [
				{
					"name": "create cart",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"cart_id\", jsonData.cart_id);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "X-Loblaw-Tenant-ID",
								"value": "JOE_FRESH"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "WEB"
							},
							{
								"key": "X-Loblaw-PCID",
								"value": "8f563f75-3755-4b90-928e-f922b3da3d3c"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"language\": \"english\",\n  \"pcid\": \"\",\n  \"banner_id\": \"loblaws\"\n}\n"
						},
						"url": {
							"raw": "{{Host}}/api/v1/carts",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "POST cart",
			"item": [
				{
					"name": "Cart Domain [TC-01]- Verify an API behaviour to POST Cart with the valid data set. and device type as WEB",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"cart_id\", jsonData.cart_id);",
									"",
									"pm.test(\"Successful POST request\", () => {",
									"  pm.expect(pm.response.code).to.be.oneOf([201,400]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Loblaw-Tenant-ID",
								"value": "{{tenant_id}}",
								"type": "default"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "default"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "WEB",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"language\": \"english\",\n    \"banner_id\": \"{{banner_id}}\",\n    \"pcid\": \"{{pcid}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}/api/v1/carts",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-01]- Verify an API behaviour to POST Cart with the valid data set. and device type as Android",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"cart_id\", jsonData.cart_id);",
									"",
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Status code name has string\", () => {",
									"  pm.response.to.have.status(\"Bad Request\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Loblaw-Tenant-ID",
								"value": "{{tenant_id}}",
								"type": "default"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "default"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "ANDROID",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"language\": \"english\",\n    \"banner_id\": \"{{banner_id}}\",\n    \"pcid\": \"{{pcid}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}/api/v1/carts",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-01]- Verify an API behaviour to POST Cart with the valid data set. and device type as IOS.",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"cart_id\", jsonData.cart_id);",
									"",
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Status code name has string\", () => {",
									"  pm.response.to.have.status(\"Bad Request\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Loblaw-Tenant-ID",
								"value": "{{tenant_id}}",
								"type": "default"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "default"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "IOS",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"language\": \"english\",\n    \"banner_id\": \"{{banner_id}}\",\n    \"pcid\": \"{{pcid}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}/api/v1/carts",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-01]- Verify an API behaviour to POST Cart with the valid data set. and NO device type.",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"cart_id\", jsonData.cart_id);",
									"",
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Status code name has string\", () => {",
									"  pm.response.to.have.status(\"Bad Request\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Loblaw-Tenant-ID",
								"value": "{{tenant_id}}",
								"type": "default"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "default"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"language\": \"english\",\n    \"banner_id\": \"{{banner_id}}\",\n    \"pcid\": \"{{pcid}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}/api/v1/carts",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-02]- Verify an API behaviour to POST Cart with the same  valid data set i.e same pcid and the device type as Android.",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"cart_id\", jsonData.cart_id);",
									"",
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Status code name has string\", () => {",
									"  pm.response.to.have.status(\"Bad Request\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Loblaw-Tenant-ID",
								"value": "{{tenant_id}}",
								"type": "default"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "default"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "ANDROID",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"language\": \"english\",\n    \"banner_id\": \"{{banner_id}}\",\n    \"pcid\": \"{{pcid}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}/api/v1/carts",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-02]- Verify an API behaviour to POST Cart with the same  valid data set i.e same pcid and the device type as WEB",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"cart_id\", jsonData.cart_id);",
									"",
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Status code name has string\", () => {",
									"  pm.response.to.have.status(\"Bad Request\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Loblaw-Tenant-ID",
								"value": "{{tenant_id}}",
								"type": "default"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "default"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "WEB",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"language\": \"english\",\n    \"banner_id\": \"{{banner_id}}\",\n    \"pcid\": \"{{pcid}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}/api/v1/carts",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-02]- Verify an API behaviour to POST Cart with the same  valid data set i.e same pcid and the device type as IOS.",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"cart_id\", jsonData.cart_id);",
									"",
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Status code name has string\", () => {",
									"  pm.response.to.have.status(\"Bad Request\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Loblaw-Tenant-ID",
								"value": "{{tenant_id}}",
								"type": "default"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "default"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "IOS.",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"language\": \"english\",\n    \"banner_id\": \"{{banner_id}}\",\n    \"pcid\": \"{{pcid}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}/api/v1/carts",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-02]- Verify an API behaviour to POST Cart with the same  valid data set i.e same pcid and NO  device type .",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"cart_id\", jsonData.cart_id);",
									"",
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Status code name has string\", () => {",
									"  pm.response.to.have.status(\"Bad Request\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Loblaw-Tenant-ID",
								"value": "{{tenant_id}}",
								"type": "default"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "default"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"language\": \"english\",\n    \"banner_id\": \"{{banner_id}}\",\n    \"pcid\": \"{{pcid}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}/api/v1/carts",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-03]- Verify an API behaviour to POST Cart with the invalid data set i.e invalid tenant_id .valid pcid and valid banner_id and device type as WEB",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"cart_id\", jsonData.cart_id);",
									"",
									"pm.test(\"Response body contains Invalid Tenant ID\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid Tenant ID\");",
									"})",
									"",
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Status code name has string\", () => {",
									"  pm.response.to.have.status(\"Bad Request\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Loblaw-Tenant-ID",
								"value": "Joefresh",
								"type": "default"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "default"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "WEB",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"language\": \"english\",\n    \"banner_id\": \"{{banner_id}}\",\n    \"pcid\": \"{{pcid}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}/api/v1/carts",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-03]- Verify an API behaviour to POST Cart with the invalid data set i.e invalid tenant_id .valid pcid and valid banner_id and device type as IOS",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"cart_id\", jsonData.cart_id);",
									"",
									"pm.test(\"Response body contains Invalid Tenant ID\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid Tenant ID\");",
									"})",
									"",
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Status code name has string\", () => {",
									"  pm.response.to.have.status(\"Bad Request\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Loblaw-Tenant-ID",
								"value": "Joefresh",
								"type": "default"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "default"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "IOS",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"language\": \"english\",\n    \"banner_id\": \"{{banner_id}}\",\n    \"pcid\": \"{{pcid}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}/api/v1/carts",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-03]- Verify an API behaviour to POST Cart with the invalid data set i.e invalid tenant_id .valid pcid and valid banner_id and device type as Android.",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"cart_id\", jsonData.cart_id);",
									"",
									"pm.test(\"Response body contains Invalid Tenant ID\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid Tenant ID\");",
									"})",
									"",
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Status code name has string\", () => {",
									"  pm.response.to.have.status(\"Bad Request\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Loblaw-Tenant-ID",
								"value": "Joefresh",
								"type": "default"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "default"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "ANDROID",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"language\": \"english\",\n    \"banner_id\": \"{{banner_id}}\",\n    \"pcid\": \"{{pcid}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}/api/v1/carts",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-03]- Verify an API behaviour to POST Cart with the invalid data set i.e invalid tenant_id .valid pcid and valid banner_id and NO device type .",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"cart_id\", jsonData.cart_id);",
									"",
									"pm.test(\"Response body contains Invalid Tenant ID\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid Tenant ID\");",
									"})",
									"",
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Status code name has string\", () => {",
									"  pm.response.to.have.status(\"Bad Request\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Loblaw-Tenant-ID",
								"value": "Joefresh",
								"type": "default"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "default"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"language\": \"english\",\n    \"banner_id\": \"{{banner_id}}\",\n    \"pcid\": \"{{pcid}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}/api/v1/carts",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-04]- Verify an API behaviour to POST Cart with the invalid data set i.e valid tenant_id ,invalid pcid and valid banner_id and Device type as WEB.",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"",
									"pm.test(\"Response body contains Cannot Create Duplicate Cart\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Cannot Create Duplicate Cart\");",
									"})",
									"",
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Status code name has string\", () => {",
									"  pm.response.to.have.status(\"Bad Request\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Loblaw-Tenant-ID",
								"value": "{{tenant_id}}",
								"type": "default"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "default"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "WEB",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"language\": \"english\",\n    \"banner_id\": \"{{banner_id}}\",\n    \"pcid\": \"{{pcid1}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}/api/v1/carts",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-04]- Verify an API behaviour to POST Cart with the invalid data set i.e valid tenant_id ,invalid pcid and valid banner_id and Device type as IOS.",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"",
									"pm.test(\"Response body contains Cannot Create Duplicate Cart\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Cannot Create Duplicate Cart\");",
									"})",
									"",
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Status code name has string\", () => {",
									"  pm.response.to.have.status(\"Bad Request\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Loblaw-Tenant-ID",
								"value": "{{tenant_id}}",
								"type": "default"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "default"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "IOS",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"language\": \"english\",\n    \"banner_id\": \"{{banner_id}}\",\n    \"pcid\": \"{{pcid1}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}/api/v1/carts",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-04]- Verify an API behaviour to POST Cart with the invalid data set i.e valid tenant_id ,invalid pcid and valid banner_id and Device type as Android.",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"",
									"pm.test(\"Response body contains Cannot Create Duplicate Cart\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Cannot Create Duplicate Cart\");",
									"})",
									"",
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Status code name has string\", () => {",
									"  pm.response.to.have.status(\"Bad Request\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Loblaw-Tenant-ID",
								"value": "{{tenant_id}}",
								"type": "default"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "default"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "ANDROID",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"language\": \"english\",\n    \"banner_id\": \"{{banner_id}}\",\n    \"pcid\": \"{{pcid1}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}/api/v1/carts",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-04]- Verify an API behaviour to POST Cart with the invalid data set i.e valid tenant_id ,invalid pcid and valid banner_id and NO .Device type.",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Response body contains Invalid Device Type\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid Device Type\");",
									"})",
									"",
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Status code name has string\", () => {",
									"  pm.response.to.have.status(\"Bad Request\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Loblaw-Tenant-ID",
								"value": "{{tenant_id}}",
								"type": "default"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "default"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"language\": \"english\",\n    \"banner_id\": \"{{banner_id}}\",\n    \"pcid\": \"{{pcid1}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}/api/v1/carts",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-05]- Verify an API behaviour to POST Cart with the invalid data set i.e invalid tenant_id and invalid pcid and invalid banner_id and Device type as ANDROID.",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Status code name has string\", () => {",
									"  pm.response.to.have.status(\"Bad Request\");",
									"});",
									"",
									"pm.test(\"Response body contains Invalid Tenant ID\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid Tenant ID\");",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Loblaw-Tenant-ID",
								"value": "joefresh",
								"type": "default"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "default"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "ANDROID",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"language\": \"english\",\n    \"banner_id\": \"klj\",\n    \"pcid\": \"fff5323a-d7c1-4e0f-b9ef-835c55a\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}/api/v1/carts",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-05]- Verify an API behaviour to POST Cart with the invalid data set i.e invalid tenant_id and invalid pcid and invalid banner_id and Device type as WEB",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Status code name has string\", () => {",
									"  pm.response.to.have.status(\"Bad Request\");",
									"});",
									"",
									"pm.test(\"Response body contains Invalid Tenant ID\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid Tenant ID\");",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Loblaw-Tenant-ID",
								"value": "joefresh",
								"type": "default"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "default"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "WEB",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"language\": \"english\",\n    \"banner_id\": \"klj\",\n    \"pcid\": \"fff5323a-d7c1-4e0f-b9ef-835c55a\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}/api/v1/carts",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-05]- Verify an API behaviour to POST Cart with the invalid data set i.e invalid tenant_id and invalid pcid and invalid banner_id and Device type as IOS.",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Status code name has string\", () => {",
									"  pm.response.to.have.status(\"Bad Request\");",
									"});",
									"",
									"pm.test(\"Response body contains Invalid Tenant ID\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid Tenant ID\");",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Loblaw-Tenant-ID",
								"value": "joefresh",
								"type": "default"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "default"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "IOS",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"language\": \"english\",\n    \"banner_id\": \"klj\",\n    \"pcid\": \"fff5323a-d7c1-4e0f-b9ef-835c55a\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}/api/v1/carts",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-05]- Verify an API behaviour to POST Cart with the invalid data set i.e invalid tenant_id and invalid pcid and invalid banner_id and NO Device type.",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Status code name has string\", () => {",
									"  pm.response.to.have.status(\"Bad Request\");",
									"});",
									"",
									"pm.test(\"Response body contains Invalid Tenant ID\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid Tenant ID\");",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Loblaw-Tenant-ID",
								"value": "joefresh",
								"type": "default"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "default"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"language\": \"english\",\n    \"banner_id\": \"klj\",\n    \"pcid\": \"fff5323a-d7c1-4e0f-b9ef-835c55a\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}/api/v1/carts",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-06]- Verify an API behaviour to POST Cart with the invalid URL with Device type as WEB",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"",
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Status code name has string\", () => {",
									"  pm.response.to.have.status(\"Not Found\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Loblaw-Tenant-ID",
								"value": "{{tenant_id}}",
								"type": "default"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "default"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "WEB",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"language\": \"english\",\n    \"banner_id\": \"{{banner_id}}\",\n    \"pcid\": \"{{pcid}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}/api/v1/carts/api/v1/carts",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts",
								"api",
								"v1",
								"carts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-06]- Verify an API behaviour to POST Cart with the invalid URL with Device type as ANDROID.",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"",
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Status code name has string\", () => {",
									"  pm.response.to.have.status(\"Not Found\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Loblaw-Tenant-ID",
								"value": "{{tenant_id}}",
								"type": "default"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "default"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "ANDROID",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"language\": \"english\",\n    \"banner_id\": \"{{banner_id}}\",\n    \"pcid\": \"{{pcid}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}/api/v1/carts/api/v1/carts",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts",
								"api",
								"v1",
								"carts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-06]- Verify an API behaviour to POST Cart with the invalid URL with Device type as IOS.",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"",
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Status code name has string\", () => {",
									"  pm.response.to.have.status(\"Not Found\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Loblaw-Tenant-ID",
								"value": "{{tenant_id}}",
								"type": "default"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "default"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "IOS",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"language\": \"english\",\n    \"banner_id\": \"{{banner_id}}\",\n    \"pcid\": \"{{pcid}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}/api/v1/carts/api/v1/carts",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts",
								"api",
								"v1",
								"carts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-06]- Verify an API behaviour to POST Cart with the invalid URL with NO Device type",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"",
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Status code name has string\", () => {",
									"  pm.response.to.have.status(\"Not Found\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Loblaw-Tenant-ID",
								"value": "{{tenant_id}}",
								"type": "default"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "default"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "IOS",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"language\": \"english\",\n    \"banner_id\": \"{{banner_id}}\",\n    \"pcid\": \"{{pcid}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}/api/v1/carts/api/v1/carts",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts",
								"api",
								"v1",
								"carts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-07]- Verify an API behaviour to POST Cart with the invalid data set i.e valid tenant_id , valid pcid and invalid banner_id and Device type as WEB.",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Status code name has string\", () => {",
									"  pm.response.to.have.status(\"Bad Request\");",
									"  ",
									"});",
									"",
									"pm.test(\"Response body contains Cannot Create Duplicate Cart\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Cannot Create Duplicate Cart\");",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Loblaw-Tenant-ID",
								"value": "{{tenant_id}}",
								"type": "default"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "default"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "WEB",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"language\": \"english\",\n    \"banner_id\": \"102455221\",\n    \"pcid\": \"{{pcid}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}/api/v1/carts",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-07]- Verify an API behaviour to POST Cart with the invalid data set i.e valid tenant_id , valid pcid and invalid banner_id and Device type as ANDROID.",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Status code name has string\", () => {",
									"  pm.response.to.have.status(\"Bad Request\");",
									"  ",
									"});",
									"",
									"pm.test(\"Response body contains Cannot Create Duplicate Cart\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Cannot Create Duplicate Cart\");",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Loblaw-Tenant-ID",
								"value": "{{tenant_id}}",
								"type": "default"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "default"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "ANDROID",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"language\": \"english\",\n    \"banner_id\": \"102455221\",\n    \"pcid\": \"{{pcid}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}/api/v1/carts",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-07]- Verify an API behaviour to POST Cart with the invalid data set i.e valid tenant_id , valid pcid and invalid banner_id and Device type as IOS.",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Status code name has string\", () => {",
									"  pm.response.to.have.status(\"Bad Request\");",
									"  ",
									"});",
									"",
									"pm.test(\"Response body contains Cannot Create Duplicate Cart\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Cannot Create Duplicate Cart\");",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Loblaw-Tenant-ID",
								"value": "{{tenant_id}}",
								"type": "default"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "default"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "IOS",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"language\": \"english\",\n    \"banner_id\": \"102455221\",\n    \"pcid\": \"{{pcid}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}/api/v1/carts",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-07]- Verify an API behaviour to POST Cart with the invalid data set i.e valid tenant_id , valid pcid and invalid banner_id and NO Device type",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Status code name has string\", () => {",
									"  pm.response.to.have.status(\"Bad Request\");",
									"  ",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Loblaw-Tenant-ID",
								"value": "{{tenant_id}}",
								"type": "default"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "default"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"language\": \"english\",\n    \"banner_id\": \"102455221\",\n    \"pcid\": \"{{pcid}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}/api/v1/carts",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-08]- Verify an API behaviour to POST Cart with the valid data set i.e valid tenant_id , no pcid and valid banner_id and Device type as Android",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Status code name has string\", () => {",
									"  pm.response.to.have.status(\"Created\");",
									"  ",
									"});",
									"",
									"",
									"const schema = {",
									"    ",
									"    \"type\": \"object\",",
									"    \"default\": {},",
									"    \"title\": \"Root Schema\",",
									"    \"required\": [",
									"        \"response\"",
									"    ],",
									"    \"properties\": {",
									"        \"response\": {",
									"            \"type\": \"object\",",
									"            \"default\": {},",
									"            \"title\": \"The response Schema\",",
									"            \"required\": [",
									"                \"cart\"",
									"            ],",
									"            \"properties\": {",
									"                \"cart\": {",
									"                    \"type\": \"object\",",
									"                    \"default\": {},",
									"                    \"title\": \"The cart Schema\",",
									"                    \"required\": [",
									"                        \"banner_id\",",
									"                        \"calculated\",",
									"                        \"discount_breakdown\",",
									"                        \"id\",",
									"                        \"pcid\",",
									"                        \"seller_carts\",",
									"                        \"status\",",
									"                        \"tax_breakdown\",",
									"                        \"tenant_id\",",
									"                        \"totals\",",
									"                        \"updated_at\"",
									"                    ],",
									"                    \"properties\": {",
									"                        \"banner_id\": {",
									"                            \"type\": \"null\",",
									"                            \"default\": null,",
									"                            \"title\": \"The banner_id Schema\",",
									"                            \"examples\": [",
									"                                null",
									"                            ]",
									"                        },",
									"                        \"calculated\": {",
									"                            \"type\": \"boolean\",",
									"                            \"default\": false,",
									"                            \"title\": \"The calculated Schema\",",
									"                            \"examples\": [",
									"                                false",
									"                            ]",
									"                        },",
									"                        \"discount_breakdown\": {",
									"                            \"type\": \"object\",",
									"                            \"default\": {},",
									"                            \"title\": \"The discount_breakdown Schema\",",
									"                            \"required\": [",
									"                                \"cart_discounts\",",
									"                                \"product_discounts\",",
									"                                \"voucher_discounts\"",
									"                            ],",
									"                            \"properties\": {",
									"                                \"cart_discounts\": {",
									"                                    \"type\": \"integer\",",
									"                                    \"default\": 0,",
									"                                    \"title\": \"The cart_discounts Schema\",",
									"                                    \"examples\": [",
									"                                        0",
									"                                    ]",
									"                                },",
									"                                \"product_discounts\": {",
									"                                    \"type\": \"integer\",",
									"                                    \"default\": 0,",
									"                                    \"title\": \"The product_discounts Schema\",",
									"                                    \"examples\": [",
									"                                        0",
									"                                    ]",
									"                                },",
									"                                \"voucher_discounts\": {",
									"                                    \"type\": \"integer\",",
									"                                    \"default\": 0,",
									"                                    \"title\": \"The voucher_discounts Schema\",",
									"                                    \"examples\": [",
									"                                        0",
									"                                    ]",
									"                                }",
									"                            },",
									"                            \"examples\": [{",
									"                                \"cart_discounts\": 0,",
									"                                \"product_discounts\": 0,",
									"                                \"voucher_discounts\": 0",
									"                            }]",
									"                        },",
									"                        \"id\": {",
									"                            \"type\": \"string\",",
									"                            \"default\": \"\",",
									"                            \"title\": \"The id Schema\",",
									"                            \"examples\": [",
									"                                \"08d60ce4-52c7-453b-b5c6-9238e9146d4f\"",
									"                            ]",
									"                        },",
									"                        \"pcid\": {",
									"                            \"type\": \"null\",",
									"                            \"default\": null,",
									"                            \"title\": \"The pcid Schema\",",
									"                            \"examples\": [",
									"                                null",
									"                            ]",
									"                        },",
									"                        \"seller_carts\": {",
									"                            \"type\": \"array\",",
									"                            \"default\": [],",
									"                            \"title\": \"The seller_carts Schema\",",
									"                            \"items\": {},",
									"                            \"examples\": [",
									"                                []",
									"                            ]",
									"                        },",
									"                        \"status\": {",
									"                            \"type\": \"string\",",
									"                            \"default\": \"\",",
									"                            \"title\": \"The status Schema\",",
									"                            \"examples\": [",
									"                                \"open\"",
									"                            ]",
									"                        },",
									"                        \"tax_breakdown\": {",
									"                            \"type\": \"array\",",
									"                            \"default\": [],",
									"                            \"title\": \"The tax_breakdown Schema\",",
									"                            \"items\": {},",
									"                            \"examples\": [",
									"                                []",
									"                            ]",
									"                        },",
									"                        \"tenant_id\": {",
									"                            \"type\": \"string\",",
									"                            \"default\": \"\",",
									"                            \"title\": \"The tenant_id Schema\",",
									"                            \"examples\": [",
									"                                \"JOE_FRESH\"",
									"                            ]",
									"                        },",
									"                        \"totals\": {",
									"                            \"type\": \"object\",",
									"                            \"default\": {},",
									"                            \"title\": \"The totals Schema\",",
									"                            \"required\": [",
									"                                \"additional_fees\",",
									"                                \"cart_total\",",
									"                                \"cart_total_before_taxes\",",
									"                                \"discounts\",",
									"                                \"loyalty_points\",",
									"                                \"subtotal\",",
									"                                \"tax\"",
									"                            ],",
									"                            \"properties\": {",
									"                                \"additional_fees\": {",
									"                                    \"type\": \"integer\",",
									"                                    \"default\": 0,",
									"                                    \"title\": \"The additional_fees Schema\",",
									"                                    \"examples\": [",
									"                                        0",
									"                                    ]",
									"                                },",
									"                                \"cart_total\": {",
									"                                    \"type\": \"integer\",",
									"                                    \"default\": 0,",
									"                                    \"title\": \"The cart_total Schema\",",
									"                                    \"examples\": [",
									"                                        0",
									"                                    ]",
									"                                },",
									"                                \"cart_total_before_taxes\": {",
									"                                    \"type\": \"integer\",",
									"                                    \"default\": 0,",
									"                                    \"title\": \"The cart_total_before_taxes Schema\",",
									"                                    \"examples\": [",
									"                                        0",
									"                                    ]",
									"                                },",
									"                                \"discounts\": {",
									"                                    \"type\": \"integer\",",
									"                                    \"default\": 0,",
									"                                    \"title\": \"The discounts Schema\",",
									"                                    \"examples\": [",
									"                                        0",
									"                                    ]",
									"                                },",
									"                                \"loyalty_points\": {",
									"                                    \"type\": \"integer\",",
									"                                    \"default\": 0,",
									"                                    \"title\": \"The loyalty_points Schema\",",
									"                                    \"examples\": [",
									"                                        0",
									"                                    ]",
									"                                },",
									"                                \"subtotal\": {",
									"                                    \"type\": \"integer\",",
									"                                    \"default\": 0,",
									"                                    \"title\": \"The subtotal Schema\",",
									"                                    \"examples\": [",
									"                                        0",
									"                                    ]",
									"                                },",
									"                                \"tax\": {",
									"                                    \"type\": \"integer\",",
									"                                    \"default\": 0,",
									"                                    \"title\": \"The tax Schema\",",
									"                                    \"examples\": [",
									"                                        0",
									"                                    ]",
									"                                }",
									"                            },",
									"                            \"examples\": [{",
									"                                \"additional_fees\": 0,",
									"                                \"cart_total\": 0,",
									"                                \"cart_total_before_taxes\": 0,",
									"                                \"discounts\": 0,",
									"                                \"loyalty_points\": 0,",
									"                                \"subtotal\": 0,",
									"                                \"tax\": 0",
									"                            }]",
									"                        },",
									"                        \"updated_at\": {",
									"                            \"type\": \"string\",",
									"                            \"default\": \"\",",
									"                            \"title\": \"The updated_at Schema\",",
									"                            \"examples\": [",
									"                                \"2022-09-26T12:42:56.304152Z\"",
									"                            ]",
									"                        }",
									"                    },",
									"                    \"examples\": [{",
									"                        \"banner_id\": null,",
									"                        \"calculated\": false,",
									"                        \"discount_breakdown\": {",
									"                            \"cart_discounts\": 0,",
									"                            \"product_discounts\": 0,",
									"                            \"voucher_discounts\": 0",
									"                        },",
									"                        \"id\": \"08d60ce4-52c7-453b-b5c6-9238e9146d4f\",",
									"                        \"pcid\": null,",
									"                        \"seller_carts\": [],",
									"                        \"status\": \"open\",",
									"                        \"tax_breakdown\": [],",
									"                        \"tenant_id\": \"JOE_FRESH\",",
									"                        \"totals\": {",
									"                            \"additional_fees\": 0,",
									"                            \"cart_total\": 0,",
									"                            \"cart_total_before_taxes\": 0,",
									"                            \"discounts\": 0,",
									"                            \"loyalty_points\": 0,",
									"                            \"subtotal\": 0,",
									"                            \"tax\": 0",
									"                        },",
									"                        \"updated_at\": \"2022-09-26T12:42:56.304152Z\"",
									"                    }]",
									"                }",
									"            },",
									"            \"examples\": [{",
									"                \"cart\": {",
									"                    \"banner_id\": null,",
									"                    \"calculated\": false,",
									"                    \"discount_breakdown\": {",
									"                        \"cart_discounts\": 0,",
									"                        \"product_discounts\": 0,",
									"                        \"voucher_discounts\": 0",
									"                    },",
									"                    \"id\": \"08d60ce4-52c7-453b-b5c6-9238e9146d4f\",",
									"                    \"pcid\": null,",
									"                    \"seller_carts\": [],",
									"                    \"status\": \"open\",",
									"                    \"tax_breakdown\": [],",
									"                    \"tenant_id\": \"JOE_FRESH\",",
									"                    \"totals\": {",
									"                        \"additional_fees\": 0,",
									"                        \"cart_total\": 0,",
									"                        \"cart_total_before_taxes\": 0,",
									"                        \"discounts\": 0,",
									"                        \"loyalty_points\": 0,",
									"                        \"subtotal\": 0,",
									"                        \"tax\": 0",
									"                    },",
									"                    \"updated_at\": \"2022-09-26T12:42:56.304152Z\"",
									"                }",
									"            }]",
									"        }",
									"    },",
									"    \"examples\": [{",
									"        \"response\": {",
									"            \"cart\": {",
									"                \"banner_id\": null,",
									"                \"calculated\": false,",
									"                \"discount_breakdown\": {",
									"                    \"cart_discounts\": 0,",
									"                    \"product_discounts\": 0,",
									"                    \"voucher_discounts\": 0",
									"                },",
									"                \"id\": \"08d60ce4-52c7-453b-b5c6-9238e9146d4f\",",
									"                \"pcid\": null,",
									"                \"seller_carts\": [],",
									"                \"status\": \"open\",",
									"                \"tax_breakdown\": [],",
									"                \"tenant_id\": \"JOE_FRESH\",",
									"                \"totals\": {",
									"                    \"additional_fees\": 0,",
									"                    \"cart_total\": 0,",
									"                    \"cart_total_before_taxes\": 0,",
									"                    \"discounts\": 0,",
									"                    \"loyalty_points\": 0,",
									"                    \"subtotal\": 0,",
									"                    \"tax\": 0",
									"                },",
									"                \"updated_at\": \"2022-09-26T12:42:56.304152Z\"",
									"            }",
									"        }",
									"    }]",
									"}",
									"pm.test(\"validate schema\", function () {",
									"pm.response.to.have.jsonSchema(schema);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Loblaw-Tenant-ID",
								"value": "{{tenant_id}}",
								"type": "default"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "default"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "ANDROID",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"language\": \"english\",\n    \"banner_id\": \"\",\n    \"pcid\": \"\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}/api/v1/carts",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-08]- Verify an API behaviour to POST Cart with the valid data set i.e valid tenant_id , no pcid and valid banner_id and Device type as WEB",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"const schema = {",
									"    ",
									"    \"type\": \"object\",",
									"    \"default\": {},",
									"    \"title\": \"Root Schema\",",
									"    \"required\": [",
									"        \"response\"",
									"    ],",
									"    \"properties\": {",
									"        \"response\": {",
									"            \"type\": \"object\",",
									"            \"default\": {},",
									"            \"title\": \"The response Schema\",",
									"            \"required\": [",
									"                \"cart\"",
									"            ],",
									"            \"properties\": {",
									"                \"cart\": {",
									"                    \"type\": \"object\",",
									"                    \"default\": {},",
									"                    \"title\": \"The cart Schema\",",
									"                    \"required\": [",
									"                        \"banner_id\",",
									"                        \"calculated\",",
									"                        \"discount_breakdown\",",
									"                        \"id\",",
									"                        \"pcid\",",
									"                        \"seller_carts\",",
									"                        \"status\",",
									"                        \"tax_breakdown\",",
									"                        \"tenant_id\",",
									"                        \"totals\",",
									"                        \"updated_at\"",
									"                    ],",
									"                    \"properties\": {",
									"                        \"banner_id\": {",
									"                            \"type\": \"null\",",
									"                            \"default\": null,",
									"                            \"title\": \"The banner_id Schema\",",
									"                            \"examples\": [",
									"                                null",
									"                            ]",
									"                        },",
									"                        \"calculated\": {",
									"                            \"type\": \"boolean\",",
									"                            \"default\": false,",
									"                            \"title\": \"The calculated Schema\",",
									"                            \"examples\": [",
									"                                false",
									"                            ]",
									"                        },",
									"                        \"discount_breakdown\": {",
									"                            \"type\": \"object\",",
									"                            \"default\": {},",
									"                            \"title\": \"The discount_breakdown Schema\",",
									"                            \"required\": [",
									"                                \"cart_discounts\",",
									"                                \"product_discounts\",",
									"                                \"voucher_discounts\"",
									"                            ],",
									"                            \"properties\": {",
									"                                \"cart_discounts\": {",
									"                                    \"type\": \"integer\",",
									"                                    \"default\": 0,",
									"                                    \"title\": \"The cart_discounts Schema\",",
									"                                    \"examples\": [",
									"                                        0",
									"                                    ]",
									"                                },",
									"                                \"product_discounts\": {",
									"                                    \"type\": \"integer\",",
									"                                    \"default\": 0,",
									"                                    \"title\": \"The product_discounts Schema\",",
									"                                    \"examples\": [",
									"                                        0",
									"                                    ]",
									"                                },",
									"                                \"voucher_discounts\": {",
									"                                    \"type\": \"integer\",",
									"                                    \"default\": 0,",
									"                                    \"title\": \"The voucher_discounts Schema\",",
									"                                    \"examples\": [",
									"                                        0",
									"                                    ]",
									"                                }",
									"                            },",
									"                            \"examples\": [{",
									"                                \"cart_discounts\": 0,",
									"                                \"product_discounts\": 0,",
									"                                \"voucher_discounts\": 0",
									"                            }]",
									"                        },",
									"                        \"id\": {",
									"                            \"type\": \"string\",",
									"                            \"default\": \"\",",
									"                            \"title\": \"The id Schema\",",
									"                            \"examples\": [",
									"                                \"b1993c79-923e-46ec-bc05-f8e063f59756\"",
									"                            ]",
									"                        },",
									"                        \"pcid\": {",
									"                            \"type\": \"null\",",
									"                            \"default\": null,",
									"                            \"title\": \"The pcid Schema\",",
									"                            \"examples\": [",
									"                                null",
									"                            ]",
									"                        },",
									"                        \"seller_carts\": {",
									"                            \"type\": \"array\",",
									"                            \"default\": [],",
									"                            \"title\": \"The seller_carts Schema\",",
									"                            \"items\": {},",
									"                            \"examples\": [",
									"                                []",
									"                            ]",
									"                        },",
									"                        \"status\": {",
									"                            \"type\": \"string\",",
									"                            \"default\": \"\",",
									"                            \"title\": \"The status Schema\",",
									"                            \"examples\": [",
									"                                \"open\"",
									"                            ]",
									"                        },",
									"                        \"tax_breakdown\": {",
									"                            \"type\": \"array\",",
									"                            \"default\": [],",
									"                            \"title\": \"The tax_breakdown Schema\",",
									"                            \"items\": {},",
									"                            \"examples\": [",
									"                                []",
									"                            ]",
									"                        },",
									"                        \"tenant_id\": {",
									"                            \"type\": \"string\",",
									"                            \"default\": \"\",",
									"                            \"title\": \"The tenant_id Schema\",",
									"                            \"examples\": [",
									"                                \"JOE_FRESH\"",
									"                            ]",
									"                        },",
									"                        \"totals\": {",
									"                            \"type\": \"object\",",
									"                            \"default\": {},",
									"                            \"title\": \"The totals Schema\",",
									"                            \"required\": [",
									"                                \"additional_fees\",",
									"                                \"cart_total\",",
									"                                \"cart_total_before_taxes\",",
									"                                \"discounts\",",
									"                                \"loyalty_points\",",
									"                                \"subtotal\",",
									"                                \"tax\"",
									"                            ],",
									"                            \"properties\": {",
									"                                \"additional_fees\": {",
									"                                    \"type\": \"integer\",",
									"                                    \"default\": 0,",
									"                                    \"title\": \"The additional_fees Schema\",",
									"                                    \"examples\": [",
									"                                        0",
									"                                    ]",
									"                                },",
									"                                \"cart_total\": {",
									"                                    \"type\": \"integer\",",
									"                                    \"default\": 0,",
									"                                    \"title\": \"The cart_total Schema\",",
									"                                    \"examples\": [",
									"                                        0",
									"                                    ]",
									"                                },",
									"                                \"cart_total_before_taxes\": {",
									"                                    \"type\": \"integer\",",
									"                                    \"default\": 0,",
									"                                    \"title\": \"The cart_total_before_taxes Schema\",",
									"                                    \"examples\": [",
									"                                        0",
									"                                    ]",
									"                                },",
									"                                \"discounts\": {",
									"                                    \"type\": \"integer\",",
									"                                    \"default\": 0,",
									"                                    \"title\": \"The discounts Schema\",",
									"                                    \"examples\": [",
									"                                        0",
									"                                    ]",
									"                                },",
									"                                \"loyalty_points\": {",
									"                                    \"type\": \"integer\",",
									"                                    \"default\": 0,",
									"                                    \"title\": \"The loyalty_points Schema\",",
									"                                    \"examples\": [",
									"                                        0",
									"                                    ]",
									"                                },",
									"                                \"subtotal\": {",
									"                                    \"type\": \"integer\",",
									"                                    \"default\": 0,",
									"                                    \"title\": \"The subtotal Schema\",",
									"                                    \"examples\": [",
									"                                        0",
									"                                    ]",
									"                                },",
									"                                \"tax\": {",
									"                                    \"type\": \"integer\",",
									"                                    \"default\": 0,",
									"                                    \"title\": \"The tax Schema\",",
									"                                    \"examples\": [",
									"                                        0",
									"                                    ]",
									"                                }",
									"                            },",
									"                            \"examples\": [{",
									"                                \"additional_fees\": 0,",
									"                                \"cart_total\": 0,",
									"                                \"cart_total_before_taxes\": 0,",
									"                                \"discounts\": 0,",
									"                                \"loyalty_points\": 0,",
									"                                \"subtotal\": 0,",
									"                                \"tax\": 0",
									"                            }]",
									"                        },",
									"                        \"updated_at\": {",
									"                            \"type\": \"string\",",
									"                            \"default\": \"\",",
									"                            \"title\": \"The updated_at Schema\",",
									"                            \"examples\": [",
									"                                \"2022-09-26T12:43:15.988259Z\"",
									"                            ]",
									"                        }",
									"                    },",
									"                    \"examples\": [{",
									"                        \"banner_id\": null,",
									"                        \"calculated\": false,",
									"                        \"discount_breakdown\": {",
									"                            \"cart_discounts\": 0,",
									"                            \"product_discounts\": 0,",
									"                            \"voucher_discounts\": 0",
									"                        },",
									"                        \"id\": \"b1993c79-923e-46ec-bc05-f8e063f59756\",",
									"                        \"pcid\": null,",
									"                        \"seller_carts\": [],",
									"                        \"status\": \"open\",",
									"                        \"tax_breakdown\": [],",
									"                        \"tenant_id\": \"JOE_FRESH\",",
									"                        \"totals\": {",
									"                            \"additional_fees\": 0,",
									"                            \"cart_total\": 0,",
									"                            \"cart_total_before_taxes\": 0,",
									"                            \"discounts\": 0,",
									"                            \"loyalty_points\": 0,",
									"                            \"subtotal\": 0,",
									"                            \"tax\": 0",
									"                        },",
									"                        \"updated_at\": \"2022-09-26T12:43:15.988259Z\"",
									"                    }]",
									"                }",
									"            },",
									"            \"examples\": [{",
									"                \"cart\": {",
									"                    \"banner_id\": null,",
									"                    \"calculated\": false,",
									"                    \"discount_breakdown\": {",
									"                        \"cart_discounts\": 0,",
									"                        \"product_discounts\": 0,",
									"                        \"voucher_discounts\": 0",
									"                    },",
									"                    \"id\": \"b1993c79-923e-46ec-bc05-f8e063f59756\",",
									"                    \"pcid\": null,",
									"                    \"seller_carts\": [],",
									"                    \"status\": \"open\",",
									"                    \"tax_breakdown\": [],",
									"                    \"tenant_id\": \"JOE_FRESH\",",
									"                    \"totals\": {",
									"                        \"additional_fees\": 0,",
									"                        \"cart_total\": 0,",
									"                        \"cart_total_before_taxes\": 0,",
									"                        \"discounts\": 0,",
									"                        \"loyalty_points\": 0,",
									"                        \"subtotal\": 0,",
									"                        \"tax\": 0",
									"                    },",
									"                    \"updated_at\": \"2022-09-26T12:43:15.988259Z\"",
									"                }",
									"            }]",
									"        }",
									"    },",
									"    \"examples\": [{",
									"        \"response\": {",
									"            \"cart\": {",
									"                \"banner_id\": null,",
									"                \"calculated\": false,",
									"                \"discount_breakdown\": {",
									"                    \"cart_discounts\": 0,",
									"                    \"product_discounts\": 0,",
									"                    \"voucher_discounts\": 0",
									"                },",
									"                \"id\": \"b1993c79-923e-46ec-bc05-f8e063f59756\",",
									"                \"pcid\": null,",
									"                \"seller_carts\": [],",
									"                \"status\": \"open\",",
									"                \"tax_breakdown\": [],",
									"                \"tenant_id\": \"JOE_FRESH\",",
									"                \"totals\": {",
									"                    \"additional_fees\": 0,",
									"                    \"cart_total\": 0,",
									"                    \"cart_total_before_taxes\": 0,",
									"                    \"discounts\": 0,",
									"                    \"loyalty_points\": 0,",
									"                    \"subtotal\": 0,",
									"                    \"tax\": 0",
									"                },",
									"                \"updated_at\": \"2022-09-26T12:43:15.988259Z\"",
									"            }",
									"        }",
									"    }]",
									"}",
									"pm.test(\"validate schema\", function () {",
									"pm.response.to.have.jsonSchema(schema);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Loblaw-Tenant-ID",
								"value": "{{tenant_id}}",
								"type": "default"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "default"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "WEB",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"language\": \"english\",\n    \"banner_id\": \"\",\n    \"pcid\": \"\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}/api/v1/carts",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-08]- Verify an API behaviour to POST Cart with the valid data set i.e valid tenant_id , no pcid and valid banner_id and Device type as IOS",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"const schema = {",
									"   ",
									"    \"type\": \"object\",",
									"    \"default\": {},",
									"    \"title\": \"Root Schema\",",
									"    \"required\": [",
									"        \"response\"",
									"    ],",
									"    \"properties\": {",
									"        \"response\": {",
									"            \"type\": \"object\",",
									"            \"default\": {},",
									"            \"title\": \"The response Schema\",",
									"            \"required\": [",
									"                \"cart\"",
									"            ],",
									"            \"properties\": {",
									"                \"cart\": {",
									"                    \"type\": \"object\",",
									"                    \"default\": {},",
									"                    \"title\": \"The cart Schema\",",
									"                    \"required\": [",
									"                        \"banner_id\",",
									"                        \"calculated\",",
									"                        \"discount_breakdown\",",
									"                        \"id\",",
									"                        \"pcid\",",
									"                        \"seller_carts\",",
									"                        \"status\",",
									"                        \"tax_breakdown\",",
									"                        \"tenant_id\",",
									"                        \"totals\",",
									"                        \"updated_at\"",
									"                    ],",
									"                    \"properties\": {",
									"                        \"banner_id\": {",
									"                            \"type\": \"null\",",
									"                            \"default\": null,",
									"                            \"title\": \"The banner_id Schema\",",
									"                            \"examples\": [",
									"                                null",
									"                            ]",
									"                        },",
									"                        \"calculated\": {",
									"                            \"type\": \"boolean\",",
									"                            \"default\": false,",
									"                            \"title\": \"The calculated Schema\",",
									"                            \"examples\": [",
									"                                false",
									"                            ]",
									"                        },",
									"                        \"discount_breakdown\": {",
									"                            \"type\": \"object\",",
									"                            \"default\": {},",
									"                            \"title\": \"The discount_breakdown Schema\",",
									"                            \"required\": [",
									"                                \"cart_discounts\",",
									"                                \"product_discounts\",",
									"                                \"voucher_discounts\"",
									"                            ],",
									"                            \"properties\": {",
									"                                \"cart_discounts\": {",
									"                                    \"type\": \"integer\",",
									"                                    \"default\": 0,",
									"                                    \"title\": \"The cart_discounts Schema\",",
									"                                    \"examples\": [",
									"                                        0",
									"                                    ]",
									"                                },",
									"                                \"product_discounts\": {",
									"                                    \"type\": \"integer\",",
									"                                    \"default\": 0,",
									"                                    \"title\": \"The product_discounts Schema\",",
									"                                    \"examples\": [",
									"                                        0",
									"                                    ]",
									"                                },",
									"                                \"voucher_discounts\": {",
									"                                    \"type\": \"integer\",",
									"                                    \"default\": 0,",
									"                                    \"title\": \"The voucher_discounts Schema\",",
									"                                    \"examples\": [",
									"                                        0",
									"                                    ]",
									"                                }",
									"                            },",
									"                            \"examples\": [{",
									"                                \"cart_discounts\": 0,",
									"                                \"product_discounts\": 0,",
									"                                \"voucher_discounts\": 0",
									"                            }]",
									"                        },",
									"                        \"id\": {",
									"                            \"type\": \"string\",",
									"                            \"default\": \"\",",
									"                            \"title\": \"The id Schema\",",
									"                            \"examples\": [",
									"                                \"4e9163ae-2285-492c-a899-0d9cf9f72207\"",
									"                            ]",
									"                        },",
									"                        \"pcid\": {",
									"                            \"type\": \"null\",",
									"                            \"default\": null,",
									"                            \"title\": \"The pcid Schema\",",
									"                            \"examples\": [",
									"                                null",
									"                            ]",
									"                        },",
									"                        \"seller_carts\": {",
									"                            \"type\": \"array\",",
									"                            \"default\": [],",
									"                            \"title\": \"The seller_carts Schema\",",
									"                            \"items\": {},",
									"                            \"examples\": [",
									"                                []",
									"                            ]",
									"                        },",
									"                        \"status\": {",
									"                            \"type\": \"string\",",
									"                            \"default\": \"\",",
									"                            \"title\": \"The status Schema\",",
									"                            \"examples\": [",
									"                                \"open\"",
									"                            ]",
									"                        },",
									"                        \"tax_breakdown\": {",
									"                            \"type\": \"array\",",
									"                            \"default\": [],",
									"                            \"title\": \"The tax_breakdown Schema\",",
									"                            \"items\": {},",
									"                            \"examples\": [",
									"                                []",
									"                            ]",
									"                        },",
									"                        \"tenant_id\": {",
									"                            \"type\": \"string\",",
									"                            \"default\": \"\",",
									"                            \"title\": \"The tenant_id Schema\",",
									"                            \"examples\": [",
									"                                \"JOE_FRESH\"",
									"                            ]",
									"                        },",
									"                        \"totals\": {",
									"                            \"type\": \"object\",",
									"                            \"default\": {},",
									"                            \"title\": \"The totals Schema\",",
									"                            \"required\": [",
									"                                \"additional_fees\",",
									"                                \"cart_total\",",
									"                                \"cart_total_before_taxes\",",
									"                                \"discounts\",",
									"                                \"loyalty_points\",",
									"                                \"subtotal\",",
									"                                \"tax\"",
									"                            ],",
									"                            \"properties\": {",
									"                                \"additional_fees\": {",
									"                                    \"type\": \"integer\",",
									"                                    \"default\": 0,",
									"                                    \"title\": \"The additional_fees Schema\",",
									"                                    \"examples\": [",
									"                                        0",
									"                                    ]",
									"                                },",
									"                                \"cart_total\": {",
									"                                    \"type\": \"integer\",",
									"                                    \"default\": 0,",
									"                                    \"title\": \"The cart_total Schema\",",
									"                                    \"examples\": [",
									"                                        0",
									"                                    ]",
									"                                },",
									"                                \"cart_total_before_taxes\": {",
									"                                    \"type\": \"integer\",",
									"                                    \"default\": 0,",
									"                                    \"title\": \"The cart_total_before_taxes Schema\",",
									"                                    \"examples\": [",
									"                                        0",
									"                                    ]",
									"                                },",
									"                                \"discounts\": {",
									"                                    \"type\": \"integer\",",
									"                                    \"default\": 0,",
									"                                    \"title\": \"The discounts Schema\",",
									"                                    \"examples\": [",
									"                                        0",
									"                                    ]",
									"                                },",
									"                                \"loyalty_points\": {",
									"                                    \"type\": \"integer\",",
									"                                    \"default\": 0,",
									"                                    \"title\": \"The loyalty_points Schema\",",
									"                                    \"examples\": [",
									"                                        0",
									"                                    ]",
									"                                },",
									"                                \"subtotal\": {",
									"                                    \"type\": \"integer\",",
									"                                    \"default\": 0,",
									"                                    \"title\": \"The subtotal Schema\",",
									"                                    \"examples\": [",
									"                                        0",
									"                                    ]",
									"                                },",
									"                                \"tax\": {",
									"                                    \"type\": \"integer\",",
									"                                    \"default\": 0,",
									"                                    \"title\": \"The tax Schema\",",
									"                                    \"examples\": [",
									"                                        0",
									"                                    ]",
									"                                }",
									"                            },",
									"                            \"examples\": [{",
									"                                \"additional_fees\": 0,",
									"                                \"cart_total\": 0,",
									"                                \"cart_total_before_taxes\": 0,",
									"                                \"discounts\": 0,",
									"                                \"loyalty_points\": 0,",
									"                                \"subtotal\": 0,",
									"                                \"tax\": 0",
									"                            }]",
									"                        },",
									"                        \"updated_at\": {",
									"                            \"type\": \"string\",",
									"                            \"default\": \"\",",
									"                            \"title\": \"The updated_at Schema\",",
									"                            \"examples\": [",
									"                                \"2022-09-26T12:43:35.312308Z\"",
									"                            ]",
									"                        }",
									"                    },",
									"                    \"examples\": [{",
									"                        \"banner_id\": null,",
									"                        \"calculated\": false,",
									"                        \"discount_breakdown\": {",
									"                            \"cart_discounts\": 0,",
									"                            \"product_discounts\": 0,",
									"                            \"voucher_discounts\": 0",
									"                        },",
									"                        \"id\": \"4e9163ae-2285-492c-a899-0d9cf9f72207\",",
									"                        \"pcid\": null,",
									"                        \"seller_carts\": [],",
									"                        \"status\": \"open\",",
									"                        \"tax_breakdown\": [],",
									"                        \"tenant_id\": \"JOE_FRESH\",",
									"                        \"totals\": {",
									"                            \"additional_fees\": 0,",
									"                            \"cart_total\": 0,",
									"                            \"cart_total_before_taxes\": 0,",
									"                            \"discounts\": 0,",
									"                            \"loyalty_points\": 0,",
									"                            \"subtotal\": 0,",
									"                            \"tax\": 0",
									"                        },",
									"                        \"updated_at\": \"2022-09-26T12:43:35.312308Z\"",
									"                    }]",
									"                }",
									"            },",
									"            \"examples\": [{",
									"                \"cart\": {",
									"                    \"banner_id\": null,",
									"                    \"calculated\": false,",
									"                    \"discount_breakdown\": {",
									"                        \"cart_discounts\": 0,",
									"                        \"product_discounts\": 0,",
									"                        \"voucher_discounts\": 0",
									"                    },",
									"                    \"id\": \"4e9163ae-2285-492c-a899-0d9cf9f72207\",",
									"                    \"pcid\": null,",
									"                    \"seller_carts\": [],",
									"                    \"status\": \"open\",",
									"                    \"tax_breakdown\": [],",
									"                    \"tenant_id\": \"JOE_FRESH\",",
									"                    \"totals\": {",
									"                        \"additional_fees\": 0,",
									"                        \"cart_total\": 0,",
									"                        \"cart_total_before_taxes\": 0,",
									"                        \"discounts\": 0,",
									"                        \"loyalty_points\": 0,",
									"                        \"subtotal\": 0,",
									"                        \"tax\": 0",
									"                    },",
									"                    \"updated_at\": \"2022-09-26T12:43:35.312308Z\"",
									"                }",
									"            }]",
									"        }",
									"    },",
									"    \"examples\": [{",
									"        \"response\": {",
									"            \"cart\": {",
									"                \"banner_id\": null,",
									"                \"calculated\": false,",
									"                \"discount_breakdown\": {",
									"                    \"cart_discounts\": 0,",
									"                    \"product_discounts\": 0,",
									"                    \"voucher_discounts\": 0",
									"                },",
									"                \"id\": \"4e9163ae-2285-492c-a899-0d9cf9f72207\",",
									"                \"pcid\": null,",
									"                \"seller_carts\": [],",
									"                \"status\": \"open\",",
									"                \"tax_breakdown\": [],",
									"                \"tenant_id\": \"JOE_FRESH\",",
									"                \"totals\": {",
									"                    \"additional_fees\": 0,",
									"                    \"cart_total\": 0,",
									"                    \"cart_total_before_taxes\": 0,",
									"                    \"discounts\": 0,",
									"                    \"loyalty_points\": 0,",
									"                    \"subtotal\": 0,",
									"                    \"tax\": 0",
									"                },",
									"                \"updated_at\": \"2022-09-26T12:43:35.312308Z\"",
									"            }",
									"        }",
									"    }]",
									"}",
									"pm.test(\"validate schema\", function () {",
									"pm.response.to.have.jsonSchema(schema);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Loblaw-Tenant-ID",
								"value": "{{tenant_id}}",
								"type": "default"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "default"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "IOS",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"language\": \"english\",\n    \"banner_id\": \"\",\n    \"pcid\": \"\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}/api/v1/carts",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-08]- Verify an API behaviour to POST Cart with the valid data set i.e valid tenant_id , no pcid and valid banner_id and NO Device type.",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"",
									"pm.test(\"Response body contains Invalid Device Type\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid Device Type\");",
									"})",
									"",
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Status code name has string\", () => {",
									"  pm.response.to.have.status(\"Bad Request\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Loblaw-Tenant-ID",
								"value": "{{tenant_id}}",
								"type": "default"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "default"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"language\": \"english\",\n    \"banner_id\": \"\",\n    \"pcid\": \"\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}/api/v1/carts",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-09]- Verify an API behaviour to POST Cart with the valid data set but null value in language and the Device type as ANDROID.",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Loblaw-Tenant-ID",
								"value": "{{tenant_id}}",
								"type": "default"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "default"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "ANDROID",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"language\": \"\",\n    \"banner_id\": \"\",\n    \"pcid\": \"{{pcid}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}/api/v1/carts",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-09]- Verify an API behaviour to POST Cart with the valid data set but null value in language and the Device type as WEB",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Loblaw-Tenant-ID",
								"value": "{{tenant_id}}",
								"type": "default"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "default"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "WEB",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"language\": \"\",\n    \"banner_id\": \"\",\n    \"pcid\": \"{{pcid}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}/api/v1/carts",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-09]- Verify an API behaviour to POST Cart with the valid data set but null value in language and the Device type as IOS",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Loblaw-Tenant-ID",
								"value": "{{tenant_id}}",
								"type": "default"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "default"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "IOS",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"language\": \"\",\n    \"banner_id\": \"\",\n    \"pcid\": \"{{pcid}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}/api/v1/carts",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-09]- Verify an API behaviour to POST Cart with the valid data set but null value in language and NO  Device type .",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Loblaw-Tenant-ID",
								"value": "{{tenant_id}}",
								"type": "default"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "default"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"language\": \"\",\n    \"banner_id\": \"\",\n    \"pcid\": \"{{pcid}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}/api/v1/carts",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "GET Customer Cart",
			"item": [
				{
					"name": "Cart Domain [TC-01]- Verify an API behaviour to GET Customer Cart with the valid data set i.e valid tenant_id and valid pcid and Device type as IOS",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var body = pm.response.json();",
									"if (0 < body.response.carts.length) {",
									"    pm.collectionVariables.set(\"cart_id\", body.response.carts[0].cart_id);",
									"}",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-loblaw-pcid",
								"value": "{{pcid}}",
								"type": "text"
							},
							{
								"key": "x-loblaw-tenant-id",
								"value": "{{tenant_id}}",
								"type": "text"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "IOS",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{Host}}/api/v1/customers/{{pcid}}/carts",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"customers",
								"{{pcid}}",
								"carts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-01]- Verify an API behaviour to GET Customer Cart with the valid data set i.e valid tenant_id and valid pcid and Device type as Android",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var body = pm.response.json();",
									"if (0 < body.response.carts.length) {",
									"    pm.collectionVariables.set(\"cart_id\", body.response.carts[0].cart_id);",
									"}",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-loblaw-pcid",
								"value": "{{pcid}}",
								"type": "text"
							},
							{
								"key": "x-loblaw-tenant-id",
								"value": "{{tenant_id}}",
								"type": "text"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "ANDROID",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{Host}}/api/v1/customers/{{pcid}}/carts",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"customers",
								"{{pcid}}",
								"carts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-01]- Verify an API behaviour to GET Customer Cart with the valid data set i.e valid tenant_id and valid pcid and Device type as WEB.",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var body = pm.response.json();",
									"if (0 < body.response.carts.length) {",
									"    pm.collectionVariables.set(\"cart_id\", body.response.carts[0].cart_id);",
									"}",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-loblaw-pcid",
								"value": "{{pcid}}",
								"type": "text"
							},
							{
								"key": "x-loblaw-tenant-id",
								"value": "{{tenant_id}}",
								"type": "text"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "ANDROID",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{Host}}/api/v1/customers/{{pcid}}/carts",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"customers",
								"{{pcid}}",
								"carts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-01]- Verify an API behaviour to GET Customer Cart with the valid data set i.e valid tenant_id and valid pcid and NO Device type.",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"",
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Status code name has string\", () => {",
									"  pm.response.to.have.status(\"Bad Request\");",
									"  ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-loblaw-pcid",
								"value": "{{pcid}}",
								"type": "text"
							},
							{
								"key": "x-loblaw-tenant-id",
								"value": "{{tenant_id}}",
								"type": "text"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{Host}}/api/v1/customers/{{pcid}}/carts",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"customers",
								"{{pcid}}",
								"carts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-02]- Verify an API behaviour to GET Customer Cart with the Invalid data set i.e valid tenant_id and invalid pcid and Device type as IOS.",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-loblaw-pcid",
								"value": "{{pcid1}}",
								"type": "text"
							},
							{
								"key": "x-loblaw-tenant-id",
								"value": "{{tenant_id}}",
								"type": "text"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "IOS",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{Host}}/api/v1/customers/{{pcid1}}/carts",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"customers",
								"{{pcid1}}",
								"carts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-02]- Verify an API behaviour to GET Customer Cart with the Invalid data set i.e valid tenant_id and invalid pcid and Device type as Android",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-loblaw-pcid",
								"value": "{{pcid1}}",
								"type": "text"
							},
							{
								"key": "x-loblaw-tenant-id",
								"value": "{{tenant_id}}",
								"type": "text"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "ANDROID",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{Host}}/api/v1/customers/{{pcid1}}/carts",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"customers",
								"{{pcid1}}",
								"carts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-02]- Verify an API behaviour to GET Customer Cart with the Invalid data set i.e valid tenant_id and invalid pcid and Device type as WEB",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-loblaw-pcid",
								"value": "{{pcid1}}",
								"type": "text"
							},
							{
								"key": "x-loblaw-tenant-id",
								"value": "{{tenant_id}}",
								"type": "text"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "WEB",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{Host}}/api/v1/customers/{{pcid1}}/carts",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"customers",
								"{{pcid1}}",
								"carts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-02]- Verify an API behaviour to GET Customer Cart with the Invalid data set i.e valid tenant_id and invalid pcid and NO  Device type .",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Status code name has string\", () => {",
									"  pm.response.to.have.status(\"Bad Request\");",
									"  ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-loblaw-pcid",
								"value": "{{pcid1}}",
								"type": "text"
							},
							{
								"key": "x-loblaw-tenant-id",
								"value": "{{tenant_id}}",
								"type": "text"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{Host}}/api/v1/customers/{{pcid1}}/carts",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"customers",
								"{{pcid1}}",
								"carts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-03]- Verify an API behaviour to GET CustomerCart with the Invalid data set i.e invalid tenant_id and valid pcid and Device type as Android.",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-loblaw-pcid",
								"value": "{{pcid}}",
								"type": "text"
							},
							{
								"key": "x-loblaw-tenant-id",
								"value": "joeFresh",
								"type": "text"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "ANDROID",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{Host}}/api/v1/customers/{{pcid}}/carts",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"customers",
								"{{pcid}}",
								"carts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-03]- Verify an API behaviour to GET CustomerCart with the Invalid data set i.e invalid tenant_id and valid pcid and Device type as IOS.",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-loblaw-pcid",
								"value": "{{pcid}}",
								"type": "text"
							},
							{
								"key": "x-loblaw-tenant-id",
								"value": "joeFresh",
								"type": "text"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "IOS",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{Host}}/api/v1/customers/{{pcid}}/carts",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"customers",
								"{{pcid}}",
								"carts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-03]- Verify an API behaviour to GET CustomerCart with the Invalid data set i.e invalid tenant_id and valid pcid and Device type as WEB.",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-loblaw-pcid",
								"value": "{{pcid}}",
								"type": "text"
							},
							{
								"key": "x-loblaw-tenant-id",
								"value": "joeFresh",
								"type": "text"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "WEB",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{Host}}/api/v1/customers/{{pcid}}/carts",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"customers",
								"{{pcid}}",
								"carts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-03]- Verify an API behaviour to GET CustomerCart with the Invalid data set i.e invalid tenant_id and valid pcid and NO Device type .",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-loblaw-pcid",
								"value": "{{pcid}}",
								"type": "text"
							},
							{
								"key": "x-loblaw-tenant-id",
								"value": "joeFresh",
								"type": "text"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{Host}}/api/v1/customers/{{pcid}}/carts",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"customers",
								"{{pcid}}",
								"carts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-4]- Verify an API behaviour to GET Customer Cart with the Invalid data set i.e invalid tenant_id and invalid pcid and the device type as ANDROID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-loblaw-pcid",
								"value": "{{pcid1}}",
								"type": "text"
							},
							{
								"key": "x-loblaw-tenant-id",
								"value": "joeFresh",
								"type": "text"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "ANDROID",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{Host}}/api/v1/customers/{{pcid}}/carts",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"customers",
								"{{pcid}}",
								"carts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-4]- Verify an API behaviour to GET Customer Cart with the Invalid data set i.e invalid tenant_id and invalid pcid and the device type as WEB",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-loblaw-pcid",
								"value": "{{pcid1}}",
								"type": "text"
							},
							{
								"key": "x-loblaw-tenant-id",
								"value": "joeFresh",
								"type": "text"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "WEB",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{Host}}/api/v1/customers/{{pcid}}/carts",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"customers",
								"{{pcid}}",
								"carts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-4]- Verify an API behaviour to GET Customer Cart with the Invalid data set i.e invalid tenant_id and invalid pcid and the device type as IOS.",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-loblaw-pcid",
								"value": "{{pcid1}}",
								"type": "text"
							},
							{
								"key": "x-loblaw-tenant-id",
								"value": "joeFresh",
								"type": "text"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "IOS",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{Host}}/api/v1/customers/{{pcid}}/carts",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"customers",
								"{{pcid}}",
								"carts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-4]- Verify an API behaviour to GET Customer Cart with the Invalid data set i.e invalid tenant_id and invalid pcid and NO device type",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-loblaw-pcid",
								"value": "{{pcid1}}",
								"type": "text"
							},
							{
								"key": "x-loblaw-tenant-id",
								"value": "joeFresh",
								"type": "text"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{Host}}/api/v1/customers/{{pcid}}/carts",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"customers",
								"{{pcid}}",
								"carts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-11]- Verify an API behaviour to GET Customer Cart with the Invalid URL.",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-loblaw-pcid",
								"value": "{{pcid}}",
								"type": "text"
							},
							{
								"key": "x-loblaw-tenant-id",
								"value": "{{tenant_id}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{Host}}/api/v1/customers/{{pcid}}/cart",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"customers",
								"{{pcid}}",
								"cart"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "GET Cart",
			"item": [
				{
					"name": "Cart Domain [TC-1]- Verify an API behaviour to GET Cart with the valid data set i.e valid tenant_id , valid pcid and valid Cart_id and the Device type as ANDROID.",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"cart_id\", jsonData.cart_id);",
									"",
									"pm.test(\"Successful POST request\", () => {",
									"  pm.expect(pm.response.code).to.be.oneOf([200,422]);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-Loblaw-Tenant-ID",
								"value": "{{tenant_id}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-PCid",
								"value": "{{pcid}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "ANDROID",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{Host}}/api/v1/carts/{{cart_id}}",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts",
								"{{cart_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-1]- Verify an API behaviour to GET Cart with the valid data set i.e valid tenant_id , valid pcid and valid Cart_id and the Device type as WEB.",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"",
									"pm.test(\"Successful POST request\", () => {",
									"  pm.expect(pm.response.code).to.be.oneOf([200,422]);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-Loblaw-Tenant-ID",
								"value": "{{tenant_id}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-PCid",
								"value": "{{pcid}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "WEB",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{Host}}/api/v1/carts/{{cart_id}}",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts",
								"{{cart_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-1]- Verify an API behaviour to GET Cart with the valid data set i.e valid tenant_id , valid pcid and valid Cart_id and the Device type as IOS.",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"cart_id\", jsonData.cart_id);",
									"",
									"pm.test(\"Successful POST request\", () => {",
									"  pm.expect(pm.response.code).to.be.oneOf([200,422]);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-Loblaw-Tenant-ID",
								"value": "{{tenant_id}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-PCid",
								"value": "{{pcid}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "IOS",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{Host}}/api/v1/carts/{{cart_id}}",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts",
								"{{cart_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-1]- Verify an API behaviour to GET Cart with the valid data set i.e valid tenant_id , valid pcid and valid Cart_id and NO  Device type",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"cart_id\", jsonData.cart_id);",
									"",
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Status code name has string\", () => {",
									"  pm.response.to.have.status(\"Bad Request\");",
									"  ",
									"});",
									"",
									"pm.test(\"Response body contains Invalid Device Type\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid Device Type\");",
									"})",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-Loblaw-Tenant-ID",
								"value": "{{tenant_id}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-PCid",
								"value": "{{pcid}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{Host}}/api/v1/carts/{{cart_id}}",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts",
								"{{cart_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-2]- Verify an API behaviour to GET Cart with the invalid data set i.e invalid tenant_id , valid pcid and valid Cart_id and no Device type.",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Status code name has string\", () => {",
									"  pm.response.to.have.status(\"Bad Request\");",
									"  ",
									"});",
									"",
									"pm.test(\"Response body contains Invalid Tenant ID\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid Tenant ID\");",
									"})",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-Loblaw-Tenant-ID",
								"value": "JoeFresh",
								"type": "default"
							},
							{
								"key": "X-Loblaw-PCid",
								"value": "{{pcid}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{Host}}/api/v1/carts/{{cart_id}}/",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts",
								"{{cart_id}}",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-3]- Verify an API behaviour to GET Cart with the invalid data set i.e valid tenant_id , valid pcid and invalid Cart_id and the device type as IOS.",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Response body contains The cart was not found\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"The cart was not found\");",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-Loblaw-Tenant-ID",
								"value": "{{tenant_id}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-PCid",
								"value": "{{pcid}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "IOS",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{Host}}/api/v1/carts/{{cart_id1}}/",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts",
								"{{cart_id1}}",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-3]- Verify an API behaviour to GET Cart with the invalid data set i.e valid tenant_id , valid pcid and invalid Cart_id and the device type as ANDROID.",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Response body contains The cart was not found\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"The cart was not found\");",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-Loblaw-Tenant-ID",
								"value": "{{tenant_id}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-PCid",
								"value": "{{pcid}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "ANDROID",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{Host}}/api/v1/carts/{{cart_id1}}/",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts",
								"{{cart_id1}}",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-3]- Verify an API behaviour to GET Cart with the invalid data set i.e valid tenant_id , valid pcid and invalid Cart_id and the device type as WEB.",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Response body contains The cart was not found\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"The cart was not found\");",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-Loblaw-Tenant-ID",
								"value": "{{tenant_id}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-PCid",
								"value": "{{pcid}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "WEB",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{Host}}/api/v1/carts/{{cart_id1}}/",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts",
								"{{cart_id1}}",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-3]- Verify an API behaviour to GET Cart with the invalid data set i.e valid tenant_id , valid pcid and invalid Cart_id and NO device type.",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Response body contains Invalid Device Type\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid Device Type\");",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-Loblaw-Tenant-ID",
								"value": "{{tenant_id}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-PCid",
								"value": "{{pcid}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{Host}}/api/v1/carts/{{cart_id1}}/",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts",
								"{{cart_id1}}",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-4]- Verify an API behaviour to GET Cart with the invalid data set i.e valid tenant_id , invalid pcid and valid Cart_id and the device type IOS.",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"cart_id\", jsonData.cart_id);",
									"",
									"pm.test(\"Successful POST request\", () => {",
									"  pm.expect(pm.response.code).to.be.oneOf([200,422]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-Loblaw-Tenant-ID",
								"value": "{{tenant_id}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-PCid",
								"value": "{{pcid1}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "IOS",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{Host}}/api/v1/carts/{{cart_id}}",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts",
								"{{cart_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-4]- Verify an API behaviour to GET Cart with the invalid data set i.e valid tenant_id , invalid pcid and valid Cart_id and the device type ANDROID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"cart_id\", jsonData.cart_id);",
									"",
									"pm.test(\"Successful POST request\", () => {",
									"  pm.expect(pm.response.code).to.be.oneOf([200,422]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-Loblaw-Tenant-ID",
								"value": "{{tenant_id}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-PCid",
								"value": "{{pcid1}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "ANDROID",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{Host}}/api/v1/carts/{{cart_id}}",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts",
								"{{cart_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-4]- Verify an API behaviour to GET Cart with the invalid data set i.e valid tenant_id , invalid pcid and valid Cart_id and the device type WEB.",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"cart_id\", jsonData.cart_id);",
									"",
									"pm.test(\"Successful POST request\", () => {",
									"  pm.expect(pm.response.code).to.be.oneOf([200,422]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-Loblaw-Tenant-ID",
								"value": "{{tenant_id}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-PCid",
								"value": "{{pcid1}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "WEB",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{Host}}/api/v1/carts/{{cart_id}}",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts",
								"{{cart_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-4]- Verify an API behaviour to GET Cart with the invalid data set i.e valid tenant_id , invalid pcid and valid Cart_id and NO device type.",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Response body contains Invalid Device Type\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid Device Type\");",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-Loblaw-Tenant-ID",
								"value": "{{tenant_id}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-PCid",
								"value": "{{pcid1}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{Host}}/api/v1/carts/{{cart_id}}",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts",
								"{{cart_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-5]- Verify an API behaviour to GET Cart with the invalid data set i.e invalid tenant_id , invalid pcid and invalid Cart_id and Invalid Device type.",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-Loblaw-Tenant-ID",
								"value": "JoeFresh",
								"type": "default"
							},
							{
								"key": "X-Loblaw-PCid",
								"value": "{{pcid1}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{Host}}/api/v1/carts/{{cart_id1}}",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts",
								"{{cart_id1}}"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.collectionVariables.set(\"cart_id\", jsonData.cart_id);"
						]
					}
				}
			]
		},
		{
			"name": "GET Cart Heartbeat",
			"item": [
				{
					"name": "Cart Domain [TC-1]- Verify an API behaviour to GET Cart Heartbeat with the valid data set i.e valid tenant_id , valid pcid and valid Cart_id and the device tyoe as IOS.",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"",
									"pm.test(\"Successful POST request\", () => {",
									"  pm.expect(pm.response.code).to.be.oneOf([200,422]);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-loblaw-pcid",
								"value": "{{pcid}}",
								"type": "text"
							},
							{
								"key": "x-loblaw-tenant-id",
								"value": "{{tenant_id}}",
								"type": "text"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "IOS",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{Host}}/api/v1/carts/{{cart_id}}/heartbeat",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts",
								"{{cart_id}}",
								"heartbeat"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-1]- Verify an API behaviour to GET Cart Heartbeat with the valid data set i.e valid tenant_id , valid pcid and valid Cart_id and the device tyoe as WEB.",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", () => {",
									"  pm.expect(pm.response.code).to.be.oneOf([200,422]);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-loblaw-pcid",
								"value": "{{pcid}}",
								"type": "text"
							},
							{
								"key": "x-loblaw-tenant-id",
								"value": "{{tenant_id}}",
								"type": "text"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "WEB",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{Host}}/api/v1/carts/{{cart_id}}/heartbeat",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts",
								"{{cart_id}}",
								"heartbeat"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-1]- Verify an API behaviour to GET Cart Heartbeat with the valid data set i.e valid tenant_id , valid pcid and valid Cart_id and the device tyoe as ANDROID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", () => {",
									"  pm.expect(pm.response.code).to.be.oneOf([200,422]);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-loblaw-pcid",
								"value": "{{pcid}}",
								"type": "text"
							},
							{
								"key": "x-loblaw-tenant-id",
								"value": "{{tenant_id}}",
								"type": "text"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "ANDROID",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{Host}}/api/v1/carts/{{cart_id}}/heartbeat",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts",
								"{{cart_id}}",
								"heartbeat"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-1]- Verify an API behaviour to GET Cart Heartbeat with the valid data set i.e valid tenant_id , valid pcid and valid Cart_id and NO device type",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Response body contains Invalid Device Type\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid Device Type\");",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-loblaw-pcid",
								"value": "{{pcid}}",
								"type": "text"
							},
							{
								"key": "x-loblaw-tenant-id",
								"value": "{{tenant_id}}",
								"type": "text"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{Host}}/api/v1/carts/{{cart_id}}/heartbeat",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts",
								"{{cart_id}}",
								"heartbeat"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-2]- Verify an API behaviour to GET Cart Heartbeat with the invalid data set i.e invalid tenant_id , invalid pcid and invalid Cart_id.",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-loblaw-pcid",
								"value": "{{pcid1}}",
								"type": "text"
							},
							{
								"key": "x-loblaw-tenant-id",
								"value": "JoeFresh",
								"type": "text"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{Host}}/api/v1/carts/{{cart_id1}}/heartbeat",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts",
								"{{cart_id1}}",
								"heartbeat"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-3]- Verify an API behaviour to GET Cart Heartbeat with the invalid data set i.e valid tenant_id , valid pcid and invalid Cart_id and the device type as IOS",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-loblaw-pcid",
								"value": "{{pcid}}",
								"type": "text"
							},
							{
								"key": "x-loblaw-tenant-id",
								"value": "{{tenant_id}}",
								"type": "text"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "IOS",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{Host}}/api/v1/carts/{{cart_id1}}/heartbeat",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts",
								"{{cart_id1}}",
								"heartbeat"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-3]- Verify an API behaviour to GET Cart Heartbeat with the invalid data set i.e valid tenant_id , valid pcid and invalid Cart_id and the device type as ANDROID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-loblaw-pcid",
								"value": "{{pcid}}",
								"type": "text"
							},
							{
								"key": "x-loblaw-tenant-id",
								"value": "{{tenant_id}}",
								"type": "text"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "ANDROID",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{Host}}/api/v1/carts/{{cart_id1}}/heartbeat",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts",
								"{{cart_id1}}",
								"heartbeat"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-3]- Verify an API behaviour to GET Cart Heartbeat with the invalid data set i.e valid tenant_id , valid pcid and invalid Cart_id and the device type as WEB",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-loblaw-pcid",
								"value": "{{pcid}}",
								"type": "text"
							},
							{
								"key": "x-loblaw-tenant-id",
								"value": "{{tenant_id}}",
								"type": "text"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "WEB",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{Host}}/api/v1/carts/{{cart_id1}}/heartbeat",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts",
								"{{cart_id1}}",
								"heartbeat"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-3]- Verify an API behaviour to GET Cart Heartbeat with the invalid data set i.e valid tenant_id , valid pcid and invalid Cart_id and  NO device type",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Response body contains Invalid Device Type\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid Device Type\");",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-loblaw-pcid",
								"value": "{{pcid}}",
								"type": "text"
							},
							{
								"key": "x-loblaw-tenant-id",
								"value": "{{tenant_id}}",
								"type": "text"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{Host}}/api/v1/carts/{{cart_id1}}/heartbeat",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts",
								"{{cart_id1}}",
								"heartbeat"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-4]- Verify an API behaviour to GET Cart Heartbeat with the invalid data set i.e valid tenant_id , invalid pcid and valid Cart_id and the device type as IOS",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"cart_id\", jsonData.cart_id);",
									"",
									"pm.test(\"Successful POST request\", () => {",
									"  pm.expect(pm.response.code).to.be.oneOf([204,422]);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-loblaw-pcid",
								"value": "b1c-bcce-4a92-a20b-3af89d43f",
								"type": "text"
							},
							{
								"key": "x-loblaw-tenant-id",
								"value": "{{tenant_id}}",
								"type": "text"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "IOS",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{Host}}/api/v1/carts/{{cart_id}}/heartbeat",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts",
								"{{cart_id}}",
								"heartbeat"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-4]- Verify an API behaviour to GET Cart Heartbeat with the invalid data set i.e valid tenant_id , invalid pcid and valid Cart_id and the device type as ANDROID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"cart_id\", jsonData.cart_id);",
									"",
									"pm.test(\"Successful POST request\", () => {",
									"  pm.expect(pm.response.code).to.be.oneOf([204,422]);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-loblaw-pcid",
								"value": "b1c-bcce-4a92-a20b-3af89d43f",
								"type": "text"
							},
							{
								"key": "x-loblaw-tenant-id",
								"value": "{{tenant_id}}",
								"type": "text"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "ANDROID",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{Host}}/api/v1/carts/{{cart_id}}/heartbeat",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts",
								"{{cart_id}}",
								"heartbeat"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-4]- Verify an API behaviour to GET Cart Heartbeat with the invalid data set i.e valid tenant_id , invalid pcid and valid Cart_id and the device type as WEB",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"cart_id\", jsonData.cart_id);",
									"",
									"pm.test(\"Successful POST request\", () => {",
									"  pm.expect(pm.response.code).to.be.oneOf([204,422]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-loblaw-pcid",
								"value": "b1c-bcce-4a92-a20b-3af89d43f",
								"type": "text"
							},
							{
								"key": "x-loblaw-tenant-id",
								"value": "{{tenant_id}}",
								"type": "text"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "WEB",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{Host}}/api/v1/carts/{{cart_id}}/heartbeat",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts",
								"{{cart_id}}",
								"heartbeat"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-4]- Verify an API behaviour to GET Cart Heartbeat with the invalid data set i.e valid tenant_id , invalid pcid and valid Cart_id and NO device type",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"cart_id\", jsonData.cart_id);",
									"",
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Response body contains Invalid Device Type\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid Device Type\");",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-loblaw-pcid",
								"value": "b1c-bcce-4a92-a20b-3af89d43f",
								"type": "text"
							},
							{
								"key": "x-loblaw-tenant-id",
								"value": "{{tenant_id}}",
								"type": "text"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{Host}}/api/v1/carts/{{cart_id}}/heartbeat",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts",
								"{{cart_id}}",
								"heartbeat"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-5]- Verify an API behaviour to GET Cart Heartbeat with the invalid data set i.e invalid tenant_id , valid pcid and valid Cart_id and NO device type.",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-loblaw-pcid",
								"value": "{{pcid1}}",
								"type": "text"
							},
							{
								"key": "x-loblaw-tenant-id",
								"value": "JoeFreash",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{Host}}/api/v1/carts/{{cart_id1}}/heartbeat",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts",
								"{{cart_id1}}",
								"heartbeat"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "POST Order Callback",
			"item": [
				{
					"name": "Cart Domain [TC-1]- Verify an API behaviour to POST Order Callback with the valid data set i.e valid tenant_id , valid pcid and valid Cart_id and the device type is IOS.",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"cart_id\", jsonData.cart_id);",
									"",
									"pm.test(\"Successful POST request\", () => {",
									"  pm.expect(pm.response.code).to.be.oneOf([204,422]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-loblaw-pcid",
								"value": "{{pcid}}",
								"type": "text"
							},
							{
								"key": "x-loblaw-tenant-id",
								"value": "{{tenant_id}}",
								"type": "text"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "IOS",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"event\": \"order-placed\",\n  \"is_live_order\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}/api/v1/carts/{{cart_id}}/order-callback",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts",
								"{{cart_id}}",
								"order-callback"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-1]- Verify an API behaviour to POST Order Callback with the valid data set i.e valid tenant_id , valid pcid and valid Cart_id and the device type is WEB.",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"cart_id\", jsonData.cart_id);",
									"",
									"pm.test(\"Successful POST request\", () => {",
									"  pm.expect(pm.response.code).to.be.oneOf([204,422]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-loblaw-pcid",
								"value": "{{pcid}}",
								"type": "text"
							},
							{
								"key": "x-loblaw-tenant-id",
								"value": "{{tenant_id}}",
								"type": "text"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "WEB",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"event\": \"order-placed\",\n  \"is_live_order\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}/api/v1/carts/{{cart_id}}/order-callback",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts",
								"{{cart_id}}",
								"order-callback"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-1]- Verify an API behaviour to POST Order Callback with the valid data set i.e valid tenant_id , valid pcid and valid Cart_id and the device type is Android.",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"cart_id\", jsonData.cart_id);",
									"",
									"pm.test(\"Successful POST request\", () => {",
									"  pm.expect(pm.response.code).to.be.oneOf([204,422]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-loblaw-pcid",
								"value": "{{pcid}}",
								"type": "text"
							},
							{
								"key": "x-loblaw-tenant-id",
								"value": "{{tenant_id}}",
								"type": "text"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "ANDROID",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"event\": \"order-placed\",\n  \"is_live_order\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}/api/v1/carts/{{cart_id}}/order-callback",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts",
								"{{cart_id}}",
								"order-callback"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-1]- Verify an API behaviour to POST Order Callback with the valid data set i.e valid tenant_id , valid pcid and valid Cart_id and NO device type .",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-loblaw-pcid",
								"value": "{{pcid}}",
								"type": "text"
							},
							{
								"key": "x-loblaw-tenant-id",
								"value": "{{tenant_id}}",
								"type": "text"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"event\": \"order-placed\",\n  \"is_live_order\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}/api/v1/carts/{{cart_id}}/order-callback",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts",
								"{{cart_id}}",
								"order-callback"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-2]- Verify an API behaviour to POST Order Callback with the invalid data set i.e invalid tenant_id , invalid pcid and invalid Cart_id.",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-loblaw-pcid",
								"value": "{{pcid1}}",
								"type": "text"
							},
							{
								"key": "x-loblaw-tenant-id",
								"value": "JoeFresh",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"event\": \"order-placed\",\n  \"is_live_order\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}/api/v1/carts/{{cart_id1}}/order-callback",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts",
								"{{cart_id1}}",
								"order-callback"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-3]- Verify an API behaviour to POST Order Callback with the invalid data set i.e valid tenant_id , valid pcid and invalid Cart_id when device type is IOS.",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-loblaw-pcid",
								"value": "{{pcid}}",
								"type": "text"
							},
							{
								"key": "x-loblaw-tenant-id",
								"value": "{{tenant_id}}",
								"type": "text"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "IOS",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"event\": \"order-placed\",\n  \"is_live_order\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}/api/v1/carts/{{cart_id1}}/order-callback",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts",
								"{{cart_id1}}",
								"order-callback"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-3]- Verify an API behaviour to POST Order Callback with the invalid data set i.e valid tenant_id , valid pcid and invalid Cart_id when device type is ANDROID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-loblaw-pcid",
								"value": "{{pcid}}",
								"type": "text"
							},
							{
								"key": "x-loblaw-tenant-id",
								"value": "{{tenant_id}}",
								"type": "text"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "ANDROID",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"event\": \"order-placed\",\n  \"is_live_order\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}/api/v1/carts/{{cart_id1}}/order-callback",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts",
								"{{cart_id1}}",
								"order-callback"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-3]- Verify an API behaviour to POST Order Callback with the invalid data set i.e valid tenant_id , valid pcid and invalid Cart_id when device type is WEB",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-loblaw-pcid",
								"value": "{{pcid}}",
								"type": "text"
							},
							{
								"key": "x-loblaw-tenant-id",
								"value": "{{tenant_id}}",
								"type": "text"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "WEB",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"event\": \"order-placed\",\n  \"is_live_order\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}/api/v1/carts/{{cart_id1}}/order-callback",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts",
								"{{cart_id1}}",
								"order-callback"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-3]- Verify an API behaviour to POST Order Callback with the invalid data set i.e valid tenant_id , valid pcid and invalid Cart_id when NO device type",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-loblaw-pcid",
								"value": "{{pcid}}",
								"type": "text"
							},
							{
								"key": "x-loblaw-tenant-id",
								"value": "{{tenant_id}}",
								"type": "text"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"event\": \"order-placed\",\n  \"is_live_order\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}/api/v1/carts/{{cart_id1}}/order-callback",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts",
								"{{cart_id1}}",
								"order-callback"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-4]- Verify an API behaviour to POST Order Callback with the invalid data set i.e valid tenant_id , invalid pcid and valid Cart_id when the device type is IOS.",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", () => {",
									"  pm.expect(pm.response.code).to.be.oneOf([204,422]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-loblaw-pcid",
								"value": "{{pcid1}}",
								"type": "text"
							},
							{
								"key": "x-loblaw-tenant-id",
								"value": "{{tenant_id}}",
								"type": "text"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "IOS",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"event\": \"order-placed\",\n  \"is_live_order\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}/api/v1/carts/{{cart_id}}/order-callback",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts",
								"{{cart_id}}",
								"order-callback"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-4]- Verify an API behaviour to POST Order Callback with the invalid data set i.e valid tenant_id , invalid pcid and valid Cart_id when the device type is ANDROID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", () => {",
									"  pm.expect(pm.response.code).to.be.oneOf([204,422]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-loblaw-pcid",
								"value": "{{pcid1}}",
								"type": "text"
							},
							{
								"key": "x-loblaw-tenant-id",
								"value": "{{tenant_id}}",
								"type": "text"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "ANDROID",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"event\": \"order-placed\",\n  \"is_live_order\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}/api/v1/carts/{{cart_id}}/order-callback",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts",
								"{{cart_id}}",
								"order-callback"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-4]- Verify an API behaviour to POST Order Callback with the invalid data set i.e valid tenant_id , invalid pcid and valid Cart_id when the device type is WEB",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", () => {",
									"  pm.expect(pm.response.code).to.be.oneOf([204,422]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-loblaw-pcid",
								"value": "{{pcid1}}",
								"type": "text"
							},
							{
								"key": "x-loblaw-tenant-id",
								"value": "{{tenant_id}}",
								"type": "text"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "WEB",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"event\": \"order-placed\",\n  \"is_live_order\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}/api/v1/carts/{{cart_id}}/order-callback",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts",
								"{{cart_id}}",
								"order-callback"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-4]- Verify an API behaviour to POST Order Callback with the invalid data set i.e valid tenant_id , invalid pcid and valid Cart_id when the device type is WEB Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", () => {",
									"  pm.expect(pm.response.code).to.be.oneOf([204,400]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-loblaw-pcid",
								"value": "{{pcid1}}",
								"type": "text"
							},
							{
								"key": "x-loblaw-tenant-id",
								"value": "{{tenant_id}}",
								"type": "text"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"event\": \"order-placed\",\n  \"is_live_order\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}/api/v1/carts/{{cart_id}}/order-callback",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts",
								"{{cart_id}}",
								"order-callback"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-5]- Verify an API behaviour to POST Order Callback with the invalid data set i.e invalid tenant_id , valid pcid and valid Cart_id.",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-loblaw-pcid",
								"value": "{{pcid}}",
								"type": "text"
							},
							{
								"key": "x-loblaw-tenant-id",
								"value": "JoeFresh",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"event\": \"order-placed\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}/api/v1/carts/{{cart_id}}/order-callback",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts",
								"{{cart_id}}",
								"order-callback"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-6]- Verify an API behaviour to POST Order Callback with the invalid data set i.e invalid body",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-loblaw-pcid",
								"value": "{{pcid}}",
								"type": "text"
							},
							{
								"key": "x-loblaw-tenant-id",
								"value": "{{tenant_id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}/api/v1/carts/{{cart_id}}/order-callback",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts",
								"{{cart_id}}",
								"order-callback"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-7]- Verify an API behaviour to POST Order Callback with the invalid URL.",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-loblaw-pcid",
								"value": "{{pcid}}",
								"type": "text"
							},
							{
								"key": "x-loblaw-tenant-id",
								"value": "{{tenant_id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"event\": \"order-placed\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}/api/v1/carts/{{cart_id}}/order-callback/api",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts",
								"{{cart_id}}",
								"order-callback",
								"api"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "POST refresh Cart",
			"item": [
				{
					"name": "Cart Domain [TC-2]- Verify an API behaviour to POST Refresh Cart  with the valid data set i.e valid tenant_id , valid pcid,  valid Cart_id and the device type as WEB",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"cart_id\", jsonData.cart_id);",
									"",
									"pm.test(\"Successful POST request\", () => {",
									"  pm.expect(pm.response.code).to.be.oneOf([200,422]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Loblaw-Tenant-ID",
								"value": "{{tenant_id}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-PCid",
								"value": "{{pcid}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "WEB",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}/api/v1/carts/{{cart_id}}",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts",
								"{{cart_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-3]- Verify an API behaviour to POST Refresh Cart  with the valid data set i.e valid tenant_id,valid pcid, valid cart_id and the device type as IOS",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"cart_id\", jsonData.cart_id);",
									"",
									"pm.test(\"Successful POST request\", () => {",
									"  pm.expect(pm.response.code).to.be.oneOf([200,422]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Loblaw-Tenant-ID",
								"value": "{{tenant_id}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-PCid",
								"value": "{{pcid}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "IOS",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}/api/v1/carts/{{cart_id}}/refresh",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts",
								"{{cart_id}}",
								"refresh"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-4]- Verify an API behaviour to POST Refresh Cart  with the invalid data set i.e invalid tenant_id , invalid pcid ,invalid Cart_id and the device type as Android",
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Loblaw-Tenant-ID",
								"value": "{{tenant_id}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-PCid",
								"value": "{{pcid}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "Android",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}/api/v1/carts/{{cart_id}}/refresh",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts",
								"{{cart_id}}",
								"refresh"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-20]- Verify an API behaviour to POST Refresh Cart  with the invalid data set i.e invalid tenant_id , invalid pcid ,invalid Cart_id and no device type",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid Tenant ID\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Loblaw-Tenant-ID",
								"value": "joefresh",
								"type": "default"
							},
							{
								"key": "X-Loblaw-PCid",
								"value": "{{pcid1}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}/api/v1/carts/{{cart_id1}}/refresh",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts",
								"{{cart_id1}}",
								"refresh"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-18]- Verify an API behaviour to POST Refresh Cart  with the invalid data set i.e invalid tenant_id , invalid pcid ,invalid Cart_id and the device type as Android.",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid Tenant ID\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Loblaw-Tenant-ID",
								"value": "joefresh",
								"type": "default"
							},
							{
								"key": "X-Loblaw-PCid",
								"value": "{{pcid1}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "Android",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}/api/v1/carts/{{cart_id1}}/refresh",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts",
								"{{cart_id1}}",
								"refresh"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-17]- Verify an API behaviour to POST Refresh Cart  with the invalid data set i.e invalid tenant_id , invalid pcid ,invalid Cart_id the device type as IOS",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid Tenant ID\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Loblaw-Tenant-ID",
								"value": "Joefresh",
								"type": "default"
							},
							{
								"key": "X-Loblaw-PCid",
								"value": "{{pcid1}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "IOS",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}/api/v1/carts/{{cart_id1}}/refresh",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts",
								"{{cart_id1}}",
								"refresh"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-19]- Verify an API behaviour to POST Refresh Cart  with the invalid data set i.e invalid tenant_id , invalid pcid , invalid Cart_id and the device type as WEB",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid Tenant ID\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Loblaw-Tenant-ID",
								"value": "joefresh",
								"type": "default"
							},
							{
								"key": "X-Loblaw-PCid",
								"value": "{{pcid1}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "WEB",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}/api/v1/carts/{{cart_id1}}/refresh",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts",
								"{{cart_id1}}",
								"refresh"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-8]- Verify an API behaviour to POST Refresh Cart  with the invalid data set i.e valid tenant_id , valid pcid , invalid Cart_id and the device type as WEB.",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"The cart was not found\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Loblaw-Tenant-ID",
								"value": "{{tenant_id}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-PCid",
								"value": "{{pcid}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "WEB",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}/api/v1/carts/{{cart_id1}}/refresh",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts",
								"{{cart_id1}}",
								"refresh"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-6]- Verify an API behaviour to POST Refresh Cart  with the invalid data set i.e valid tenant_id , valid pcid , invalid Cart_id and the device type as IOS",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"The cart was not found\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Loblaw-Tenant-ID",
								"value": "{{tenant_id}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-PCid",
								"value": "{{pcid}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "IOS",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}/api/v1/carts/{{cart_id1}}/refresh",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts",
								"{{cart_id1}}",
								"refresh"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-5]- Verify an API behaviour to POST Refresh Cart  with the invalid data set i.e valid tenant_id , valid pcid , invalid Cart_id and the device type as Android",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"The cart was not found\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Loblaw-Tenant-ID",
								"value": "{{tenant_id}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-PCid",
								"value": "{{pcid}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "ANDROID",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}/api/v1/carts/{{cart_id1}}/refresh",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts",
								"{{cart_id1}}",
								"refresh"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-7]- Verify an API behaviour to POST Refresh Cart  with the invalid data set i.e valid tenant_id , valid pcid , invalid Cart_id and NO device type",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid Device Type\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Loblaw-Tenant-ID",
								"value": "{{tenant_id}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-PCid",
								"value": "{{pcid}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}/api/v1/carts/{{cart_id1}}/refresh",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts",
								"{{cart_id1}}",
								"refresh"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-10]- Verify an API behaviour to POST Refresh Cart  with the invalid data set i.e valid tenant_id , invalid pcid ,valid Cart_id the device type as IOS",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"cart_id\", jsonData.cart_id);",
									"",
									"pm.test(\"Successful POST request\", () => {",
									"  pm.expect(pm.response.code).to.be.oneOf([200,422]);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Loblaw-Tenant-ID",
								"value": "{{tenant_id}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-PCid",
								"value": "{{pcid1}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "IOS",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}/api/v1/carts/{{cart_id}}/refresh",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts",
								"{{cart_id}}",
								"refresh"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-9]- Verify an API behaviour to POST Refresh Cart  with the invalid data set i.e valid tenant_id , invalid pcid ,valid Cart_id the device type as Android",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"cart_id\", jsonData.cart_id);",
									"",
									"pm.test(\"Successful POST request\", () => {",
									"  pm.expect(pm.response.code).to.be.oneOf([200,422]);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Loblaw-Tenant-ID",
								"value": "{{tenant_id}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-PCid",
								"value": "{{pcid1}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "ANDROID",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}/api/v1/carts/{{cart_id}}/refresh",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts",
								"{{cart_id}}",
								"refresh"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-11]- Verify an API behaviour to POST Refresh Cart  with the invalid data set i.e valid tenant_id , invalid pcid ,valid Cart_id the device type as WEB",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"cart_id\", jsonData.cart_id);",
									"",
									"pm.test(\"Successful POST request\", () => {",
									"  pm.expect(pm.response.code).to.be.oneOf([200,422]);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Loblaw-Tenant-ID",
								"value": "{{tenant_id}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-PCid",
								"value": "{{pcid1}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "WEB",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}/api/v1/carts/{{cart_id}}/refresh",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts",
								"{{cart_id}}",
								"refresh"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-12]- Verify an API behaviour to POST Refresh Cart  with the invalid data set i.e valid tenant_id , invalid pcid ,valid Cart_id no device type",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid Device Type\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Loblaw-Tenant-ID",
								"value": "{{tenant_id}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-PCid",
								"value": "{{pcid1}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}/api/v1/carts/{{cart_id}}/refresh",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts",
								"{{cart_id}}",
								"refresh"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-13]- Verify an API behaviour to POST Refresh Cart  with the invalid data set i.e invalid tenant_id , valid pcid ,valid Cart_id the device type as Android.",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid Tenant ID\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Loblaw-Tenant-ID",
								"value": "{{tenantId1}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-PCid",
								"value": "{{pcid}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "Android",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}/api/v1/carts/{{cart_id}}",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts",
								"{{cart_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-16]- Verify an API behaviour to POST Refresh Cart  with the invalid data set i.e invalid tenant_id , valid pcid ,valid Cart_id no device type",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid Tenant ID\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Loblaw-Tenant-ID",
								"value": "{{tenantId1}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-PCid",
								"value": "{{pcid}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}/api/v1/carts/{{cart_id}}/refresh",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts",
								"{{cart_id}}",
								"refresh"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-14]- Verify an API behaviour to POST Refresh Cart  with the invalid data set i.e invalid tenant_id , valid pcid ,valid Cart_id the device type as IOS",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid Tenant ID\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Loblaw-Tenant-ID",
								"value": "{{tenantId1}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-PCid",
								"value": "{{pcid}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "IOS",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}/api/v1/carts/{{cart_id}}/refresh",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts",
								"{{cart_id}}",
								"refresh"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-15]- Verify an API behaviour to POST Refresh Cart  with the invalid data set i.e invalid tenant_id , invalid pcid ,valid Cart_id the device type as WEB",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid Tenant ID\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Loblaw-Tenant-ID",
								"value": "{{tenantId1}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-PCid",
								"value": "{{pcid}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "WEB",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}/api/v1/carts/{{cart_id}}/refresh",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts",
								"{{cart_id}}",
								"refresh"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "POST sync cart",
			"item": [
				{
					"name": "Cart Domain [TC-2]- Verify an API behaviour to POST Sync Cart  with the valid data set i.e valid tenant_id , valid pcid,  valid Cart_id and the device type as WEB",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"cart_id\", jsonData.cart_id);",
									"",
									"pm.test(\"Successful POST request\", () => {",
									"  pm.expect(pm.response.code).to.be.oneOf([200,422]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Loblaw-Tenant-ID",
								"value": "{{tenant_id}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-PCid",
								"value": "{{pcid}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "WEB",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"item_events\": {\n        \"F1WR021022002_EA\": {\n            \"quantity\": 3,\n            \"seller_id\": \"5264\"\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}/api/v1/carts/{{cart_id}}",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts",
								"{{cart_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-3]- Verify an API behaviour to POST Sync Cart  with the valid data set i.e valid tenant_id,valid pcid, valid cart_id and the device type as IOS",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"cart_id\", jsonData.cart_id);",
									"",
									"pm.test(\"Successful POST request\", () => {",
									"  pm.expect(pm.response.code).to.be.oneOf([200,422]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Loblaw-Tenant-ID",
								"value": "{{tenant_id}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-PCid",
								"value": "{{pcid}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "IOS",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"item_events\": {\n        \"F1WR021022002_EA\": {\n            \"quantity\": 3,\n            \"seller_id\": \"5264\"\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}/api/v1/carts/{{cart_id}}",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts",
								"{{cart_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-4]- Verify an API behaviour to POST Sync Cart  with the invalid data set i.e invalid tenant_id , invalid pcid ,invalid Cart_id and the device type as Android",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"cart_id\", jsonData.cart_id);",
									"",
									"pm.test(\"Successful POST request\", () => {",
									"  pm.expect(pm.response.code).to.be.oneOf([200,422]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Loblaw-Tenant-ID",
								"value": "{{tenant_id}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-PCid",
								"value": "{{pcid}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "ANDROID",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"item_events\": {\n        \"F1WR021022002_EA\": {\n            \"quantity\": 3,\n            \"seller_id\": \"5264\"\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}/api/v1/carts/{{cart_id}}",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts",
								"{{cart_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-20]- Verify an API behaviour to POST SYNC Cart  with the invalid data set i.e invalid tenant_id , invalid pcid ,invalid Cart_id and no device type",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid Tenant ID\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Loblaw-Tenant-ID",
								"value": "joefresh",
								"type": "default"
							},
							{
								"key": "X-Loblaw-PCid",
								"value": "{{pcid1}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"item_events\": {\n        \"F1WR021022002_EA\": {\n            \"quantity\": 3,\n            \"seller_id\": \"5264\"\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}/api/v1/carts/{{cart_id1}}",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts",
								"{{cart_id1}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-18]- Verify an API behaviour to POST SYNC Cart  with the invalid data set i.e invalid tenant_id , invalid pcid ,invalid Cart_id and the device type as Android.",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid Tenant ID\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Loblaw-Tenant-ID",
								"value": "joefresh",
								"type": "default"
							},
							{
								"key": "X-Loblaw-PCid",
								"value": "{{pcid1}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "Android",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"item_events\": {\n        \"F1WR021022002_EA\": {\n            \"quantity\": 3,\n            \"seller_id\": \"5264\"\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}/api/v1/carts/{{cart_id1}}",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts",
								"{{cart_id1}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-17]- Verify an API behaviour to POST SYNC Cart  with the invalid data set i.e invalid tenant_id , invalid pcid ,invalid Cart_id the device type as IOS",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid Tenant ID\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Loblaw-Tenant-ID",
								"value": "Joefresh",
								"type": "default"
							},
							{
								"key": "X-Loblaw-PCid",
								"value": "{{pcid1}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "IOS",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"item_events\": {\n        \"F1WR021022002_EA\": {\n            \"quantity\": 3,\n            \"seller_id\": \"5264\"\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}/api/v1/carts/{{cart_id1}}",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts",
								"{{cart_id1}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-19]- Verify an API behaviour to POST SYNC Cart  with the invalid data set i.e invalid tenant_id , invalid pcid , invalid Cart_id and the device type as WEB",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid Tenant ID\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Loblaw-Tenant-ID",
								"value": "joefresh",
								"type": "default"
							},
							{
								"key": "X-Loblaw-PCid",
								"value": "{{pcid1}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "WEB",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"item_events\": {\n        \"F1WR021022002_EA\": {\n            \"quantity\": 3,\n            \"seller_id\": \"5264\"\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}/api/v1/carts/{{cart_id1}}",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts",
								"{{cart_id1}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-8]- Verify an API behaviour to POST SYNC Cart  with the invalid data set i.e valid tenant_id , valid pcid , invalid Cart_id and the device type as WEB.",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"The cart was not found\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Loblaw-Tenant-ID",
								"value": "{{tenant_id}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-PCid",
								"value": "{{pcid}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "WEB",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"item_events\": {\n        \"F1WR021022002_EA\": {\n            \"quantity\": 3,\n            \"seller_id\": \"5264\"\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}/api/v1/carts/{{cart_id1}}",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts",
								"{{cart_id1}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-6]- Verify an API behaviour to POST SYNCCart  with the invalid data set i.e valid tenant_id , valid pcid , invalid Cart_id and the device type as IOS",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"The cart was not found\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Loblaw-Tenant-ID",
								"value": "{{tenant_id}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-PCid",
								"value": "{{pcid}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "IOS",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"item_events\": {\n        \"F1WR021022002_EA\": {\n            \"quantity\": 3,\n            \"seller_id\": \"5264\"\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}/api/v1/carts/{{cart_id1}}",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts",
								"{{cart_id1}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-5]- Verify an API behaviour to POST SYNC Cart  with the invalid data set i.e valid tenant_id , valid pcid , invalid Cart_id and the device type as Android",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"The cart was not found\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Loblaw-Tenant-ID",
								"value": "{{tenant_id}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-PCid",
								"value": "{{pcid}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "ANDROID",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"item_events\": {\n        \"F1WR021022002_EA\": {\n            \"quantity\": 3,\n            \"seller_id\": \"5264\"\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}/api/v1/carts/{{cart_id1}}",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts",
								"{{cart_id1}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-7]- Verify an API behaviour to POST SYNC Cart  with the invalid data set i.e valid tenant_id , valid pcid , invalid Cart_id and NO device type",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid Device Type\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Loblaw-Tenant-ID",
								"value": "{{tenant_id}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-PCid",
								"value": "{{pcid}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"item_events\": {\n        \"F1WR021022002_EA\": {\n            \"quantity\": 3,\n            \"seller_id\": \"5264\"\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}/api/v1/carts/{{cart_id1}}",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts",
								"{{cart_id1}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-10]- Verify an API behaviour to POST SYNC Cart  with the invalid data set i.e valid tenant_id , invalid pcid ,valid Cart_id the device type as IOS",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"cart_id\", jsonData.cart_id);",
									"",
									"pm.test(\"Successful POST request\", () => {",
									"  pm.expect(pm.response.code).to.be.oneOf([200,422]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Loblaw-Tenant-ID",
								"value": "{{tenant_id}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-PCid",
								"value": "{{pcid1}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "IOS",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"item_events\": {\n        \"F1WR021022002_EA\": {\n            \"quantity\": 3,\n            \"seller_id\": \"5264\"\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}/api/v1/carts/{{cart_id}}",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts",
								"{{cart_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-9]- Verify an API behaviour to POST SYNC Cart  with the invalid data set i.e valid tenant_id , invalid pcid ,valid Cart_id the device type as Android",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"cart_id\", jsonData.cart_id);",
									"",
									"pm.test(\"Successful POST request\", () => {",
									"  pm.expect(pm.response.code).to.be.oneOf([200,422]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Loblaw-Tenant-ID",
								"value": "{{tenant_id}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-PCid",
								"value": "{{pcid1}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "ANDROID",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"item_events\": {\n        \"F1WR021022002_EA\": {\n            \"quantity\": 3,\n            \"seller_id\": \"5264\"\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}/api/v1/carts/{{cart_id}}",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts",
								"{{cart_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-11]- Verify an API behaviour to POST SYNC Cart  with the invalid data set i.e valid tenant_id , invalid pcid ,valid Cart_id the device type as WEB",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"cart_id\", jsonData.cart_id);",
									"",
									"pm.test(\"Successful POST request\", () => {",
									"  pm.expect(pm.response.code).to.be.oneOf([200,422]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Loblaw-Tenant-ID",
								"value": "{{tenant_id}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-PCid",
								"value": "{{pcid1}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "WEB",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"item_events\": {\n        \"F1WR021022002_EA\": {\n            \"quantity\": 3,\n            \"seller_id\": \"5264\"\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}/api/v1/carts/{{cart_id}}",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts",
								"{{cart_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-12]- Verify an API behaviour to POST SYNC Cart  with the invalid data set i.e valid tenant_id , invalid pcid ,valid Cart_id no device type",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid Device Type\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Loblaw-Tenant-ID",
								"value": "{{tenant_id}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-PCid",
								"value": "{{pcid1}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"item_events\": {\n        \"F1WR021022002_EA\": {\n            \"quantity\": 3,\n            \"seller_id\": \"5264\"\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}/api/v1/carts/{{cart_id}}",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts",
								"{{cart_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-13]- Verify an API behaviour to POST SYNC Cart  with the invalid data set i.e invalid tenant_id , valid pcid ,valid Cart_id the device type as Android.",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid Tenant ID\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Loblaw-Tenant-ID",
								"value": "{{tenantId1}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-PCid",
								"value": "{{pcid}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "Android",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"item_events\": {\n        \"F1WR021022002_EA\": {\n            \"quantity\": 3,\n            \"seller_id\": \"5264\"\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}/api/v1/carts/{{cart_id}}",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts",
								"{{cart_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-16]- Verify an API behaviour to POST SYNC Cart  with the invalid data set i.e invalid tenant_id , valid pcid ,valid Cart_id no device type",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid Tenant ID\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Loblaw-Tenant-ID",
								"value": "{{tenantId1}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-PCid",
								"value": "{{pcid}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"item_events\": {\n        \"F1WR021022002_EA\": {\n            \"quantity\": 3,\n            \"seller_id\": \"5264\"\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}/api/v1/carts/{{cart_id}}",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts",
								"{{cart_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-14]- Verify an API behaviour to POST SYNC Cart  with the invalid data set i.e invalid tenant_id , valid pcid ,valid Cart_id the device type as IOS",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid Tenant ID\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Loblaw-Tenant-ID",
								"value": "{{tenantId1}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-PCid",
								"value": "{{pcid}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "IOS",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"item_events\": {\n        \"F1WR021022002_EA\": {\n            \"quantity\": 3,\n            \"seller_id\": \"5264\"\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}/api/v1/carts/{{cart_id}}",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts",
								"{{cart_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-15]- Verify an API behaviour to POST SYNC Cart  with the invalid data set i.e invalid tenant_id , invalid pcid ,valid Cart_id the device type as WEB",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid Tenant ID\");",
									"});;",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Loblaw-Tenant-ID",
								"value": "{{tenantId1}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-PCid",
								"value": "{{pcid}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "WEB",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"item_events\": {\n        \"F1WR021022002_EA\": {\n            \"quantity\": 3,\n            \"seller_id\": \"5264\"\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}/api/v1/carts/{{cart_id}}",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts",
								"{{cart_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-21]- Verify an API behaviour to POST SYNC Cart  with the invalid data set i.e valid tenant_id , valid pcid ,valid Cart_id and invalid Liam with the device type as WEB",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"cart_id\", jsonData.cart_id);",
									"",
									"pm.test(\"Successful POST request\", () => {",
									"  pm.expect(pm.response.code).to.be.oneOf([200,422]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Loblaw-Tenant-ID",
								"value": "{{tenant_id}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-PCid",
								"value": "{{pcid}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "WEB",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"item_events\": {\n        \"F1WR02102200232_EA\": {\n            \"quantity\": 3,\n            \"seller_id\": \"5264\"\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}/api/v1/carts/{{cart_id}}",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts",
								"{{cart_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-22]- Verify an API behaviour to POST SYNC Cart  with the invalid data set i.e valid tenant_id , valid pcid ,valid Cart_id and invalid Liam with the device type as IOS",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"cart_id\", jsonData.cart_id);",
									"",
									"pm.test(\"Successful POST request\", () => {",
									"  pm.expect(pm.response.code).to.be.oneOf([200,422]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Loblaw-Tenant-ID",
								"value": "{{tenant_id}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-PCid",
								"value": "{{pcid}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "IOS",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"item_events\": {\n        \"F1WR021022023602_EA\": {\n            \"quantity\": 3,\n            \"seller_id\": \"5264\"\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}/api/v1/carts/{{cart_id}}",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts",
								"{{cart_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-23]- Verify an API behaviour to POST SYNC Cart  with the invalid data set i.e valid tenant_id , valid pcid ,valid Cart_id and invalid Liam with the device type as Android.",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"cart_id\", jsonData.cart_id);",
									"",
									"pm.test(\"Successful POST request\", () => {",
									"  pm.expect(pm.response.code).to.be.oneOf([200,422]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Loblaw-Tenant-ID",
								"value": "{{tenant_id}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-PCid",
								"value": "{{pcid}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "ANDROID",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"item_events\": {\n        \"F1WR021022023502_EA\": {\n            \"quantity\": 3,\n            \"seller_id\": \"5264\"\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}/api/v1/carts/{{cart_id}}",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts",
								"{{cart_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-29]- Verify an API behaviour to POST SYNC Cart  with the invalid data set i.e valid tenant_id , valid pcid ,valid Cart_id and invalid Liam with the no device type",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid Device Type\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Loblaw-Tenant-ID",
								"value": "{{tenant_id}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-PCid",
								"value": "{{pcid}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"item_events\": {\n        \"F1WR021022023502_EA\": {\n            \"quantity\": 3,\n            \"seller_id\": \"5264\"\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}/api/v1/carts/{{cart_id}}",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts",
								"{{cart_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-24]- Verify an API behaviour to POST SYNC Cart  with the invalid data set i.e valid tenant_id , valid pcid ,valid Cart_id ,valid Liam but invalid Seller ID with the device type as Android.",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"cart_id\", jsonData.cart_id);",
									"",
									"pm.test(\"Successful POST request\", () => {",
									"  pm.expect(pm.response.code).to.be.oneOf([200,422]);",
									"});;",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Loblaw-Tenant-ID",
								"value": "{{tenant_id}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-PCid",
								"value": "{{pcid}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "ANDROID",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"item_events\": {\n        \"F1WR021022002_EA\": {\n            \"quantity\": 3,\n            \"seller_id\": \"5223\"\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}/api/v1/carts/{{cart_id}}",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts",
								"{{cart_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-25]- Verify an API behaviour to POST SYNC Cart  with the invalid data set i.e valid tenant_id , valid pcid ,valid Cart_id ,valid Liam but invalid Seller ID with the device type as WEB",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"cart_id\", jsonData.cart_id);",
									"",
									"pm.test(\"Successful POST request\", () => {",
									"  pm.expect(pm.response.code).to.be.oneOf([200,422]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Loblaw-Tenant-ID",
								"value": "{{tenant_id}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-PCid",
								"value": "{{pcid}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "WEB",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"item_events\": {\n        \"F1WR021022023502_EA\": {\n            \"quantity\": 3,\n            \"seller_id\": \"5262\"\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}/api/v1/carts/{{cart_id}}",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts",
								"{{cart_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-27]- Verify an API behaviour to POST SYNC Cart  with the invalid data set i.e valid tenant_id , valid pcid ,valid Cart_id ,valid Liam but invalid Seller ID with the device type as IOS",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"cart_id\", jsonData.cart_id);",
									"",
									"pm.test(\"Successful POST request\", () => {",
									"  pm.expect(pm.response.code).to.be.oneOf([200,422]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Loblaw-Tenant-ID",
								"value": "{{tenant_id}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-PCid",
								"value": "{{pcid}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "IOS",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"item_events\": {\n        \"F1WR021022023502_EA\": {\n            \"quantity\": 3,\n            \"seller_id\": \"52678\"\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}/api/v1/carts/{{cart_id}}",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts",
								"{{cart_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-28]- Verify an API behaviour to POST SYNC Cart  with the invalid data set i.e valid tenant_id , valid pcid ,valid Cart_id ,valid Liam but invalid Seller ID with the NO device type",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid Device Type\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Loblaw-Tenant-ID",
								"value": "{{tenant_id}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-PCid",
								"value": "{{pcid}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"item_events\": {\n        \"F1WR021022023502_EA\": {\n            \"quantity\": 3,\n            \"seller_id\": \"52678\"\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}/api/v1/carts/{{cart_id}}",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts",
								"{{cart_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "POST Merge Cart",
			"item": [
				{
					"name": "Cart Domain [TC-1]- Verify an API behaviour to POST merge Cart  with the valid data set i.e valid tenant_id , valid pcid,  valid Cart_id and the device type as WEB",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"cart_id\", jsonData.cart_id);",
									"",
									"pm.test(\"Successful POST request\", () => {",
									"  pm.expect(pm.response.code).to.be.oneOf([200,422]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Loblaw-Tenant-ID",
								"value": "{{tenant_id}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-PCid",
								"value": "{{pcid}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "WEB",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"items_to_merge\": [\n        {\n            \"seller_id\": \"5264\",\n            \"items\": [\n                {\n                    \"liam\": \"F0BK013870001_EA\",\n                    \"quantity\": 1\n                }\n            ]\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}/api/v1/carts/{{cart_id}}/merge",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts",
								"{{cart_id}}",
								"merge"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-1]- Verify an API behaviour to POST merge Cart  with the valid data set i.e valid tenant_id , valid pcid,  valid Cart_id and the device type as WEB Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"cart_id\", jsonData.cart_id);",
									"",
									"pm.test(\"Successful POST request\", () => {",
									"  pm.expect(pm.response.code).to.be.oneOf([200,422]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Loblaw-Tenant-ID",
								"value": "{{tenant_id}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-PCid",
								"value": "{{pcid}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "ANDROID",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"items_to_merge\": [\n        {\n            \"seller_id\": \"5264\",\n            \"items\": [\n                {\n                    \"liam\": \"F0BK013870001_EA\",\n                    \"quantity\": 1\n                }\n            ]\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}/api/v1/carts/{{cart_id}}/merge",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts",
								"{{cart_id}}",
								"merge"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-1]- Verify an API behaviour to POST merge Cart  with the valid data set i.e valid tenant_id , valid pcid,  valid Cart_id and the device type as IOS",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"cart_id\", jsonData.cart_id);",
									"",
									"pm.test(\"Successful POST request\", () => {",
									"  pm.expect(pm.response.code).to.be.oneOf([200,422]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Loblaw-Tenant-ID",
								"value": "{{tenant_id}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-PCid",
								"value": "{{pcid}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "IOS",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"items_to_merge\": [\n        {\n            \"seller_id\": \"5264\",\n            \"items\": [\n                {\n                    \"liam\": \"F0BK013870001_EA\",\n                    \"quantity\": 1\n                }\n            ]\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}/api/v1/carts/{{cart_id}}/merge",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts",
								"{{cart_id}}",
								"merge"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-2]- Verify an API behaviour to POST MERGE Cart  with the invalid data set i.e invalid tenant_id , invalid pcid ,invalid Cart_id and the device type as Android",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"cart_id\", jsonData.cart_id);",
									"",
									"pm.test(\"Successful POST request\", () => {",
									"  pm.expect(pm.response.code).to.be.oneOf([200,422]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Loblaw-Tenant-ID",
								"value": "{{tenant_id}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-PCid",
								"value": "{{pcid}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "ANDROID",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"items_to_merge\": [\n        {\n            \"seller_id\": \"5264\",\n            \"items\": [\n                {\n                    \"liam\": \"F0BK013870001_EA\",\n                    \"quantity\": 1\n                }\n            ]\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}/api/v1/carts/{{cart_id}}/merge",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts",
								"{{cart_id}}",
								"merge"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-2]- Verify an API behaviour to POST MERGE Cart  with the invalid data set i.e invalid tenant_id , invalid pcid ,invalid Cart_id and the device type as IOS",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"cart_id\", jsonData.cart_id);",
									"",
									"pm.test(\"Successful POST request\", () => {",
									"  pm.expect(pm.response.code).to.be.oneOf([200,422]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Loblaw-Tenant-ID",
								"value": "{{tenant_id}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-PCid",
								"value": "{{pcid}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "IOS",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"items_to_merge\": [\n        {\n            \"seller_id\": \"5264\",\n            \"items\": [\n                {\n                    \"liam\": \"F0BK013870001_EA\",\n                    \"quantity\": 1\n                }\n            ]\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}/api/v1/carts/{{cart_id}}/merge",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts",
								"{{cart_id}}",
								"merge"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-2]- Verify an API behaviour to POST MERGE Cart  with the invalid data set i.e invalid tenant_id , invalid pcid ,invalid Cart_id and the device type as WEB",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"cart_id\", jsonData.cart_id);",
									"",
									"pm.test(\"Successful POST request\", () => {",
									"  pm.expect(pm.response.code).to.be.oneOf([200,422]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Loblaw-Tenant-ID",
								"value": "{{tenant_id}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-PCid",
								"value": "{{pcid}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "WEB",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"items_to_merge\": [\n        {\n            \"seller_id\": \"5264\",\n            \"items\": [\n                {\n                    \"liam\": \"F0BK013870001_EA\",\n                    \"quantity\": 1\n                }\n            ]\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}/api/v1/carts/{{cart_id}}/merge",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts",
								"{{cart_id}}",
								"merge"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-2]- Verify an API behaviour to POST MERGE Cart  with the invalid data set i.e invalid tenant_id , invalid pcid ,invalid Cart_id and NO  device type",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid Device Type\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Loblaw-Tenant-ID",
								"value": "{{tenant_id}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-PCid",
								"value": "{{pcid}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"items_to_merge\": [\n        {\n            \"seller_id\": \"5264\",\n            \"items\": [\n                {\n                    \"liam\": \"F0BK013870001_EA\",\n                    \"quantity\": 1\n                }\n            ]\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}/api/v1/carts/{{cart_id}}/merge",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts",
								"{{cart_id}}",
								"merge"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-3]- Verify an API behaviour to POST MERGE Cart  with the invalid data set i.e valid tenant_id , valid pcid , invalid Cart_id and the device type as IOS",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"The cart was not found\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Loblaw-Tenant-ID",
								"value": "{{tenant_id}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-PCid",
								"value": "{{pcid}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "IOS",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"items_to_merge\": [\n        {\n            \"seller_id\": \"5264\",\n            \"items\": [\n                {\n                    \"liam\": \"F0BK013870001_EA\",\n                    \"quantity\": 1\n                }\n            ]\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}/api/v1/carts/{{cart_id1}}/merge",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts",
								"{{cart_id1}}",
								"merge"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-3]- Verify an API behaviour to POST MERGE Cart  with the invalid data set i.e valid tenant_id , valid pcid , invalid Cart_id and the device type as ANDROID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"The cart was not found\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Loblaw-Tenant-ID",
								"value": "{{tenant_id}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-PCid",
								"value": "{{pcid}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "ANDROID",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"items_to_merge\": [\n        {\n            \"seller_id\": \"5264\",\n            \"items\": [\n                {\n                    \"liam\": \"F0BK013870001_EA\",\n                    \"quantity\": 1\n                }\n            ]\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}/api/v1/carts/{{cart_id1}}/merge",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts",
								"{{cart_id1}}",
								"merge"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-3]- Verify an API behaviour to POST MERGE Cart  with the invalid data set i.e valid tenant_id , valid pcid , invalid Cart_id and the device type as WEB",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"The cart was not found\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Loblaw-Tenant-ID",
								"value": "{{tenant_id}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-PCid",
								"value": "{{pcid}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "WEB",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"items_to_merge\": [\n        {\n            \"seller_id\": \"5264\",\n            \"items\": [\n                {\n                    \"liam\": \"F0BK013870001_EA\",\n                    \"quantity\": 1\n                }\n            ]\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}/api/v1/carts/{{cart_id1}}/merge",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts",
								"{{cart_id1}}",
								"merge"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-3]- Verify an API behaviour to POST MERGE Cart  with the invalid data set i.e valid tenant_id , valid pcid , invalid Cart_id and NO device type",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid Device Type\");",
									"});",
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Loblaw-Tenant-ID",
								"value": "{{tenant_id}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-PCid",
								"value": "{{pcid}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"items_to_merge\": [\n        {\n            \"seller_id\": \"5264\",\n            \"items\": [\n                {\n                    \"liam\": \"F0BK013870001_EA\",\n                    \"quantity\": 1\n                }\n            ]\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}/api/v1/carts/{{cart_id1}}/merge",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts",
								"{{cart_id1}}",
								"merge"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-4]- Verify an API behaviour to POST MERGE Cart  with the invalid data set i.e valid tenant_id , invalid pcid ,valid Cart_id the device type as IOS",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"cart_id\", jsonData.cart_id);",
									"",
									"pm.test(\"Successful POST request\", () => {",
									"  pm.expect(pm.response.code).to.be.oneOf([200,422]);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Loblaw-Tenant-ID",
								"value": "{{tenant_id}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-PCid",
								"value": "{{pcid1}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "IOS",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"items_to_merge\": [\n        {\n            \"seller_id\": \"5264\",\n            \"items\": [\n                {\n                    \"liam\": \"F0BK013870001_EA\",\n                    \"quantity\": 1\n                }\n            ]\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}/api/v1/carts/{{cart_id}}/merge",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts",
								"{{cart_id}}",
								"merge"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-4]- Verify an API behaviour to POST MERGE Cart  with the invalid data set i.e valid tenant_id , invalid pcid ,valid Cart_id the device type as ANDROID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"cart_id\", jsonData.cart_id);",
									"",
									"pm.test(\"Successful POST request\", () => {",
									"  pm.expect(pm.response.code).to.be.oneOf([200,422]);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Loblaw-Tenant-ID",
								"value": "{{tenant_id}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-PCid",
								"value": "{{pcid1}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "ANDROID",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"items_to_merge\": [\n        {\n            \"seller_id\": \"5264\",\n            \"items\": [\n                {\n                    \"liam\": \"F0BK013870001_EA\",\n                    \"quantity\": 1\n                }\n            ]\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}/api/v1/carts/{{cart_id}}/merge",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts",
								"{{cart_id}}",
								"merge"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-4]- Verify an API behaviour to POST MERGE Cart  with the invalid data set i.e valid tenant_id , invalid pcid ,valid Cart_id the device type as WEB",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"cart_id\", jsonData.cart_id);",
									"",
									"pm.test(\"Successful POST request\", () => {",
									"  pm.expect(pm.response.code).to.be.oneOf([200,422]);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Loblaw-Tenant-ID",
								"value": "{{tenant_id}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-PCid",
								"value": "{{pcid1}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "WEB",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"items_to_merge\": [\n        {\n            \"seller_id\": \"5264\",\n            \"items\": [\n                {\n                    \"liam\": \"F0BK013870001_EA\",\n                    \"quantity\": 1\n                }\n            ]\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}/api/v1/carts/{{cart_id}}/merge",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts",
								"{{cart_id}}",
								"merge"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-4]- Verify an API behaviour to POST MERGE Cart  with the invalid data set i.e valid tenant_id , invalid pcid ,valid Cart_id NO  device type",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid Device Type\");",
									"});",
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Loblaw-Tenant-ID",
								"value": "{{tenant_id}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-PCid",
								"value": "{{pcid1}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"items_to_merge\": [\n        {\n            \"seller_id\": \"5264\",\n            \"items\": [\n                {\n                    \"liam\": \"F0BK013870001_EA\",\n                    \"quantity\": 1\n                }\n            ]\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}/api/v1/carts/{{cart_id}}/merge",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts",
								"{{cart_id}}",
								"merge"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-5]- Verify an API behaviour to POST Merge Cart  with the invalid data set i.e invalid tenant_id , valid pcid ,valid Cart_id the device type as Android.",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid Tenant ID\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Loblaw-Tenant-ID",
								"value": "{{tenantId1}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-PCid",
								"value": "{{pcid}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "ANDROID",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"items_to_merge\": [\n        {\n            \"seller_id\": \"5264\",\n            \"items\": [\n                {\n                    \"liam\": \"F0BK013870001_EA\",\n                    \"quantity\": 1\n                }\n            ]\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}/api/v1/carts/{{cart_id1}}/merge",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts",
								"{{cart_id1}}",
								"merge"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-5]- Verify an API behaviour to POST Merge Cart  with the invalid data set i.e invalid tenant_id , valid pcid ,valid Cart_id the device type as IOS",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid Tenant ID\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Loblaw-Tenant-ID",
								"value": "{{tenantId1}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-PCid",
								"value": "{{pcid}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "IOS",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"items_to_merge\": [\n        {\n            \"seller_id\": \"5264\",\n            \"items\": [\n                {\n                    \"liam\": \"F0BK013870001_EA\",\n                    \"quantity\": 1\n                }\n            ]\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}/api/v1/carts/{{cart_id1}}/merge",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts",
								"{{cart_id1}}",
								"merge"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-5]- Verify an API behaviour to POST Merge Cart  with the invalid data set i.e invalid tenant_id , valid pcid ,valid Cart_id the device type as WEB",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid Tenant ID\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Loblaw-Tenant-ID",
								"value": "{{tenantId1}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-PCid",
								"value": "{{pcid}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "WEB",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"items_to_merge\": [\n        {\n            \"seller_id\": \"5264\",\n            \"items\": [\n                {\n                    \"liam\": \"F0BK013870001_EA\",\n                    \"quantity\": 1\n                }\n            ]\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}/api/v1/carts/{{cart_id1}}/merge",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts",
								"{{cart_id1}}",
								"merge"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-5]- Verify an API behaviour to POST Merge Cart  with the invalid data set i.e invalid tenant_id , valid pcid ,valid Cart_id  and NO device type",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid Tenant ID\");",
									"});",
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Loblaw-Tenant-ID",
								"value": "{{tenantId1}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-PCid",
								"value": "{{pcid}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"items_to_merge\": [\n        {\n            \"seller_id\": \"5264\",\n            \"items\": [\n                {\n                    \"liam\": \"F0BK013870001_EA\",\n                    \"quantity\": 1\n                }\n            ]\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}/api/v1/carts/{{cart_id1}}/merge",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts",
								"{{cart_id1}}",
								"merge"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-6]- Verify an API behaviour to POST MERGE Cart  with the invalid data set i.e valid tenant_id , valid pcid ,valid Cart_id and invalid Liam with the device type as WEB",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"cart_id\", jsonData.cart_id);",
									"",
									"pm.test(\"Successful POST request\", () => {",
									"  pm.expect(pm.response.code).to.be.oneOf([200,422]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Loblaw-Tenant-ID",
								"value": "{{tenant_id}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-PCid",
								"value": "{{pcid}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "WEB",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"items_to_merge\": [\n        {\n            \"seller_id\": \"5264\",\n            \"items\": [\n                {\n                    \"liam\": \"F0BK013873450001_EA\",\n                    \"quantity\": 1\n                }\n            ]\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}/api/v1/carts/{{cart_id}}/merge",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts",
								"{{cart_id}}",
								"merge"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-6]- Verify an API behaviour to POST MERGE Cart  with the invalid data set i.e valid tenant_id , valid pcid ,valid Cart_id and invalid Liam with the device type as IOS",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"cart_id\", jsonData.cart_id);",
									"",
									"pm.test(\"Successful POST request\", () => {",
									"  pm.expect(pm.response.code).to.be.oneOf([200,422]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Loblaw-Tenant-ID",
								"value": "{{tenant_id}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-PCid",
								"value": "{{pcid}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "IOS",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"items_to_merge\": [\n        {\n            \"seller_id\": \"5264\",\n            \"items\": [\n                {\n                    \"liam\": \"F0BK013873450001_EA\",\n                    \"quantity\": 1\n                }\n            ]\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}/api/v1/carts/{{cart_id}}/merge",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts",
								"{{cart_id}}",
								"merge"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-6]- Verify an API behaviour to POST MERGE Cart  with the invalid data set i.e valid tenant_id , valid pcid ,valid Cart_id and invalid Liam with the device type as ANDROID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"cart_id\", jsonData.cart_id);",
									"",
									"pm.test(\"Successful POST request\", () => {",
									"  pm.expect(pm.response.code).to.be.oneOf([200,422]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Loblaw-Tenant-ID",
								"value": "{{tenant_id}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-PCid",
								"value": "{{pcid}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "ANDROID",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"items_to_merge\": [\n        {\n            \"seller_id\": \"5264\",\n            \"items\": [\n                {\n                    \"liam\": \"F0BK013873450001_EA\",\n                    \"quantity\": 1\n                }\n            ]\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}/api/v1/carts/{{cart_id}}/merge",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts",
								"{{cart_id}}",
								"merge"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-6]- Verify an API behaviour to POST MERGE Cart  with the invalid data set i.e valid tenant_id , valid pcid ,valid Cart_id and invalid Liam with the NO device type",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid Device Type\");",
									"});",
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Loblaw-Tenant-ID",
								"value": "{{tenant_id}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-PCid",
								"value": "{{pcid}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"items_to_merge\": [\n        {\n            \"seller_id\": \"5264\",\n            \"items\": [\n                {\n                    \"liam\": \"F0BK013873450001_EA\",\n                    \"quantity\": 1\n                }\n            ]\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}/api/v1/carts/{{cart_id}}/merge",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts",
								"{{cart_id}}",
								"merge"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-7]- Verify an API behaviour to POST MERGE Cart  with the invalid data set i.e valid tenant_id , valid pcid ,valid Cart_id ,valid Liam but invalid Seller ID with the device type as Android.",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"cart_id\", jsonData.cart_id);",
									"",
									"pm.test(\"Successful POST request\", () => {",
									"  pm.expect(pm.response.code).to.be.oneOf([200,422]);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Loblaw-Tenant-ID",
								"value": "{{tenant_id}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-PCid",
								"value": "{{pcid}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "ANDROID",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"items_to_merge\": [\n        {\n            \"seller_id\": \"5564\",\n            \"items\": [\n                {\n                    \"liam\": \"F0BK013873450001_EA\",\n                    \"quantity\": 1\n                }\n            ]\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}/api/v1/carts/{{cart_id}}/merge",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts",
								"{{cart_id}}",
								"merge"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-7]- Verify an API behaviour to POST MERGE Cart  with the invalid data set i.e valid tenant_id , valid pcid ,valid Cart_id ,valid Liam but invalid Seller ID with the device type as WEB",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"cart_id\", jsonData.cart_id);",
									"",
									"pm.test(\"Successful POST request\", () => {",
									"  pm.expect(pm.response.code).to.be.oneOf([200,422]);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Loblaw-Tenant-ID",
								"value": "{{tenant_id}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-PCid",
								"value": "{{pcid}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "WEB",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"items_to_merge\": [\n        {\n            \"seller_id\": \"5564\",\n            \"items\": [\n                {\n                    \"liam\": \"F0BK013873450001_EA\",\n                    \"quantity\": 1\n                }\n            ]\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}/api/v1/carts/{{cart_id}}/merge",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts",
								"{{cart_id}}",
								"merge"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-7]- Verify an API behaviour to POST MERGE Cart  with the invalid data set i.e valid tenant_id , valid pcid ,valid Cart_id ,valid Liam but invalid Seller ID with the device type as IOS",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"cart_id\", jsonData.cart_id);",
									"",
									"pm.test(\"Successful POST request\", () => {",
									"  pm.expect(pm.response.code).to.be.oneOf([200,422]);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Loblaw-Tenant-ID",
								"value": "{{tenant_id}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-PCid",
								"value": "{{pcid}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "IOS",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"items_to_merge\": [\n        {\n            \"seller_id\": \"5564\",\n            \"items\": [\n                {\n                    \"liam\": \"F0BK013873450001_EA\",\n                    \"quantity\": 1\n                }\n            ]\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}/api/v1/carts/{{cart_id}}/merge",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts",
								"{{cart_id}}",
								"merge"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Domain [TC-7]- Verify an API behaviour to POST MERGE Cart  with the invalid data set i.e valid tenant_id , valid pcid ,valid Cart_id ,valid Liam but invalid Seller ID with NO device type",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"cart_id\", jsonData.cart_id);",
									"",
									"pm.test(\"Successful POST request\", () => {",
									"  pm.expect(pm.response.code).to.be.oneOf([200,422]);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Loblaw-Tenant-ID",
								"value": "{{tenant_id}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-PCid",
								"value": "{{pcid}}",
								"type": "default"
							},
							{
								"key": "X-Loblaw-Device-Type",
								"value": "WEB",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"items_to_merge\": [\n        {\n            \"seller_id\": \"5564\",\n            \"items\": [\n                {\n                    \"liam\": \"F0BK013873450001_EA\",\n                    \"quantity\": 1\n                }\n            ]\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}/api/v1/carts/{{cart_id}}/merge",
							"host": [
								"{{Host}}"
							],
							"path": [
								"api",
								"v1",
								"carts",
								"{{cart_id}}",
								"merge"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "pcid",
			"value": "fff5323a-d7c1-4e0f-b9ef-835c55a95da8"
		},
		{
			"key": "tenant_id",
			"value": "JOE_FRESH"
		},
		{
			"key": "banner_id",
			"value": "loblaws"
		},
		{
			"key": "cart_id",
			"value": null
		},
		{
			"key": "Host",
			"value": "http://platform-cart-api-qa.loblaw.digital"
		}
	]
}